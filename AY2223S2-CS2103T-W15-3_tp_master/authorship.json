[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"# CS2103T-W15-3 tP : Pied Piper","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"Pied Piper is a task management app to help project team leaders stay organized and focused on their priorities. With a clean and intuitive interface, this app will include features that will allow users to easily create tasks, assign them to team members, and set due dates. Whether you\u0027re managing personal projects or collaborating with a team, Pied Piper can help streamline your workflow and keep you on track.","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W15-3/tp/actions)","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"PawanPatil19":10,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"Cyrus-Krispin"},"content":"    archiveFileName \u003d \u0027piedpiper.jar\u0027","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"Cyrus-Krispin"},"content":"run {","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"Cyrus-Krispin"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":73,"Cyrus-Krispin":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Cyrus-Krispin"},"content":"### Cyrus Krispin Vijikumar","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Cyrus-Krispin"},"content":"\u003cimg src\u003d\"images/cyrus-krispin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Cyrus-Krispin"},"content":"[[github](https://github.com/cyrus-krispin)]","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Cyrus-Krispin"},"content":"[[portfolio](team/cyrus-krispin.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"### Lim Xuan Zheng","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"\u003cimg src\u003d\"images/zhengsterz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"[[github](http://github.com/zhengsterz)]","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"[[portfolio](team/zhengsterz.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"* Role: Team Member","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"* Responsibilities: Undecided","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"### Pawan Kishor Patil","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"\u003cimg src\u003d\"images/pawanpatil19.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"[[github](http://github.com/PawanPatil19)]","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"[[portfolio](team/pawanpatil19.md)]","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"* Role: Team Member","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"* Responsibilities: TBD","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"### Jerome Seet","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"\u003cimg src\u003d\"images/yaladah.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"[[github](http://github.com/yaldah)]","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"Yaladah"},"content":"[[portfolio](team/yaladah.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Yaladah"},"content":"* Role: Member","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"Yaladah"},"content":"* Responsibilities: TBD","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"jereldlimjy"},"content":"### Jereld Lim","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jereldlimjy"},"content":"\u003cimg src\u003d\"images/jereldlimjy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"jereldlimjy"},"content":"[[github](http://github.com/jereldlimjy)]","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"jereldlimjy"},"content":"[[portfolio](team/jereldlimjy.md)]","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"jereldlimjy"},"content":"* Role: Team Member","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"jereldlimjy"},"content":"* Responsibilities: TBD","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"zhengsterz":6,"Yaladah":6,"-":33,"PawanPatil19":6,"jereldlimjy":6,"Cyrus-Krispin":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"## **Introduction**","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"Pied Piper is a desktop application for managing projects with a significant level of complexity. It functions","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"via a Command-Line Interface (CLI) that allows more efficient management of events.","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"PawanPatil19"},"content":"* stores all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"PawanPatil19"},"content":"* stores all `Task` objects (which are contained in a `UniqueTaskList` object).","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"PawanPatil19"},"content":"* stores the currently \u0027selected\u0027 `Task` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cTask\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"PawanPatil19"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in Pied Piper, which `Person` references. This allows `Pied Piper` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"Yaladah"},"content":"### Delete/deletetask feature","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"Yaladah"},"content":"#### Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"Yaladah"},"content":"The implementation of the delete/deletetask function is facilitated by `LogicManager`. It takes user input as 2 arguments, the command word being either `delete` or `deletetask`, depending on whether the user wants to delete a person or task respectively. The second argument is an index, denoting the index of the person or task the user wishes to delete.","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"Yaladah"},"content":"The format is as follows:","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"Yaladah"},"content":"- `delete {Person_ID}`","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"Yaladah"},"content":"- `deletetask {TASK_ID}`","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"Yaladah"},"content":"Given below is an example scenario and how the delete function woks at each step.","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"Yaladah"},"content":"Step 1. The user executes `delete 1` command to delete the 5th task in Pied Piper. The command is read by `LogicManager`, which parses the user\u0027s input into a `commandText`.","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"Yaladah"},"content":"Step 2. `LogicManager` then calls `parseCommand` on the commandText in `AddressBookParser`.","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"Yaladah"},"content":"Step 3. `AddressBookParser` then uses `Matcher` to group the commandText into `commandWord` and `arguments`.","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"Yaladah"},"content":"Step 4. A `DeleteCommandParser` is created, which generated a new `DeleteCommand`.","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"Yaladah"},"content":"Step 5. `LogicManager` then calls `execute` in `DeleteCommand`, which carries out the deletion if the task exists. It then returns a `CommandResult` to be displayed to the user to acknowledge whether the deletion has taken place.","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"Yaladah"},"content":"**Note:** The command can only work if there is at least 1 person or task present in Pied Piper, and the specified index must not be greater than the index of the last item on the list.","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"Yaladah"},"content":"**Note:** The same sequence applies to the deletion of tasks, but the following classes are different:","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"Yaladah"},"content":"1. `DeleteCommandParser` \u0026rarr; `DeleteTaskCommandParser`","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"Yaladah"},"content":"2. `DeleteCommand` \u0026rarr; `DeleteTaskCommand`","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"Yaladah"},"content":"The following sequence diagram shows how the delete operation works:","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"Yaladah"},"content":"\u003cimg src\u003d\"images/DeleteCommandUML.png\"/\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"zhengsterz"},"content":"- NUS Computing Students","lastModifiedDate":"2023-03-07"},{"lineNumber":301,"author":{"gitId":"zhengsterz"},"content":"- has a need to manage a project with significant complexity","lastModifiedDate":"2023-03-07"},{"lineNumber":302,"author":{"gitId":"zhengsterz"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2023-03-07"},{"lineNumber":303,"author":{"gitId":"zhengsterz"},"content":"- can type fast","lastModifiedDate":"2023-03-07"},{"lineNumber":304,"author":{"gitId":"zhengsterz"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2023-03-07"},{"lineNumber":305,"author":{"gitId":"zhengsterz"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2023-03-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"zhengsterz"},"content":"**Value proposition**:","lastModifiedDate":"2023-03-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"zhengsterz"},"content":"- Adding of various tasks with descriptions.","lastModifiedDate":"2023-03-07"},{"lineNumber":310,"author":{"gitId":"zhengsterz"},"content":"- Get an overview via the List view so that you can find the event that you need easily.","lastModifiedDate":"2023-03-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":312,"author":{"gitId":"zhengsterz"},"content":"### User Stories","lastModifiedDate":"2023-03-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":314,"author":{"gitId":"zhengsterz"},"content":"**Priorities**: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2023-03-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":316,"author":{"gitId":"zhengsterz"},"content":"| Priority | As a …​ | I want to …​                          | So that I can…​                                                     |","lastModifiedDate":"2023-03-07"},{"lineNumber":317,"author":{"gitId":"zhengsterz"},"content":"| -------- | ---- |---------------------------------------|---------------------------------------------------------------------|","lastModifiedDate":"2023-03-19"},{"lineNumber":318,"author":{"gitId":"zhengsterz"},"content":"| `* * *`  | user | create tasks                          | keep track of the tasks I need to accomplish                        |","lastModifiedDate":"2023-03-07"},{"lineNumber":319,"author":{"gitId":"zhengsterz"},"content":"| `* * *`  | user | delete tasks                          | remove tasks that are outdated or specified incorrectly             |","lastModifiedDate":"2023-03-07"},{"lineNumber":320,"author":{"gitId":"zhengsterz"},"content":"| `* * *`  | user | view each team member\u0027s tasks         | have a clear and easily understandable list of what they have to do |","lastModifiedDate":"2023-03-07"},{"lineNumber":321,"author":{"gitId":"zhengsterz"},"content":"| `* * *`  | user | assign tasks                          | keep track of who is responsible for which task                     |","lastModifiedDate":"2023-03-07"},{"lineNumber":322,"author":{"gitId":"zhengsterz"},"content":"| `* * *`  | user | assign roles                          | remember the responsibilities of each member                        |","lastModifiedDate":"2023-03-07"},{"lineNumber":323,"author":{"gitId":"zhengsterz"},"content":"| `* * *`  | user | create tasks with a deadline          | see the due date of the task easily                                 |","lastModifiedDate":"2023-03-19"},{"lineNumber":324,"author":{"gitId":"zhengsterz"},"content":"| `* * *`  | user | create tasks that are events          | keep track of events we conduct as a group                          |","lastModifiedDate":"2023-03-19"},{"lineNumber":325,"author":{"gitId":"zhengsterz"},"content":"| `* * *`  | user | comment on tasks                      | record my feedback for each accomplished task                       |","lastModifiedDate":"2023-03-19"},{"lineNumber":326,"author":{"gitId":"zhengsterz"},"content":"| `* * *`  | user | mark a task as completed               | have a clear view of what tasks are accomplished                    |","lastModifiedDate":"2023-03-19"},{"lineNumber":327,"author":{"gitId":"zhengsterz"},"content":"| `* * *`  | user | unmark a task as uncompleted          | undo any possible false marking of tasks                            |","lastModifiedDate":"2023-03-19"},{"lineNumber":328,"author":{"gitId":"zhengsterz"},"content":"| `* * *`  | user | assign scores for each completed task | better evaluate overall performance of teammates                    |","lastModifiedDate":"2023-03-19"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"zhengsterz"},"content":"(For all use cases below, the **System** is `Pied Piper` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-07"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"zhengsterz"},"content":"**Use case: Add a person**","lastModifiedDate":"2023-03-07"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"zhengsterz"},"content":"2.  Pied Piper shows a list of persons","lastModifiedDate":"2023-03-07"},{"lineNumber":340,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"zhengsterz"},"content":"4.  Pied Piper deletes the person","lastModifiedDate":"2023-03-07"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"zhengsterz"},"content":"    * 3a1. Pied Piper shows an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":355,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":357,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":358,"author":{"gitId":"zhengsterz"},"content":"**Use case: Create a task**","lastModifiedDate":"2023-03-07"},{"lineNumber":359,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":360,"author":{"gitId":"zhengsterz"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":361,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":362,"author":{"gitId":"Yaladah"},"content":"1. User requests to add a specific task in the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":363,"author":{"gitId":"Yaladah"},"content":"2. Pied Piper adds the task.","lastModifiedDate":"2023-03-07"},{"lineNumber":364,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":365,"author":{"gitId":"zhengsterz"},"content":"    Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":366,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":367,"author":{"gitId":"zhengsterz"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":368,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":369,"author":{"gitId":"zhengsterz"},"content":"* 1a. The task already exists.","lastModifiedDate":"2023-03-07"},{"lineNumber":370,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":371,"author":{"gitId":"zhengsterz"},"content":"  Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":372,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":373,"author":{"gitId":"zhengsterz"},"content":"* 1a. The given specifications are invalid.","lastModifiedDate":"2023-03-07"},{"lineNumber":374,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":375,"author":{"gitId":"zhengsterz"},"content":"    * 1a1. Pied Piper shows an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"Yaladah"},"content":"**Use case: Delete a task**","lastModifiedDate":"2023-03-07"},{"lineNumber":380,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":381,"author":{"gitId":"Yaladah"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":382,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":383,"author":{"gitId":"Yaladah"},"content":"1. User requests to delete a specified task in the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":384,"author":{"gitId":"Yaladah"},"content":"2. Pied Piper removes the task.","lastModifiedDate":"2023-03-07"},{"lineNumber":385,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":386,"author":{"gitId":"Yaladah"},"content":"    Use case ends","lastModifiedDate":"2023-03-07"},{"lineNumber":387,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":388,"author":{"gitId":"Yaladah"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":389,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":390,"author":{"gitId":"Yaladah"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-03-07"},{"lineNumber":391,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":392,"author":{"gitId":"Yaladah"},"content":"    Use case ends","lastModifiedDate":"2023-03-07"},{"lineNumber":393,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":394,"author":{"gitId":"Yaladah"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2023-03-07"},{"lineNumber":395,"author":{"gitId":"Yaladah"},"content":"  * 1a1. Pied Piper shows an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":396,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":397,"author":{"gitId":"Yaladah"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"Cyrus-Krispin"},"content":"**Use Case: view tasks**","lastModifiedDate":"2023-03-07"},{"lineNumber":400,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":401,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":402,"author":{"gitId":"Cyrus-Krispin"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":403,"author":{"gitId":"Cyrus-Krispin"},"content":"1. User requests to view all tasks","lastModifiedDate":"2023-03-07"},{"lineNumber":404,"author":{"gitId":"Cyrus-Krispin"},"content":"2. Pied Piper displays all existing tasks as a numbered list","lastModifiedDate":"2023-03-07"},{"lineNumber":405,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":406,"author":{"gitId":"Cyrus-Krispin"},"content":"    Use case ends","lastModifiedDate":"2023-03-07"},{"lineNumber":407,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":408,"author":{"gitId":"Cyrus-Krispin"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":409,"author":{"gitId":"Cyrus-Krispin"},"content":"* 1a. No existing tasks","lastModifiedDate":"2023-03-07"},{"lineNumber":410,"author":{"gitId":"Cyrus-Krispin"},"content":"  * 1a1. Display message to user that there are no existing tasks","lastModifiedDate":"2023-03-07"},{"lineNumber":411,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":412,"author":{"gitId":"Cyrus-Krispin"},"content":"    Use case ends","lastModifiedDate":"2023-03-07"},{"lineNumber":413,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":414,"author":{"gitId":"PawanPatil19"},"content":"**Use case: mark a task**","lastModifiedDate":"2023-03-24"},{"lineNumber":415,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":416,"author":{"gitId":"PawanPatil19"},"content":"**MSS**","lastModifiedDate":"2023-03-24"},{"lineNumber":417,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":418,"author":{"gitId":"PawanPatil19"},"content":"1. User requests to mark a specified task in the list with a score.","lastModifiedDate":"2023-03-24"},{"lineNumber":419,"author":{"gitId":"PawanPatil19"},"content":"2. Pied Piper marks the task with a valid score.","lastModifiedDate":"2023-03-24"},{"lineNumber":420,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":421,"author":{"gitId":"PawanPatil19"},"content":"    Use case ends","lastModifiedDate":"2023-03-24"},{"lineNumber":422,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":423,"author":{"gitId":"PawanPatil19"},"content":"**Extensions**","lastModifiedDate":"2023-03-24"},{"lineNumber":424,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":425,"author":{"gitId":"PawanPatil19"},"content":"* 1a. The task is not assigned.","lastModifiedDate":"2023-03-24"},{"lineNumber":426,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":427,"author":{"gitId":"PawanPatil19"},"content":"    Use case ends","lastModifiedDate":"2023-03-24"},{"lineNumber":428,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":429,"author":{"gitId":"PawanPatil19"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2023-03-24"},{"lineNumber":430,"author":{"gitId":"PawanPatil19"},"content":"  * 1a1. Pied Piper shows an error message.","lastModifiedDate":"2023-03-24"},{"lineNumber":431,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":432,"author":{"gitId":"PawanPatil19"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-03-24"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":434,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"PawanPatil19"},"content":"4.  The response to any use action should become visible within 2 seconds.","lastModifiedDate":"2023-03-07"},{"lineNumber":440,"author":{"gitId":"PawanPatil19"},"content":"5.  The user interface should be intuitive enough for users who are not IT-savvy.","lastModifiedDate":"2023-03-07"},{"lineNumber":441,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":502,"author":{"gitId":"Cyrus-Krispin"},"content":"### Clearing people data","lastModifiedDate":"2023-03-24"},{"lineNumber":503,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":504,"author":{"gitId":"Cyrus-Krispin"},"content":"1. Clearing data of all people while list of all people is being shown","lastModifiedDate":"2023-03-24"},{"lineNumber":505,"author":{"gitId":"Cyrus-Krispin"},"content":"    1. Prerequisites: List all persons using the `list` command.","lastModifiedDate":"2023-03-24"},{"lineNumber":506,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":507,"author":{"gitId":"Cyrus-Krispin"},"content":"    1. Test case: `clear`\u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":508,"author":{"gitId":"Cyrus-Krispin"},"content":"       Expected: Every person is removed. Status message is displayed.","lastModifiedDate":"2023-03-24"},{"lineNumber":509,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":510,"author":{"gitId":"Cyrus-Krispin"},"content":"### Editing a person","lastModifiedDate":"2023-03-24"},{"lineNumber":511,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":512,"author":{"gitId":"Cyrus-Krispin"},"content":"1. Editing details of person","lastModifiedDate":"2023-03-24"},{"lineNumber":513,"author":{"gitId":"Cyrus-Krispin"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons on the list. ","lastModifiedDate":"2023-03-24"},{"lineNumber":514,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":515,"author":{"gitId":"Cyrus-Krispin"},"content":"    1. Test case: `edit 1 n/James Lee e/jameslee@example.com`\u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":516,"author":{"gitId":"Cyrus-Krispin"},"content":"       Expected: Person name and email is updated. Status message is shown.","lastModifiedDate":"2023-03-24"},{"lineNumber":517,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":518,"author":{"gitId":"Cyrus-Krispin"},"content":"    1. Test case: `edit 0 n/John Doe p/22224444`\u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":519,"author":{"gitId":"Cyrus-Krispin"},"content":"       Expected: No person is edited. Error details are shown in the status message.","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"zhengsterz":52,"Yaladah":53,"-":354,"PawanPatil19":26,"Cyrus-Krispin":34}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"Pied Piper is a user-friendly task management application tailored for computing students. The app helps them stay organised, collaborate with peers, and prepare for real-world situations by simulating performance reviews. Key features include creating tasks, assigning tasks to team members, setting due dates, rating tasks out of 5, and providing feedback through comments. Ideal for personal projects and team collaboration, Pied Piper aims to improve productivity and equip computing students with valuable skills for their future careers.","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Cyrus-Krispin"},"content":"1. Download the latest `piedpiper.jar` from [here](https://github.com/AY2223S2-CS2103T-W15-3/tp/releases).","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Cyrus-Krispin"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for Pied Piper.","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Cyrus-Krispin"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar piedpiper.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"jereldlimjy"},"content":"* Words within `Curly Bracket {}` are must have parameters.","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":40,"author":{"gitId":"Cyrus-Krispin"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `view`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Cyrus-Krispin"},"content":"  e.g. if the command specifies `view 123`, it will be interpreted as `view`.","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"### Creating a task: `todo`","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"jereldlimjy"},"content":"Creates a new task","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"Format: `todo task/{TASK_NAME}`","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"Example:","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"jereldlimjy"},"content":"* `todo task/Edit User Guide`","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"### Creating a task with a deadline: `deadline`","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"jereldlimjy"},"content":"Creates a new deadline task","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"Yaladah"},"content":"Format: `deadline task/{TASK_NAME} by/{DD/MM/YYYY}`","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Cyrus-Krispin"},"content":"Example:","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"Cyrus-Krispin"},"content":"* `deadline task/Complete Assignment by/12/09/2021`","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"### Creating a task that is an event: `event`","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"jereldlimjy"},"content":"Creates a new event task","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"Format: `event task/{TASK_NAME} from/{DD/MM/YYYY} to/{DD/MM/YYYY}`","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"Example:","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"* `event task/Manage Open House from/11/12/2023 to/16/12/2023`","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"### Commenting on a task: `comment`","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"Adds a comment to a task","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"Format: `comment t/{TASK_ID} c/{COMMENTS} `","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"zhengsterz"},"content":"Example:","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"zhengsterz"},"content":"* `comment t/1 c/task was done well and on time`","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"Yaladah"},"content":"### Editing a person: `edit`","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"jereldlimjy"},"content":"Edits the properties of an existing person in the persons list","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"Yaladah"},"content":"Format: `edit INDEX [n/{NAME}] [p/{PHONE}] [e/{EMAIL}] [a/{ADDRESS}] [r/{ROLE}]`","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"Yaladah"},"content":"Example:","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"Yaladah"},"content":"* `edit 1 p/98761234 e/john@nus.com`","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Yaladah"},"content":"### Editing a task: `edittask`","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"jereldlimjy"},"content":"Edits the properties of an existing task in the task list","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"Yaladah"},"content":"Format: `edittask INDEX type/{TASK_TYPE} [task/{TASK_DESCRIPTION}] [{DATE}]`","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"Yaladah"},"content":"Note: ","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"Yaladah"},"content":"* To denote todo, deadline and event tasks, parameters for `TASK_TYPE` are `T`, `D` and `E` respectively.","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"Yaladah"},"content":"* When editing a task to change types, the {DATE} parameters are as follows:","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"Yaladah"},"content":"  * `deadline`: `by/{DD/MM/YYYY}`","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"Yaladah"},"content":"  * `event`: `from/{DD/MM/YYYY} to/{DD/MM/YYYY}`","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"Cyrus-Krispin"},"content":"### Assigning task to member: `assign`","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"Cyrus-Krispin"},"content":"Assign a task to a person","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"PawanPatil19"},"content":"Format: `assign  t/{TASK_ID} i/{MEMBER_ID}`","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"PawanPatil19"},"content":"*  `assign t/1 i/3`","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"jereldlimjy"},"content":"### Marking a task: `mark`","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"PawanPatil19"},"content":"Marks a task as completed and give score to the marked task","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"PawanPatil19"},"content":"Format: `mark t/{TASK_ID} s/{PERFORMANCE_SCORE}`","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"PawanPatil19"},"content":"* `mark t/1 s/4`","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"jereldlimjy"},"content":"### Unmarking a task: `unmark`","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"jereldlimjy"},"content":"Unmarks a task as not completed","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"PawanPatil19"},"content":"Format: `unmark t/{TASK_ID}`","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"PawanPatil19"},"content":"* `unmark t/1`","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"jereldlimjy"},"content":"### Deleting a person: `delete`","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"Yaladah"},"content":"Deletes an existing person","lastModifiedDate":"2023-03-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"Yaladah"},"content":"Format: `delete {MEMBER_ID}`","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"Yaladah"},"content":"* `delete 1`","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"jereldlimjy"},"content":"### Deleting a task: `deletetask`","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":150,"author":{"gitId":"Yaladah"},"content":"Deletes an existing task","lastModifiedDate":"2023-03-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":152,"author":{"gitId":"Yaladah"},"content":"Format: `deletetask {TASK_ID}`","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":154,"author":{"gitId":"Yaladah"},"content":"Examples:","lastModifiedDate":"2023-03-10"},{"lineNumber":155,"author":{"gitId":"Yaladah"},"content":"* `deletetask 2`","lastModifiedDate":"2023-03-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"jereldlimjy"},"content":"### Viewing tasks: `view`","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"Cyrus-Krispin"},"content":"Shows all tasks","lastModifiedDate":"2023-03-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"Cyrus-Krispin"},"content":"Format: `view`","lastModifiedDate":"2023-03-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"jereldlimjy"},"content":"### Viewing statistics: `review`","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"jereldlimjy"},"content":"Shows task and score statistics of all persons in the persons list","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"jereldlimjy"},"content":"Format: `review`","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"Cyrus-Krispin"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Pied Piper home folder.","lastModifiedDate":"2023-03-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"Cyrus-Krispin"},"content":"**Assign** | `assign  t/{TASK_ID} n/{MEMBER_NAME}`\u003cbr\u003e e.g., `assign t/1 n/John Doe`","lastModifiedDate":"2023-03-07"},{"lineNumber":185,"author":{"gitId":"jereldlimjy"},"content":"**Comment** | `comment t/{TASK_ID} c/{COMMENTS} ` \u003cbr\u003e e.g., `comment t/1 c/task was done well and on time`","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"jereldlimjy"},"content":"**Deadline** | `deadline task/{TASK_NAME}  by/{DD/MM/YYYY}` \u003cbr\u003e e.g., `deadline task/Complete Assignment by/12/09/2021`","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"Yaladah"},"content":"**Delete person** | `delete {MEMBER_ID}`\u003cbr\u003e e.g., `delete 1`","lastModifiedDate":"2023-03-10"},{"lineNumber":188,"author":{"gitId":"Yaladah"},"content":"**Delete task** | `deletetask  {TASK_ID}`\u003cbr\u003e e.g., `deletetask 2`","lastModifiedDate":"2023-03-10"},{"lineNumber":189,"author":{"gitId":"jereldlimjy"},"content":"**Edit person** | `edit INDEX [n/{NAME}] [p/{PHONE}] [e/{EMAIL}] [a/{ADDRESS}] [r/{ROLE}]` \u003cbr\u003e e.g., `edit 1 p/98761234 e/john@nus.com`","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"jereldlimjy"},"content":"**Edit task** | `edittask INDEX type/{TASK_TYPE} [task/{TASK_DESCRIPTION}] [{DATE}]` \u003cbr\u003e e.g., `edittask 1 type/T`","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"jereldlimjy"},"content":"**Event** | `event task/{TASK_NAME} from/{DD/MM/YYYY} to/{DD/MM/YYYY}` \u003cbr\u003e e.g., `event task/Manage Open House from/11/12/2023 to 16/12/2023`","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"jereldlimjy"},"content":"**List tasks** | `list`","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"jereldlimjy"},"content":"**Mark** | `mark t/{TASK_ID} s/{PERFORMANCE_SCORE}` \u003cbr\u003e e.g., `mark t/1 s/4`","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"jereldlimjy"},"content":"**Todo** | `todo task/{TASK_NAME}` \u003cbr\u003e e.g., `todo task/Edit User Guide`","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"jereldlimjy"},"content":"**Role** | `role n/{MEMBER_NAME} r/{ROLE}` \u003cbr\u003e e.g., `role n/John Doe r/Leader`","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"jereldlimjy"},"content":"**Unmark** | `unmark t/{TASK_ID}` \u003cbr\u003e e.g., `unmark t/1`","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"jereldlimjy"},"content":"**View persons** | `view`","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"jereldlimjy"},"content":"**View statistics** | `review`","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"zhengsterz":18,"Yaladah":25,"-":102,"jereldlimjy":33,"PawanPatil19":7,"Cyrus-Krispin":13}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"PawanPatil19"},"content":"    content: \"Pied Piper\";","lastModifiedDate":"2023-03-06"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"PawanPatil19":1}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"title: Pied Piper","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"**Pied Piper is a desktop application for managing your tasks within a team.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"* If you are interested in using Pied Piper, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"* If you are interested about developing Pied Piper, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":15,"jereldlimjy":4}},{"path":"docs/team/cyrus-krispin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Cyrus-Krispin"},"content":"## Cyrus-Krispin\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"Cyrus-Krispin"},"content":"### Overview","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"Cyrus-Krispin"},"content":"`To be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Cyrus-Krispin"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Cyrus-Krispin"},"content":"```agsl","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Cyrus-Krispin"},"content":"Code contributed","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Cyrus-Krispin"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Cyrus-Krispin"},"content":"```agsl","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Cyrus-Krispin"},"content":"Enhancements implemented","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Cyrus-Krispin"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Cyrus-Krispin"},"content":"```agsl","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Cyrus-Krispin"},"content":"Contributions to the UG","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Cyrus-Krispin"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Cyrus-Krispin"},"content":"```agsl","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Cyrus-Krispin"},"content":"Contributions to the DG","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Cyrus-Krispin"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Cyrus-Krispin"},"content":"```agsl","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Cyrus-Krispin"},"content":"Contributions to team-based tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Cyrus-Krispin"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Cyrus-Krispin"},"content":"```agsl","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Cyrus-Krispin"},"content":"Review/mentoring contributions","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"Cyrus-Krispin"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Cyrus-Krispin"},"content":"```agsl","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"Cyrus-Krispin"},"content":"Contributions beyond the project team","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Cyrus-Krispin"},"content":"```","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Cyrus-Krispin":28}},{"path":"docs/team/jereldlimjy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"layout: page","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"title: Jereld\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"* **New Feature**:","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"    * *To be updated*","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"* **Project management**:","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"    * *To be updated*","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"    * *To be updated*","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"    * User Guide:","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"        * *To be updated*","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"        * *To be updated*","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"* **Community**:","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"    * *To be updated*","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"* **Tools**:","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"    * *To be updated*","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"jereldlimjy":34}},{"path":"docs/team/pawanpatil19.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"## Pawan Kishor Patil","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"Hi 👋","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"I am a Year 2 Computer Science Student from India.","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"![My Picture](../images/pawanpatil19.png)","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"PawanPatil19":6}},{"path":"docs/team/yaladah.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"## Jerome Seet How Ee","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"I’m a Y2 CS student. I’m from Singapore and I enjoy getting in calls with friends and playing casual games.","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"![My picture](../images/yaladah.png)","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"Yaladah":5}},{"path":"docs/team/zhengsterz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"title: zhengsterz\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"zhengsterz":1,"-":45}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.storage.JsonTaskStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.storage.TaskStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"Cyrus-Krispin"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, false);","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"    protected TaskBookModel taskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"PawanPatil19"},"content":"        TaskStorage taskStorage \u003d new JsonTaskStorage(userPrefs.getTaskBookFilePath());","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"PawanPatil19"},"content":"        storage \u003d new StorageManager(addressBookStorage, taskStorage, userPrefsStorage);","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel \u003d initTaskBookModelManager(storage, userPrefs);","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"PawanPatil19"},"content":"        logic \u003d new LogicManager(model, taskBookModel, storage);","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"PawanPatil19"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"PawanPatil19"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"PawanPatil19"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel initTaskBookModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"PawanPatil19"},"content":"        Optional\u003cReadOnlyTaskBook\u003e taskBookOptional;","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"PawanPatil19"},"content":"        ReadOnlyTaskBook initialData;","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"PawanPatil19"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"PawanPatil19"},"content":"            taskBookOptional \u003d storage.readTasks();","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"PawanPatil19"},"content":"            if (!taskBookOptional.isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"PawanPatil19"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"PawanPatil19"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"PawanPatil19"},"content":"            initialData \u003d taskBookOptional.orElseGet(SampleDataUtil::getEmptyTaskBook);","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"PawanPatil19"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"PawanPatil19"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"PawanPatil19"},"content":"            initialData \u003d new TaskBook();","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"PawanPatil19"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"PawanPatil19"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"PawanPatil19"},"content":"            initialData \u003d new TaskBook();","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"PawanPatil19"},"content":"        return new TaskBookModelManager(initialData, userPrefs);","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"PawanPatil19"},"content":"        logger.info(\"Starting Pied Piper \" + MainApp.VERSION);","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"PawanPatil19"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Pied Piper ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":178,"PawanPatil19":39,"Cyrus-Krispin":1}},{"path":"src/main/java/seedu/address/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"    private Path taskPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"    public Path getTaskPrefsFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"        return taskPrefsFilePath;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"    public void setTaskPrefsFilePath(Path taskPrefsFilePath) {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"        this.taskPrefsFilePath \u003d taskPrefsFilePath;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":63,"PawanPatil19":10}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"    public static final String MESSAGE_INVALID_SCORE \u003d \"The score provided is invalid\";","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"    public static final String MESSAGE_TASK_ALREADY_DONE \u003d \"The task is already completed\";","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"    public static final String MESSAGE_NOT_EVENT_TASK \u003d \"The parameters used are for event tasks.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yaladah":2,"-":12,"PawanPatil19":2}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":54,"PawanPatil19":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"PawanPatil19"},"content":"    ReadOnlyTaskBook getTaskBook();","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"PawanPatil19"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":50,"PawanPatil19":9}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel taskBookModel \u003d null;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"PawanPatil19"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model}, {@code TaskBookModel} and {@code Storage}.","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"     * @param model","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskBookModel","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"PawanPatil19"},"content":"     * @param storage","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"PawanPatil19"},"content":"    public LogicManager(Model model, TaskBookModel taskBookModel, Storage storage) {","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"PawanPatil19"},"content":"        this.taskBookModel \u003d taskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"PawanPatil19"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":63,"author":{"gitId":"PawanPatil19"},"content":"        commandResult \u003d command.execute(model, taskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"PawanPatil19"},"content":"            storage.saveTasks(taskBookModel.getTaskBook());","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":80,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"PawanPatil19"},"content":"    public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"PawanPatil19"},"content":"        return taskBookModel.getTaskBook();","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"PawanPatil19"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"PawanPatil19"},"content":"        return taskBookModel.getTaskBookFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":95,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"PawanPatil19"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"PawanPatil19"},"content":"        return taskBookModel.getFilteredTaskList();","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":80,"PawanPatil19":34}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Cyrus-Krispin"},"content":"            + \"[\" + PREFIX_ROLE + \"ROLE]...\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Cyrus-Krispin"},"content":"            + PREFIX_ROLE + \"friends \"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Cyrus-Krispin"},"content":"            + PREFIX_ROLE + \"owesMoney\";","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"PawanPatil19"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":62,"PawanPatil19":2,"Cyrus-Krispin":4}},{"path":"src/main/java/seedu/address/logic/commands/AssignTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_INDEX;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.model.TaskBookModel.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Comment;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":" * Assigns a task to a member of the team","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"public class AssignTaskCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"    public static final String COMMAND_WORD \u003d \"assign\";","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Assigns a task to a particular user.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"            + PREFIX_TASK_INDEX + \"TASK_ID \"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"            + PREFIX_PERSON_INDEX + \"MEMBER_ID\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"            + PREFIX_TASK_INDEX + \"3 \"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"            + PREFIX_PERSON_INDEX + \"2\";","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Assigned task to %s \\n %s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"    private final Index toAssignTask;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"    private final Index toAssignMember;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"     * Creates an AssignTaskCommand to add the specified {@code DeadlineTask}","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskIndex","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"     * @param memberIndex","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"    public AssignTaskCommand(Index taskIndex, Index memberIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(taskIndex);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(memberIndex);","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"PawanPatil19"},"content":"        this.toAssignTask \u003d taskIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"PawanPatil19"},"content":"        this.toAssignMember \u003d memberIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"     * Executes the assign task command and returns the result message.","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"PawanPatil19"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"PawanPatil19"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"PawanPatil19"},"content":"        List\u003cTask\u003e lastShownList \u003d taskBookModel.getFilteredTaskList();","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"PawanPatil19"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"PawanPatil19"},"content":"        if (!taskBookModel.hasTaskIndex(toAssignTask)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"PawanPatil19"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"PawanPatil19"},"content":"        if (!model.hasPersonIndex(toAssignMember)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"PawanPatil19"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"PawanPatil19"},"content":"        Task taskToAssign \u003d lastShownList.get(toAssignTask.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"PawanPatil19"},"content":"        Person personToAssign \u003d lastShownPersonList.get(toAssignMember.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"PawanPatil19"},"content":"        Task assignedTask \u003d createAssignedTask(taskToAssign, toAssignMember, personToAssign);","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"PawanPatil19"},"content":"        //model.assignTask(toAssignTask, toAssignMember);","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.assignTask(taskToAssign, assignedTask, toAssignTask);","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"PawanPatil19"},"content":"        String taskString \u003d taskToAssign.toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"PawanPatil19"},"content":"        String personString \u003d personToAssign.getName().toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"PawanPatil19"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personString, taskString));","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"PawanPatil19"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"PawanPatil19"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"PawanPatil19"},"content":"                || (other instanceof AssignTaskCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"PawanPatil19"},"content":"                \u0026\u0026 toAssignTask.equals(((AssignTaskCommand) other).toAssignTask)","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"PawanPatil19"},"content":"                \u0026\u0026 toAssignMember.equals(((AssignTaskCommand) other).toAssignMember));","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"PawanPatil19"},"content":"    private static Task createAssignedTask(Task taskToAssign, Index personToAssign, Person personAssigned) {","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"PawanPatil19"},"content":"        TaskDescription taskDesc \u003d taskToAssign.getDescription();","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"PawanPatil19"},"content":"        String taskDate \u003d taskToAssign.getDate().toString();","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"PawanPatil19"},"content":"        String taskType \u003d taskToAssign.getTaskType();","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"PawanPatil19"},"content":"        Task assignedTask \u003d new Task(taskDesc, taskDate, taskType);","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"PawanPatil19"},"content":"        String personAssignedName \u003d personAssigned.getName().toString();","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"PawanPatil19"},"content":"        String personAssignedRole \u003d personAssigned.getRole().toString();","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"PawanPatil19"},"content":"        assignedTask.assignPerson(personToAssign, personAssignedName, personAssignedRole);","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"PawanPatil19"},"content":"        boolean status \u003d taskToAssign.isDone();","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"PawanPatil19"},"content":"        assignedTask.setStatus(status);","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"PawanPatil19"},"content":"        Comment comment \u003d taskToAssign.getTaskComment();","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"PawanPatil19"},"content":"        assignedTask.setTaskComment(comment);","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"PawanPatil19"},"content":"        return assignedTask;","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"PawanPatil19"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"PawanPatil19":106,"jereldlimjy":2}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) {","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":22,"PawanPatil19":2}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"    public abstract CommandResult execute(Model model, TaskBookModel taskBookModel) throws CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":19,"PawanPatil19":2}},{"path":"src/main/java/seedu/address/logic/commands/CommentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.model.TaskBookModel.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Comment;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Score;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":" * Adds a CommentTask to the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"public class CommentCommand extends Command {","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"    public static final String COMMAND_WORD \u003d \"comment\";","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a comment to a specific task \"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"            + PREFIX_TASK_INDEX + \"TASK_ID \"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"            + PREFIX_COMMENT + \"COMMENT \"","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"            + PREFIX_TASK_INDEX + \"1\"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"            + PREFIX_COMMENT + \"Joe has accomplished this task exceptionally well\";","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_COMMENT_SUCCESS \u003d \"New comment added: %1$s to Task: %2$s \\n \";","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    private final Comment toAddComment;","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"    private final Index toReceiveComment;","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"     * Creates an AddCommand to add the specified {@code DeadlineTask}","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"    public CommentCommand(Index taskIndex, Comment comment) {","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(taskIndex);","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(comment);","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        toAddComment \u003d comment;","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"        toReceiveComment \u003d taskIndex;","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"PawanPatil19"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(taskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"        List\u003cTask\u003e lastShownList \u003d taskBookModel.getFilteredTaskList();","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"PawanPatil19"},"content":"        if (!taskBookModel.hasTaskIndex(toReceiveComment)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"        Task taskToComment \u003d lastShownList.get(toReceiveComment.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"        String taskString \u003d taskToComment.toString();","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"PawanPatil19"},"content":"        Task commentedTask \u003d createCommentedTask(taskToComment, toAddComment);","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.commentOnTask(taskToComment, commentedTask, toReceiveComment);","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Cyrus-Krispin"},"content":"        taskBookModel.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"        return new CommandResult(String.format(MESSAGE_COMMENT_SUCCESS, toAddComment, taskString));","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"                || (other instanceof CommentCommand // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"                \u0026\u0026 toAddComment.equals(((CommentCommand) other).toAddComment)","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"                \u0026\u0026 toReceiveComment.equals(((CommentCommand) other).toReceiveComment));","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"PawanPatil19"},"content":"    private static Task createCommentedTask(Task taskToComment, Comment comment) {","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"PawanPatil19"},"content":"        assert taskToComment !\u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"PawanPatil19"},"content":"        TaskDescription taskDesc \u003d taskToComment.getDescription();","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"PawanPatil19"},"content":"        String taskDate \u003d taskToComment.getDate().toString();","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"PawanPatil19"},"content":"        String taskType \u003d taskToComment.getTaskType();","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"PawanPatil19"},"content":"        Task commentedTask \u003d new Task(taskDesc, taskDate, taskType);","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"PawanPatil19"},"content":"        String personAssignedName \u003d taskToComment.getPersonAssignedName();","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"PawanPatil19"},"content":"        String personAssignedRole \u003d taskToComment.getPersonAssignedRole();","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"PawanPatil19"},"content":"        Index personToAssign \u003d taskToComment.getPersonAssignedIndex();","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"PawanPatil19"},"content":"        commentedTask.assignPerson(personToAssign, personAssignedName, personAssignedRole);","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"PawanPatil19"},"content":"        boolean status \u003d taskToComment.isDone();","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"PawanPatil19"},"content":"        commentedTask.setStatus(status);","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"PawanPatil19"},"content":"        commentedTask.setTaskComment(comment);","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"PawanPatil19"},"content":"        Score score \u003d taskToComment.getScore();","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"PawanPatil19"},"content":"        commentedTask.setScore(score);","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"PawanPatil19"},"content":"        return commentedTask;","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"zhengsterz":65,"PawanPatil19":27,"Cyrus-Krispin":2}},{"path":"src/main/java/seedu/address/logic/commands/DeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":" * Adds a DeadlineTask to the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task with the specified deadline \"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"            + PREFIX_TASK + \"TASK_DESCRIPTION \"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"            + PREFIX_TASK + \"buy groceries\"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"            + PREFIX_DATE + \"02/11/2023\";","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book\";","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"    private final DeadlineTask toAdd;","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"     * Creates an AddCommand to add the specified {@code DeadlineTask}","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineCommand(DeadlineTask task) {","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"        toAdd \u003d task;","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"        if (taskBookModel.hasTask(toAdd)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.addTask(toAdd);","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"                || (other instanceof DeadlineCommand // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"                \u0026\u0026 toAdd.equals(((DeadlineCommand) other).toAdd));","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"zhengsterz":54,"PawanPatil19":4}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"            + \": Deletes the person identified by the index number in the displayed person list.\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"    private final Index personIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"    public DeleteCommand(Index personIndex) {","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"        this.personIndex \u003d personIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"        if (personIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"        Person personToDelete \u003d lastShownPersonList.get(personIndex.getZeroBased());","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"Yaladah"},"content":"                \u0026\u0026 personIndex.equals(((DeleteCommand) other).personIndex)); // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Yaladah":8,"-":44,"PawanPatil19":2}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":" * Deletes a task identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"    public static final String COMMAND_WORD \u003d \"deletetask\";","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"    private final Index taskIndex;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"        this.taskIndex \u003d targetIndex;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(taskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"        List\u003cTask\u003e lastShownList \u003d taskBookModel.getFilteredTaskList();","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"        if (taskIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"        Task taskToDelete \u003d lastShownList.get(taskIndex.getZeroBased());","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.deleteTask(taskToDelete);","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"Yaladah"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"Yaladah"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"Yaladah"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"Yaladah"},"content":"                \u0026\u0026 taskIndex.equals(((DeleteTaskCommand) other).taskIndex)); // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Yaladah":49,"PawanPatil19":5}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"Cyrus-Krispin"},"content":"import seedu.address.model.role.Role;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Cyrus-Krispin"},"content":"            + \"[\" + PREFIX_ROLE + \"ROLE]...\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"Yaladah"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in Pied Piper.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"PawanPatil19"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"Cyrus-Krispin"},"content":"        Set\u003cRole\u003e updatedRoles \u003d editPersonDescriptor.getRoles().orElse(personToEdit.getRoles());","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"Cyrus-Krispin"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRoles);","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"Cyrus-Krispin"},"content":"        private Set\u003cRole\u003e roles;","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"Cyrus-Krispin"},"content":"         * A defensive copy of {@code roles} is used internally.","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"Cyrus-Krispin"},"content":"            setRoles(toCopy.roles);","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"Cyrus-Krispin"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, roles);","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"Cyrus-Krispin"},"content":"         * Sets {@code roles} to this object\u0027s {@code roles}.","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"Cyrus-Krispin"},"content":"         * A defensive copy of {@code roles} is used internally.","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"Cyrus-Krispin"},"content":"        public void setRoles(Set\u003cRole\u003e roles) {","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"Cyrus-Krispin"},"content":"            this.roles \u003d (roles !\u003d null) ? new HashSet\u003c\u003e(roles) : null;","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"Cyrus-Krispin"},"content":"         * Returns an unmodifiable role set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"Cyrus-Krispin"},"content":"         * Returns {@code Optional#empty()} if {@code roles} is null.","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"Cyrus-Krispin"},"content":"        public Optional\u003cSet\u003cRole\u003e\u003e getRoles() {","lastModifiedDate":"2023-03-13"},{"lineNumber":202,"author":{"gitId":"Cyrus-Krispin"},"content":"            return (roles !\u003d null) ? Optional.of(Collections.unmodifiableSet(roles)) : Optional.empty();","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2023-03-13"},{"lineNumber":224,"author":{"gitId":"Cyrus-Krispin"},"content":"                    \u0026\u0026 getRoles().equals(e.getRoles());","lastModifiedDate":"2023-03-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Yaladah":1,"-":206,"PawanPatil19":2,"Cyrus-Krispin":18}},{"path":"src/main/java/seedu/address/logic/commands/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASKTYPE;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.model.TaskBookModel.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.task.Comment;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":" * Edits the details of an existing task in the task book.","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"public class EditTaskCommand extends Command {","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"    public static final String COMMAND_WORD \u003d \"edittask\";","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" Edits the details of the task identified \"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"            + \"by the index number used in the displayed task list. \"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"            + PREFIX_TASKTYPE","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"            + \" [\" + PREFIX_TASK + \"TASK_DESCRIPTION] \"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"            + \"[\" + PREFIX_COMMENT + \"COMMENT] \"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"            + \"[{DATE}]\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"            + \"For {DATE} field, if task type is deadline, use [\" + PREFIX_DATE + \"],\"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"            + \"and for event, use [\" + PREFIX_START_DATE + \"] and [\" + PREFIX_END_DATE + \"]\";","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Yaladah"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Yaladah"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in Pied Piper.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Task type of `T`, `D` or `E` is expected.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Yaladah"},"content":"    public static final String MESSAGE_TASK_TYPE_MISMATCH \u003d \"The type of task to be edited doesn\u0027t \"","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Yaladah"},"content":"            + \"match the given parameters.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Yaladah"},"content":"    public static final String MESSAGE_DEADLINE_INCORRECT_FORMAT \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Yaladah"},"content":"            \"For task of deadline type, [\" + PREFIX_DATE + \"DATE] is required.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Yaladah"},"content":"    public static final String MESSAGE_EVENT_INCORRECT_FORMAT \u003d \"For task of event type, [\"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Yaladah"},"content":"            + PREFIX_START_DATE + \"START_DATE] and [\" + PREFIX_END_DATE + \"END_DATE] is required\";","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Yaladah"},"content":"    private final Index index;","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Yaladah"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Yaladah"},"content":"     * @param index of the task in the filtered task list to edit","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Yaladah"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Yaladah"},"content":"    public EditTaskCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Yaladah"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Yaladah"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Yaladah"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Yaladah"},"content":"        this.editTaskDescriptor \u003d editTaskDescriptor;","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Yaladah"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Yaladah"},"content":"        requireNonNull(taskBookModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Yaladah"},"content":"        List\u003cTask\u003e lastShownList \u003d taskBookModel.getFilteredTaskList();","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Yaladah"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Yaladah"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Yaladah"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Yaladah"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"Yaladah"},"content":"        if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 taskBookModel.hasTask(editedTask)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Yaladah"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"Yaladah"},"content":"        taskBookModel.setTask(taskToEdit, editedTask);","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"Yaladah"},"content":"        taskBookModel.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"Yaladah"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"Yaladah"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"Yaladah"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Yaladah"},"content":"    private static Task createEditedTask(Task taskToEdit,","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"Yaladah"},"content":"            EditTaskDescriptor editTaskDescriptor) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"Yaladah"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"Yaladah"},"content":"        TaskDescription updatedTaskDescription \u003d editTaskDescriptor.getTaskDescription()","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"Yaladah"},"content":"                .orElse(taskToEdit.getDescription());","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"Yaladah"},"content":"        Comment updatedComment \u003d editTaskDescriptor.getComment().orElse(taskToEdit.getTaskComment());","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"Yaladah"},"content":"        String updatedTaskType \u003d editTaskDescriptor.getTaskType().orElse(taskToEdit.getTaskType());","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"Yaladah"},"content":"        String updatedDate \u003d \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"Yaladah"},"content":"        if (updatedTaskType.equals(\"T\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"Yaladah"},"content":"            updatedDate \u003d \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"Yaladah"},"content":"        } else if (updatedTaskType.equals(\"D\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"Yaladah"},"content":"            updatedDate \u003d editTaskDescriptor.getDeadline().orElse(taskToEdit.getDate());","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"Yaladah"},"content":"        } else if (updatedTaskType.equals(\"E\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"Yaladah"},"content":"            Date updatedStartDate \u003d editTaskDescriptor.getStartDate().orElse(null);","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"Yaladah"},"content":"            Date updatedEndDate \u003d editTaskDescriptor.getEndDate().orElse(null);","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"Yaladah"},"content":"            if (updatedStartDate \u003d\u003d null || updatedEndDate \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"Yaladah"},"content":"                throw new CommandException(MESSAGE_TASK_TYPE_MISMATCH + MESSAGE_EVENT_INCORRECT_FORMAT);","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"Yaladah"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"Yaladah"},"content":"            updatedDate \u003d String.format(\"From: %s To: %s\", updatedStartDate, updatedEndDate);","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"Yaladah"},"content":"        System.out.println(updatedDate);","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"Yaladah"},"content":"        Task updatedTask \u003d new Task(updatedTaskDescription, updatedDate, updatedTaskType);","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"Yaladah"},"content":"        updatedTask.setTaskComment(updatedComment);","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"Yaladah"},"content":"        return updatedTask;","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"Yaladah"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"Yaladah"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"Yaladah"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"Yaladah"},"content":"            return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"Yaladah"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"Yaladah"},"content":"        if (!(other instanceof EditTaskCommand)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"Yaladah"},"content":"            return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"Yaladah"},"content":"        // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"Yaladah"},"content":"        EditTaskCommand e \u003d (EditTaskCommand) other;","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"Yaladah"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"Yaladah"},"content":"                \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"Yaladah"},"content":"     * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"Yaladah"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"Yaladah"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"Yaladah"},"content":"        private TaskDescription taskDescription;","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"Yaladah"},"content":"        private Comment comment;","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"Yaladah"},"content":"        private String deadline;","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"Yaladah"},"content":"        private Date startDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"Yaladah"},"content":"        private Date endDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"Yaladah"},"content":"        private String taskType;","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"Yaladah"},"content":"        public EditTaskDescriptor() {}","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"Yaladah"},"content":"        /**","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"Yaladah"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"Yaladah"},"content":"         */","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"Yaladah"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"Yaladah"},"content":"            setTaskDescription(toCopy.taskDescription);","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"Yaladah"},"content":"            setComment(toCopy.comment);","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"Yaladah"},"content":"            setDeadline(toCopy.deadline);","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"Yaladah"},"content":"            setTaskType(toCopy.taskType);","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"Yaladah"},"content":"            setStartDate(toCopy.startDate);","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"Yaladah"},"content":"            setEndDate(toCopy.endDate);","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"Yaladah"},"content":"        /**","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"Yaladah"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"Yaladah"},"content":"         */","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"Yaladah"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"Yaladah"},"content":"            return CollectionUtil.isAnyNonNull(taskType, comment, deadline, startDate, endDate);","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"Yaladah"},"content":"        public void setTaskDescription(TaskDescription taskDescription) {","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"Yaladah"},"content":"            this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"Yaladah"},"content":"        public Optional\u003cTaskDescription\u003e getTaskDescription() {","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"Yaladah"},"content":"            return Optional.ofNullable(taskDescription);","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"Yaladah"},"content":"        public void setComment(Comment comment) {","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"Yaladah"},"content":"            this.comment \u003d comment;","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":187,"author":{"gitId":"Yaladah"},"content":"        public Optional\u003cComment\u003e getComment() {","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"Yaladah"},"content":"            return Optional.ofNullable(comment);","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":190,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"Yaladah"},"content":"        public void setDeadline(String deadline) {","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"Yaladah"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2023-03-29"},{"lineNumber":193,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"Yaladah"},"content":"        public Optional\u003cString\u003e getDeadline() {","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"Yaladah"},"content":"            return Optional.ofNullable(deadline);","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"Yaladah"},"content":"        public void setTaskType(String taskType) {","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"Yaladah"},"content":"            this.taskType \u003d taskType;","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"Yaladah"},"content":"        public Optional\u003cString\u003e getTaskType() {","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"Yaladah"},"content":"            return Optional.ofNullable(taskType);","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"Yaladah"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"Yaladah"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":209,"author":{"gitId":"Yaladah"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":210,"author":{"gitId":"Yaladah"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-29"},{"lineNumber":211,"author":{"gitId":"Yaladah"},"content":"                return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":212,"author":{"gitId":"Yaladah"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":213,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"Yaladah"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":215,"author":{"gitId":"Yaladah"},"content":"            if (!(other instanceof EditTaskCommand.EditTaskDescriptor)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":216,"author":{"gitId":"Yaladah"},"content":"                return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":217,"author":{"gitId":"Yaladah"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":218,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":219,"author":{"gitId":"Yaladah"},"content":"            // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":220,"author":{"gitId":"Yaladah"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2023-03-29"},{"lineNumber":221,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":222,"author":{"gitId":"Yaladah"},"content":"            return getTaskDescription().equals(e.getTaskDescription())","lastModifiedDate":"2023-03-29"},{"lineNumber":223,"author":{"gitId":"Yaladah"},"content":"                    \u0026\u0026 getComment().equals(e.getComment())","lastModifiedDate":"2023-03-29"},{"lineNumber":224,"author":{"gitId":"Yaladah"},"content":"                    \u0026\u0026 getDeadline().equals(e.getDeadline())","lastModifiedDate":"2023-03-29"},{"lineNumber":225,"author":{"gitId":"Yaladah"},"content":"                    \u0026\u0026 getStartDate().equals(e.getStartDate())","lastModifiedDate":"2023-03-29"},{"lineNumber":226,"author":{"gitId":"Yaladah"},"content":"                    \u0026\u0026 getEndDate().equals(e.getEndDate());","lastModifiedDate":"2023-03-29"},{"lineNumber":227,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":228,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":229,"author":{"gitId":"Yaladah"},"content":"        public void setStartDate(Date startDate) {","lastModifiedDate":"2023-03-29"},{"lineNumber":230,"author":{"gitId":"Yaladah"},"content":"            this.startDate \u003d startDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":231,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":232,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":233,"author":{"gitId":"Yaladah"},"content":"        public Optional\u003cDate\u003e getStartDate() {","lastModifiedDate":"2023-03-29"},{"lineNumber":234,"author":{"gitId":"Yaladah"},"content":"            return Optional.ofNullable(startDate);","lastModifiedDate":"2023-03-29"},{"lineNumber":235,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":236,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":237,"author":{"gitId":"Yaladah"},"content":"        public void setEndDate(Date endDate) {","lastModifiedDate":"2023-03-29"},{"lineNumber":238,"author":{"gitId":"Yaladah"},"content":"            this.endDate \u003d endDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":239,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":240,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":241,"author":{"gitId":"Yaladah"},"content":"        public Optional\u003cDate\u003e getEndDate() {","lastModifiedDate":"2023-03-29"},{"lineNumber":242,"author":{"gitId":"Yaladah"},"content":"            return Optional.ofNullable(endDate);","lastModifiedDate":"2023-03-29"},{"lineNumber":243,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":244,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":245,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Yaladah":245}},{"path":"src/main/java/seedu/address/logic/commands/EventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.EventTask;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":" * Adds a DeadlineTask to the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task with the specified duration \"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"            + PREFIX_TASK + \"TASK_DESCRIPTION \"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"            + PREFIX_START_DATE + \"DATE \"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"            + PREFIX_END_DATE + \"DATE \"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"            + PREFIX_TASK + \"manage open house\"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"            + PREFIX_START_DATE + \"02/11/2023\"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"PawanPatil19"},"content":"            + PREFIX_END_DATE + \"07/11/2023\";","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book\";","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"    private final EventTask toAdd;","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"     * Creates an AddCommand to add the specified {@code DeadlineTask}","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"    public EventCommand(EventTask task) {","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"        toAdd \u003d task;","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"PawanPatil19"},"content":"        if (taskBookModel.hasTask(toAdd)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.addTask(toAdd);","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"                || (other instanceof EventCommand // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"                \u0026\u0026 toAdd.equals(((EventCommand) other).toAdd));","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"zhengsterz":51,"PawanPatil19":10}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) {","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":18,"PawanPatil19":2}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":41,"PawanPatil19":2}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) {","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"PawanPatil19":2}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":23,"PawanPatil19":2}},{"path":"src/main/java/seedu/address/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"import static seedu.address.model.TaskBookModel.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Comment;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Score;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":" * Marks a task as done using its displayed index from the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"            + \": Marks the task identified by the index number in the displayed task list as done.\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_TASK_INDEX + \"1 \" + PREFIX_SCORE + \"4\";","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"Marked Task: %1$s \\nPerformance Score: %2$s\";","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"    public static final String MESSAGE_TASK_NOT_ASSIGNED \u003d \"Task must be assigned to a person.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"jereldlimjy"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"    private final Score score;","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"     * Creates a MarkCommand to mark the specified {@code Task}","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"     * @param targetIndex","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"     * @param score","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"    public MarkCommand(Index targetIndex, Score score) {","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"jereldlimjy"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"        this.score \u003d score;","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"PawanPatil19"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"jereldlimjy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(taskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"        List\u003cTask\u003e lastShownList \u003d taskBookModel.getFilteredTaskList();","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"jereldlimjy"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"jereldlimjy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"PawanPatil19"},"content":"        if (score.getValue() \u003c 0 || score.getValue() \u003e 5) {","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"PawanPatil19"},"content":"            throw new CommandException(Score.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"jereldlimjy"},"content":"        Task taskToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"jereldlimjy"},"content":"        if (!taskToMark.isAssigned()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"jereldlimjy"},"content":"            throw new CommandException(MESSAGE_TASK_NOT_ASSIGNED);","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"PawanPatil19"},"content":"        Task markedTask \u003d createMarkedTask(taskToMark, score);","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.markTask(taskToMark, markedTask, targetIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"jereldlimjy"},"content":"        taskBookModel.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"PawanPatil19"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_SUCCESS, taskToMark, score.toString()));","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"PawanPatil19"},"content":"    private static Task createMarkedTask(Task taskToMark, Score score) {","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"PawanPatil19"},"content":"        assert taskToMark !\u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"PawanPatil19"},"content":"        TaskDescription taskDesc \u003d taskToMark.getDescription();","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"PawanPatil19"},"content":"        String taskDate \u003d taskToMark.getDate().toString();","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"PawanPatil19"},"content":"        String taskType \u003d taskToMark.getTaskType();","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"PawanPatil19"},"content":"        Task markedTask \u003d new Task(taskDesc, taskDate, taskType);","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"PawanPatil19"},"content":"        String personAssignedName \u003d taskToMark.getPersonAssignedName();","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"PawanPatil19"},"content":"        String personAssignedRole \u003d taskToMark.getPersonAssignedRole();","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"PawanPatil19"},"content":"        Index personToAssign \u003d taskToMark.getPersonAssignedIndex();","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"PawanPatil19"},"content":"        markedTask.assignPerson(personToAssign, personAssignedName, personAssignedRole);","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"PawanPatil19"},"content":"        boolean status \u003d true;","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"PawanPatil19"},"content":"        markedTask.setStatus(status);","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"PawanPatil19"},"content":"        markedTask.setScore(score);","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"PawanPatil19"},"content":"        Comment comment \u003d taskToMark.getTaskComment();","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"PawanPatil19"},"content":"        markedTask.setTaskComment(comment);","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"PawanPatil19"},"content":"        return markedTask;","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jereldlimjy":48,"PawanPatil19":45}},{"path":"src/main/java/seedu/address/logic/commands/ReviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"import static seedu.address.model.TaskBookModel.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":" * Lists statistics of all persons in the address book to the user.","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"public class ReviewCommand extends Command {","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"    public static final String COMMAND_WORD \u003d \"review\";","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed statistics for all persons\";","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) {","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"        requireAllNonNull(model, taskBookModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"        taskBookModel.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"jereldlimjy":27}},{"path":"src/main/java/seedu/address/logic/commands/ToDoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":" * Adds a DeadlineTask to the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task with the specified description \"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"            + PREFIX_TASK + \"TASK_DESCRIPTION \"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"            + PREFIX_TASK + \"manage open house\";","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book\";","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    private final Task toAdd;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"     * Creates an AddCommand to add the specified {@code Task}","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    public ToDoCommand(Task task) {","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        toAdd \u003d task;","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(taskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"        if (taskBookModel.hasTask(toAdd)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.addTask(toAdd);","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"                || (other instanceof ToDoCommand // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"                \u0026\u0026 toAdd.equals(((ToDoCommand) other).toAdd));","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"zhengsterz":51,"PawanPatil19":5}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.model.TaskBookModel.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Comment;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":" * Unmarks a task as not done using its displayed index from the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"            + \": Unmarks the task identified by the index number in the displayed task list as not done.\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_TASK_INDEX + \"1\";","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"    public static final String MESSAGE_UNMARK_TASK_SUCCESS \u003d \"Unmarked Task: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"    public UnmarkCommand(Index targetIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"jereldlimjy"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"jereldlimjy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(taskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"        List\u003cTask\u003e lastShownList \u003d taskBookModel.getFilteredTaskList();","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"jereldlimjy"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"jereldlimjy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"jereldlimjy"},"content":"        Task taskToUnmark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"PawanPatil19"},"content":"        Task unmarkedTask \u003d createUnmarkedTask(taskToUnmark);","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.unmarkTask(taskToUnmark, unmarkedTask, targetIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Cyrus-Krispin"},"content":"        taskBookModel.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"jereldlimjy"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_TASK_SUCCESS, taskToUnmark));","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"PawanPatil19"},"content":"    private static Task createUnmarkedTask(Task taskToUnmark) {","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"PawanPatil19"},"content":"        assert taskToUnmark !\u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"PawanPatil19"},"content":"        TaskDescription taskDesc \u003d taskToUnmark.getDescription();","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"PawanPatil19"},"content":"        String taskDate \u003d taskToUnmark.getDate().toString();","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"PawanPatil19"},"content":"        String taskType \u003d taskToUnmark.getTaskType();","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"PawanPatil19"},"content":"        Task unmarkedTask \u003d new Task(taskDesc, taskDate, taskType);","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"PawanPatil19"},"content":"        String personAssignedName \u003d taskToUnmark.getPersonAssignedName();","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"PawanPatil19"},"content":"        String personAssignedRole \u003d taskToUnmark.getPersonAssignedRole();","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"PawanPatil19"},"content":"        Index personToAssign \u003d taskToUnmark.getPersonAssignedIndex();","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"PawanPatil19"},"content":"        unmarkedTask.assignPerson(personToAssign, personAssignedName, personAssignedRole);","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"PawanPatil19"},"content":"        boolean status \u003d false;","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"PawanPatil19"},"content":"        unmarkedTask.setStatus(status);","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"PawanPatil19"},"content":"        unmarkedTask.setScore(null);","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"PawanPatil19"},"content":"        Comment comment \u003d taskToUnmark.getTaskComment();","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"PawanPatil19"},"content":"        unmarkedTask.setTaskComment(comment);","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"PawanPatil19"},"content":"        return unmarkedTask;","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jereldlimjy":43,"PawanPatil19":28,"Cyrus-Krispin":2}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.model.TaskBookModel.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":" * Lists all tasks in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"    public CommandResult execute(Model model, TaskBookModel taskBookModel) {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jereldlimjy":21,"PawanPatil19":4}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"Cyrus-Krispin"},"content":"import seedu.address.model.role.Role;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"Cyrus-Krispin"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_ROLE);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Cyrus-Krispin"},"content":"        Set\u003cRole\u003e roleList \u003d ParserUtil.parseRoles(argMultimap.getAllValues(PREFIX_ROLE));","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"Cyrus-Krispin"},"content":"        Person person \u003d new Person(name, phone, email, address, roleList);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":55,"Cyrus-Krispin":5}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.logic.commands.AssignTaskCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.CommentCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.DeadlineCommand;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.EventCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.logic.commands.ReviewCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.ToDoCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"Yaladah"},"content":"        case EditTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Yaladah"},"content":"            return new EditTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"Yaladah"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"Yaladah"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"            return new DeadlineCommandParser().parse(arguments);","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"        case CommentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"            return new CommentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"            return new EventCommandParser().parse(arguments);","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"zhengsterz"},"content":"        case ToDoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"zhengsterz"},"content":"            return new ToDoCommandParser().parse(arguments);","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"jereldlimjy"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"jereldlimjy"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"jereldlimjy"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"jereldlimjy"},"content":"            return new UnmarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"PawanPatil19"},"content":"        case AssignTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"PawanPatil19"},"content":"            return new AssignTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"jereldlimjy"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"jereldlimjy"},"content":"            return new ViewCommand();","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"jereldlimjy"},"content":"        case ReviewCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"jereldlimjy"},"content":"            return new ReviewCommand();","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zhengsterz":16,"Yaladah":8,"-":76,"PawanPatil19":4,"jereldlimjy":16}},{"path":"src/main/java/seedu/address/logic/parser/AssignTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_INDEX;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.logic.commands.AssignTaskCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":" * Parses input arguments and creates a new AssignTask object","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"public class AssignTaskCommandParser implements Parser\u003cAssignTaskCommand\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"     * Parses the given {@code String} of arguments in the context of the AssignTaskCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"     * and returns an AssignTaskCommand object for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"    public AssignTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASK_INDEX, PREFIX_PERSON_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"PawanPatil19"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TASK_INDEX, PREFIX_PERSON_INDEX)","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"        Index taskIndex \u003d ParserUtil.parseTaskIndex(argMultimap.getValue(PREFIX_TASK_INDEX).get());","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"        Index personIndex \u003d ParserUtil.parsePersonIndex(argMultimap.getValue(PREFIX_PERSON_INDEX).get());","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"        return new AssignTaskCommand(taskIndex, personIndex);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"PawanPatil19"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"PawanPatil19":47}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Cyrus-Krispin"},"content":"    public static final Prefix PREFIX_ROLE \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"    public static final Prefix PREFIX_TASK_INDEX \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"    public static final Prefix PREFIX_PERSON_INDEX \u003d new Prefix(\"i/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    public static final Prefix PREFIX_TASK \u003d new Prefix(\"task/\");","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"by/\");","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"    public static final Prefix PREFIX_SCORE \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    public static final Prefix PREFIX_START_DATE \u003d new Prefix(\"from/\");","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    public static final Prefix PREFIX_END_DATE \u003d new Prefix(\"to/\");","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    public static final Prefix PREFIX_COMMENT \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"    public static final Prefix PREFIX_TASKTYPE \u003d new Prefix(\"type/\");","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"zhengsterz":5,"Yaladah":1,"-":12,"PawanPatil19":3,"Cyrus-Krispin":1}},{"path":"src/main/java/seedu/address/logic/parser/CommentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.CommentCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Comment;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":" * Parses input arguments and creates a new AssignTask object","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"public class CommentCommandParser implements Parser\u003cCommentCommand\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"     * Parses the given {@code String} of arguments in the context of the AssignTaskCommand","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     * and returns an AssignTaskCommand object for execution.","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"    public CommentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASK_INDEX, PREFIX_COMMENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TASK_INDEX, PREFIX_COMMENT)","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CommentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        Index taskIndex \u003d ParserUtil.parseTaskIndex(argMultimap.getValue(PREFIX_TASK_INDEX).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"        Comment comment \u003d ParserUtil.parseComment(argMultimap.getValue(PREFIX_COMMENT).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"        return new CommentCommand(taskIndex, comment);","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"zhengsterz":49}},{"path":"src/main/java/seedu/address/logic/parser/DeadlineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.DeadlineCommand;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":" * Parses input arguments and creates a new DeadlineCommand object","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"public class DeadlineCommandParser implements Parser\u003cDeadlineCommand\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASK, PREFIX_DATE);","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TASK, PREFIX_DATE)","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        TaskDescription description \u003d ParserUtil.parseTaskDescription(argMultimap.getValue(PREFIX_TASK).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"        Date deadlineDate \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask(description, deadlineDate);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"        return new DeadlineCommand(deadlineTask);","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"zhengsterz":50,"Yaladah":1}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Yaladah":10,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Yaladah":29}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"Cyrus-Krispin"},"content":"import seedu.address.model.role.Role;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"Cyrus-Krispin"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_ROLE);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"Cyrus-Krispin"},"content":"        parseRolesForEdit(argMultimap.getAllValues(PREFIX_ROLE)).ifPresent(editPersonDescriptor::setRoles);","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Cyrus-Krispin"},"content":"     * Parses {@code Collection\u003cString\u003e roles} into a {@code Set\u003cTag\u003e} if {@code roles} is non-empty.","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Cyrus-Krispin"},"content":"     * If {@code roles} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Cyrus-Krispin"},"content":"     * {@code Set\u003cRole\u003e} containing zero rolesR.","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"Cyrus-Krispin"},"content":"    private Optional\u003cSet\u003cRole\u003e\u003e parseRolesForEdit(Collection\u003cString\u003e roles) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Cyrus-Krispin"},"content":"        assert roles !\u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Cyrus-Krispin"},"content":"        if (roles.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"Cyrus-Krispin"},"content":"        Collection\u003cString\u003e roleSet \u003d roles.size() \u003d\u003d 1 \u0026\u0026 roles.contains(\"\") ? Collections.emptySet() : roles;","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Cyrus-Krispin"},"content":"        return Optional.of(ParserUtil.parseRoles(roleSet));","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":70,"Cyrus-Krispin":12}},{"path":"src/main/java/seedu/address/logic/parser/EditTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.commands.EditTaskCommand.MESSAGE_DEADLINE_INCORRECT_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.commands.EditTaskCommand.MESSAGE_EVENT_INCORRECT_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.commands.EditTaskCommand.MESSAGE_NOT_EDITED;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.commands.EditTaskCommand.MESSAGE_TASK_TYPE_MISMATCH;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASKTYPE;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.parser.ParserUtil.parseDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":" * Parses input arguments and creates a new EditTaskCommand object","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"public class EditTaskCommandParser implements Parser\u003cEditTaskCommand\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"    public EditTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"        ArgumentMultimap argumentMultimap \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASKTYPE, PREFIX_TASK, PREFIX_COMMENT,","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"                        PREFIX_DATE, PREFIX_START_DATE, PREFIX_END_DATE);","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"        Index index;","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"        String taskType;","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"            index \u003d ParserUtil.parseIndex(argumentMultimap.getPreamble());","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"            taskType \u003d ParserUtil.parseTaskType(argumentMultimap.getValue(PREFIX_TASKTYPE).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Yaladah"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Yaladah"},"content":"        EditTaskCommand.EditTaskDescriptor editTaskDescriptor \u003d new EditTaskCommand.EditTaskDescriptor();","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Yaladah"},"content":"        editTaskDescriptor.setTaskType(ParserUtil.parseTaskType(argumentMultimap.getValue(PREFIX_TASKTYPE).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Yaladah"},"content":"        if (argumentMultimap.getValue(PREFIX_TASK).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Yaladah"},"content":"            editTaskDescriptor.setTaskDescription(ParserUtil","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Yaladah"},"content":"                    .parseTaskDescription(argumentMultimap.getValue(PREFIX_TASK).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Yaladah"},"content":"        if (argumentMultimap.getValue(PREFIX_COMMENT).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Yaladah"},"content":"            editTaskDescriptor.setComment(ParserUtil.parseComment(argumentMultimap.getValue(PREFIX_COMMENT).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Yaladah"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Yaladah"},"content":"            if (argumentMultimap.getValue(PREFIX_DATE).isPresent()","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Yaladah"},"content":"                    || argumentMultimap.getValue(PREFIX_START_DATE).isPresent()","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Yaladah"},"content":"                    || argumentMultimap.getValue(PREFIX_END_DATE).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Yaladah"},"content":"                throw new ParseException(String.format(MESSAGE_TASK_TYPE_MISMATCH));","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Yaladah"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Yaladah"},"content":"        if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Yaladah"},"content":"            if (argumentMultimap.getValue(PREFIX_START_DATE).isPresent()","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Yaladah"},"content":"                    || argumentMultimap.getValue(PREFIX_END_DATE).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Yaladah"},"content":"                throw new ParseException(String.format(MESSAGE_TASK_TYPE_MISMATCH));","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Yaladah"},"content":"            } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Yaladah"},"content":"                if (argumentMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Yaladah"},"content":"                    editTaskDescriptor.setDeadline(parseDate(argumentMultimap.getValue(PREFIX_DATE).get()).toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Yaladah"},"content":"                } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Yaladah"},"content":"                    throw new ParseException(MESSAGE_TASK_TYPE_MISMATCH + MESSAGE_DEADLINE_INCORRECT_FORMAT);","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Yaladah"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Yaladah"},"content":"        if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Yaladah"},"content":"            if (argumentMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Yaladah"},"content":"                throw new ParseException(String.format(MESSAGE_TASK_TYPE_MISMATCH));","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"Yaladah"},"content":"            } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"Yaladah"},"content":"                if (!argumentMultimap.getValue(PREFIX_START_DATE).isPresent()","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Yaladah"},"content":"                        \u0026\u0026 !argumentMultimap.getValue(PREFIX_END_DATE).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"Yaladah"},"content":"                    throw new ParseException(MESSAGE_TASK_TYPE_MISMATCH + MESSAGE_EVENT_INCORRECT_FORMAT);","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"Yaladah"},"content":"                if (argumentMultimap.getValue(PREFIX_START_DATE).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"Yaladah"},"content":"                    editTaskDescriptor.setStartDate(parseDate(argumentMultimap.getValue(PREFIX_START_DATE).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"Yaladah"},"content":"                if (argumentMultimap.getValue(PREFIX_END_DATE).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"Yaladah"},"content":"                    editTaskDescriptor.setEndDate(parseDate(argumentMultimap.getValue(PREFIX_END_DATE).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"Yaladah"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"Yaladah"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Yaladah"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"Yaladah"},"content":"            throw new ParseException(MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"Yaladah"},"content":"        return new EditTaskCommand(index, editTaskDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Yaladah":101}},{"path":"src/main/java/seedu/address/logic/parser/EventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.EventCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.EventTask;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":" * Parses input arguments and creates a new DeadlineCommand object","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"public class EventCommandParser implements Parser\u003cEventCommand\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"    public EventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASK, PREFIX_START_DATE, PREFIX_END_DATE);","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TASK, PREFIX_START_DATE, PREFIX_END_DATE)","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"        TaskDescription description \u003d ParserUtil.parseTaskDescription(argMultimap.getValue(PREFIX_TASK).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"        Date startDate \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_START_DATE).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"        Date endDate \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_END_DATE).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"        EventTask eventTask \u003d new EventTask(description, startDate, endDate);","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"        return new EventCommand(eventTask);","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"zhengsterz":50,"PawanPatil19":1}},{"path":"src/main/java/seedu/address/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Score;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":" * Parses input arguments and creates a new MarkCommand object.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"     * and returns a MarkCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASK_INDEX, PREFIX_SCORE);","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TASK_INDEX, PREFIX_SCORE)","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"        Index taskIndex \u003d ParserUtil.parseTaskIndex(argMultimap.getValue(PREFIX_TASK_INDEX).get());","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"        Score score \u003d ParserUtil.parseScoreValue(argMultimap.getValue(PREFIX_SCORE).get());","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"        return new MarkCommand(taskIndex, score);","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jereldlimjy":22,"PawanPatil19":24}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"Cyrus-Krispin"},"content":"import seedu.address.model.role.Role;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Comment;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Score;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"     * Parses a {@code String des} into a {@code TaskDescription}.","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"     * @throws ParseException if the given {@code des} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"    public static TaskDescription parseTaskDescription(String des) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(des);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"        String trimmedDes \u003d des.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"        if (!TaskDescription.isValidTaskDescription(trimmedDes)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"        return new TaskDescription(trimmedDes);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"     * Parses a {@code String des} into a {@code Comment}.","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"     * @throws ParseException if the given {@code des} is invalid.","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"    public static Comment parseComment(String com) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(com);","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"zhengsterz"},"content":"        String trimmedCom \u003d com.trim();","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"zhengsterz"},"content":"        if (!Comment.isValidComment(trimmedCom)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"zhengsterz"},"content":"            throw new ParseException(Comment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"zhengsterz"},"content":"        return new Comment(trimmedCom);","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"zhengsterz"},"content":"     * Parses a {@code String date} into a {@code Date}.","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"zhengsterz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"zhengsterz"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"zhengsterz"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"zhengsterz"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"zhengsterz"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"zhengsterz"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"zhengsterz"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"Cyrus-Krispin"},"content":"    public static Role parseRole(String role) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"Cyrus-Krispin"},"content":"        requireNonNull(role);","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"Cyrus-Krispin"},"content":"        String trimmedRole \u003d role.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"Cyrus-Krispin"},"content":"        if (!Role.isValidRoleName(trimmedRole)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"Cyrus-Krispin"},"content":"            throw new ParseException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"Cyrus-Krispin"},"content":"        return new Role(trimmedRole);","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"Yaladah"},"content":"     * Parses a {@code String taskType} into a {@code String}.","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"Yaladah"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"Yaladah"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"Yaladah"},"content":"     * @throws ParseException if the given {@code taskType} is invalid.","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"Yaladah"},"content":"    public static String parseTaskType(String taskType) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"Yaladah"},"content":"        requireNonNull(taskType);","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"Yaladah"},"content":"        String trimmedTaskType \u003d taskType.trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"Yaladah"},"content":"        System.out.println(trimmedTaskType.equals(\"T\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"Yaladah"},"content":"        if (!Task.isValidTaskType(trimmedTaskType)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"Yaladah"},"content":"            throw new ParseException(EditTaskCommand.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"Yaladah"},"content":"        return trimmedTaskType;","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"Cyrus-Krispin"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"Cyrus-Krispin"},"content":"     * Parses {@code Collection\u003cString\u003e roles} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"Cyrus-Krispin"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"Cyrus-Krispin"},"content":"    public static Set\u003cRole\u003e parseRoles(Collection\u003cString\u003e roles) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"Cyrus-Krispin"},"content":"        requireNonNull(roles);","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"Cyrus-Krispin"},"content":"        final Set\u003cRole\u003e roleSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"Cyrus-Krispin"},"content":"        for (String roleName : roles) {","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"Cyrus-Krispin"},"content":"            roleSet.add(parseRole(roleName));","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":189,"author":{"gitId":"Cyrus-Krispin"},"content":"        return roleSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":191,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":192,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":193,"author":{"gitId":"PawanPatil19"},"content":"     * Parses {@code String taskIndex} into a {@code Index}.","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"PawanPatil19"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":195,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskIndex","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"PawanPatil19"},"content":"     * @return index of task","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"PawanPatil19"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"PawanPatil19"},"content":"    public static Index parseTaskIndex(String taskIndex) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":200,"author":{"gitId":"PawanPatil19"},"content":"        String trimmedIndex \u003d taskIndex.trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":201,"author":{"gitId":"PawanPatil19"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":202,"author":{"gitId":"PawanPatil19"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":203,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":204,"author":{"gitId":"PawanPatil19"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2023-03-12"},{"lineNumber":205,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":206,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":207,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":208,"author":{"gitId":"PawanPatil19"},"content":"     * Parses {@code String personIndex} into a {@code Index}.","lastModifiedDate":"2023-03-12"},{"lineNumber":209,"author":{"gitId":"PawanPatil19"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":210,"author":{"gitId":"PawanPatil19"},"content":"     * @param personIndex","lastModifiedDate":"2023-03-12"},{"lineNumber":211,"author":{"gitId":"PawanPatil19"},"content":"     * @return index of person","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"PawanPatil19"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-12"},{"lineNumber":213,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":214,"author":{"gitId":"PawanPatil19"},"content":"    public static Index parsePersonIndex(String personIndex) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":215,"author":{"gitId":"PawanPatil19"},"content":"        String trimmedIndex \u003d personIndex.trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":216,"author":{"gitId":"PawanPatil19"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":217,"author":{"gitId":"PawanPatil19"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":218,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":219,"author":{"gitId":"PawanPatil19"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2023-03-12"},{"lineNumber":220,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":221,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":222,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":223,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":224,"author":{"gitId":"PawanPatil19"},"content":"     * Parses {@code String score} into a {@code Score}.","lastModifiedDate":"2023-03-19"},{"lineNumber":225,"author":{"gitId":"PawanPatil19"},"content":"     * @param score","lastModifiedDate":"2023-03-19"},{"lineNumber":226,"author":{"gitId":"PawanPatil19"},"content":"     * @return score of person","lastModifiedDate":"2023-03-19"},{"lineNumber":227,"author":{"gitId":"PawanPatil19"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-19"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":229,"author":{"gitId":"PawanPatil19"},"content":"    public static Score parseScoreValue(String score) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":230,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(score);","lastModifiedDate":"2023-03-19"},{"lineNumber":231,"author":{"gitId":"PawanPatil19"},"content":"        String trimmedScore \u003d score.trim();","lastModifiedDate":"2023-03-19"},{"lineNumber":232,"author":{"gitId":"PawanPatil19"},"content":"        int scoreValue \u003d Integer.parseInt(trimmedScore);","lastModifiedDate":"2023-03-19"},{"lineNumber":233,"author":{"gitId":"PawanPatil19"},"content":"        if (!Score.isValidScore(scoreValue)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":234,"author":{"gitId":"PawanPatil19"},"content":"            throw new ParseException(Score.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":236,"author":{"gitId":"PawanPatil19"},"content":"        return new Score(scoreValue);","lastModifiedDate":"2023-03-19"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"zhengsterz":48,"Yaladah":17,"-":112,"PawanPatil19":45,"Cyrus-Krispin":16}},{"path":"src/main/java/seedu/address/logic/parser/ToDoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.ToDoCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":" * Parses input arguments and creates a new DeadlineCommand object","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"public class ToDoCommandParser implements Parser\u003cToDoCommand\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    public ToDoCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASK);","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TASK)","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        TaskDescription description \u003d ParserUtil.parseTaskDescription(argMultimap.getValue(PREFIX_TASK).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"        Task task \u003d new Task(description, \"\", \"T\");","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"        return new ToDoCommand(task);","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"zhengsterz":48,"PawanPatil19":1}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":" * Parses input arguments and creates a new MarkCommand object.","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"public class UnmarkCommandParser implements Parser\u003cUnmarkCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"     * and returns a MarkCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"    public UnmarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TASK_INDEX);","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TASK_INDEX)","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"PawanPatil19"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"        Index taskIndex \u003d ParserUtil.parseTaskIndex(argMultimap.getValue(PREFIX_TASK_INDEX).get());","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"        return new UnmarkCommand(taskIndex);","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"    * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"    * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"    */","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jereldlimjy":23,"PawanPatil19":19}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Comment;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"jereldlimjy"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"jereldlimjy"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"jereldlimjy"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":70,"author":{"gitId":"jereldlimjy"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"zhengsterz"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"zhengsterz"},"content":"        return tasks.contains(task);","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"PawanPatil19"},"content":"     * Returns true if a task with the same index as {@code taskIndex} exists in the address book.","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskIndex","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"PawanPatil19"},"content":"     * @return","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"PawanPatil19"},"content":"    public boolean hasTaskIndex(Index taskIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(taskIndex);","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"PawanPatil19"},"content":"        return tasks.checkIndex(taskIndex);","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"PawanPatil19"},"content":"     * Returns true if a person with the same index as {@code personIndex} exists in the address book.","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"PawanPatil19"},"content":"     * @param personIndex","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"PawanPatil19"},"content":"     * @return","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"PawanPatil19"},"content":"    public boolean hasPersonIndex(Index personIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(personIndex);","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"PawanPatil19"},"content":"        return persons.checkIndex(personIndex);","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"zhengsterz"},"content":"     * Adds a task to the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"zhengsterz"},"content":"     * The task must not already exist in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"zhengsterz"},"content":"    public void addTask(Task p) {","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"zhengsterz"},"content":"        tasks.add(p);","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"jereldlimjy"},"content":"     * Marks the given task {@code task} as done.","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskToMark","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"PawanPatil19"},"content":"     * @param markedTask","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"PawanPatil19"},"content":"     *  @param taskIndex","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"PawanPatil19"},"content":"    public void markTask(Task taskToMark, Task markedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"PawanPatil19"},"content":"        tasks.markTask(taskToMark, markedTask, taskIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"jereldlimjy"},"content":"     * Unmarks the given task {@code task} as not done.","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"jereldlimjy"},"content":"    public void unmarkTask(Task task) {","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"jereldlimjy"},"content":"        task.unmark();","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"zhengsterz"},"content":"     * Adds given comment to the specified task.","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"zhengsterz"},"content":"    public void commentOnTask(Comment comment, Task toReceiveComment) {","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"zhengsterz"},"content":"        toReceiveComment.setTaskComment(comment);","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"PawanPatil19"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskToAssign","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"PawanPatil19"},"content":"     * @param assignedTask","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskIndex","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"PawanPatil19"},"content":"    public void assignTask(Task taskToAssign, Task assignedTask, Index taskIndex) {","lastModifiedDate":"2023-03-15"},{"lineNumber":177,"author":{"gitId":"PawanPatil19"},"content":"        tasks.assignTask(taskToAssign, assignedTask, taskIndex);","lastModifiedDate":"2023-03-15"},{"lineNumber":178,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"Yaladah"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-09"},{"lineNumber":182,"author":{"gitId":"Yaladah"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":183,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":184,"author":{"gitId":"Yaladah"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"Yaladah"},"content":"        tasks.remove(key);","lastModifiedDate":"2023-03-09"},{"lineNumber":186,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":187,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":200,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":201,"author":{"gitId":"Yaladah"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":202,"author":{"gitId":"Yaladah"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-09"},{"lineNumber":203,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":204,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zhengsterz":28,"Yaladah":13,"-":119,"PawanPatil19":36,"jereldlimjy":20}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"PawanPatil19"},"content":"     * Returns true if a person exists in the address book.","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"PawanPatil19"},"content":"    boolean hasPersonIndex(Index personIndex);","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Yaladah":2,"-":88,"PawanPatil19":7}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"PawanPatil19"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs and taskPrefs.","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"PawanPatil19"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Address Book \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"PawanPatil19"},"content":"    public boolean hasPersonIndex(Index personIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(personIndex);","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"PawanPatil19"},"content":"        return addressBook.hasPersonIndex(personIndex);","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zhengsterz":1,"Yaladah":1,"-":148,"PawanPatil19":14,"jereldlimjy":1}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"     * Returns an unmodifiable view of the persons list and tasks list.","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"     * This list will not contain any duplicate persons or tasks.","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Yaladah":2,"-":15,"PawanPatil19":2}},{"path":"src/main/java/seedu/address/model/ReadOnlyTaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"public interface ReadOnlyTaskBook {","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"     * Returns an unmodifiable view of the persons list and tasks list.","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"     * This list will not contain any duplicate persons or tasks.","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"PawanPatil19":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":16,"PawanPatil19":2}},{"path":"src/main/java/seedu/address/model/TaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"public class TaskBook implements ReadOnlyTaskBook {","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"    /*","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"     *   among constructors.","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"    {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"PawanPatil19"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"    public TaskBook() {}","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"    public TaskBook(ReadOnlyTaskBook toBeCopied) {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"        this();","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"PawanPatil19"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"PawanPatil19"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"    public void resetData(ReadOnlyTaskBook newData) {","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"PawanPatil19"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"PawanPatil19"},"content":"    //// person-level operations","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"PawanPatil19"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"PawanPatil19"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"PawanPatil19"},"content":"        return tasks.contains(task);","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"PawanPatil19"},"content":"     * Returns true if a task with the same index as {@code taskIndex} exists in the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskIndex","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"PawanPatil19"},"content":"     * @return","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"PawanPatil19"},"content":"    public boolean hasTaskIndex(Index taskIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(taskIndex);","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"PawanPatil19"},"content":"        return tasks.checkIndex(taskIndex);","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"PawanPatil19"},"content":"     * Adds a task to the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"PawanPatil19"},"content":"     * The task must not already exist in the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"PawanPatil19"},"content":"    public void addTask(Task p) {","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"PawanPatil19"},"content":"        tasks.add(p);","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"PawanPatil19"},"content":"     * Marks the given task {@code task} as done.","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskToMark","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"PawanPatil19"},"content":"     * @param markedTask","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskIndex","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"PawanPatil19"},"content":"    public void markTask(Task taskToMark, Task markedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"PawanPatil19"},"content":"        tasks.markTask(taskToMark, markedTask, taskIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"PawanPatil19"},"content":"     * Unmarks the given task {@code task} as not done.","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"PawanPatil19"},"content":"    public void unmarkTask(Task taskToUnmark, Task unmarkedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"PawanPatil19"},"content":"        tasks.unmarkTask(taskToUnmark, unmarkedTask, taskIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"PawanPatil19"},"content":"     * Adds given comment to the specified task.","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"PawanPatil19"},"content":"    public void commentOnTask(Task taskToComment, Task commentedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"PawanPatil19"},"content":"        tasks.commentOnTask(taskToComment, commentedTask, taskIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"Yaladah"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"Yaladah"},"content":"     * {@code target} must exist in the task book.","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"Yaladah"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task book.","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"Yaladah"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"Yaladah"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"Yaladah"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"PawanPatil19"},"content":"     * Assigns the given task {@code taskToAssign} to the given task {@code assignedTask}.","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskToAssign","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"PawanPatil19"},"content":"     * @param assignedTask","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskIndex","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"PawanPatil19"},"content":"    public void assignTask(Task taskToAssign, Task assignedTask, Index taskIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"PawanPatil19"},"content":"        tasks.assignTask(taskToAssign, assignedTask, taskIndex);","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"PawanPatil19"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"PawanPatil19"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"PawanPatil19"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"PawanPatil19"},"content":"        tasks.remove(key);","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"PawanPatil19"},"content":"    //// util methods","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":144,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"PawanPatil19"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"PawanPatil19"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"PawanPatil19"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"PawanPatil19"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"PawanPatil19"},"content":"                || (other instanceof TaskBook // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"PawanPatil19"},"content":"                \u0026\u0026 tasks.equals(((TaskBook) other).tasks));","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":159,"author":{"gitId":"PawanPatil19"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"PawanPatil19"},"content":"        return tasks.hashCode();","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"PawanPatil19"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Yaladah":10,"PawanPatil19":152}},{"path":"src/main/java/seedu/address/model/TaskBookModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":" * The API of the Model component.","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":"public interface TaskBookModel {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"     * Returns the user prefs.","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"PawanPatil19"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"PawanPatil19"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"PawanPatil19"},"content":"    void setTaskBook(ReadOnlyTaskBook taskBook);","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"PawanPatil19"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"PawanPatil19"},"content":"    ReadOnlyTaskBook getTaskBook();","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"     * Returns true if a task with the same specifications as {@code task} exists in the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"PawanPatil19"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"PawanPatil19"},"content":"     * Returns true if a task exists in the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"PawanPatil19"},"content":"    boolean hasTaskIndex(Index taskIndex);","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Yaladah"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"PawanPatil19"},"content":"     * Deletes the given task.","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"PawanPatil19"},"content":"     * Task must exist in the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"PawanPatil19"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"PawanPatil19"},"content":"     * Adds the given task.","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"PawanPatil19"},"content":"     * {@code task} must not already exist in the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"PawanPatil19"},"content":"     * @param target","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"PawanPatil19"},"content":"    void addTask(Task target);","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"PawanPatil19"},"content":"     * Marks the given task {@code task} as done.","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"PawanPatil19"},"content":"     * {@code task} must exist in the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"PawanPatil19"},"content":"    void markTask(Task task, Task markedTask, Index taskIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"PawanPatil19"},"content":"     * Unmarks the given task {@code task} as not done.","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"PawanPatil19"},"content":"     * {@code task} must exist in the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"PawanPatil19"},"content":"    void unmarkTask(Task taskToUnmark, Task unmarkedTask, Index taskIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"PawanPatil19"},"content":"     * Adds the given comment to the specified task.","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"PawanPatil19"},"content":"     * {@code task} must exist in the address book.","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskToComment","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"PawanPatil19"},"content":"     * @param commentedTask","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskIndex","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"PawanPatil19"},"content":"    void commentOnTask(Task taskToComment, Task commentedTask, Index taskIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"PawanPatil19"},"content":"     * Replace the task to be assigned with the assigned task.","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskToAssign","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"PawanPatil19"},"content":"     * @param assignedTask","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskIndex","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"PawanPatil19"},"content":"    void assignTask(Task taskToAssign, Task assignedTask, Index taskIndex);","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"PawanPatil19"},"content":"     * Gets the filtered task list","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"PawanPatil19"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"PawanPatil19"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"PawanPatil19"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"PawanPatil19"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"PawanPatil19"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Yaladah":2,"PawanPatil19":120}},{"path":"src/main/java/seedu/address/model/TaskBookModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"public class TaskBookModelManager implements TaskBookModel {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(TaskBookModelManager.class);","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"    private final TaskBook taskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"PawanPatil19"},"content":"     * Initializes a ModelManager with the given taskBook and userPrefs.","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"    public TaskBookModelManager(ReadOnlyTaskBook taskBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"        requireAllNonNull(taskBook, userPrefs);","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"        logger.fine(\"Initializing with address book: \" + taskBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"        this.taskBook \u003d new TaskBook(taskBook);","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskBook.getTaskList());","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"    public TaskBookModelManager() {","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"        this(new TaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"PawanPatil19"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"PawanPatil19"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"        return userPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"PawanPatil19"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"PawanPatil19"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"PawanPatil19"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"PawanPatil19"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"PawanPatil19"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"PawanPatil19"},"content":"        return userPrefs.getTaskBookFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"PawanPatil19"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Task Book \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"PawanPatil19"},"content":"    public void setTaskBook(ReadOnlyTaskBook taskBook) {","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"PawanPatil19"},"content":"        this.taskBook.resetData(taskBook);","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"PawanPatil19"},"content":"    public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"PawanPatil19"},"content":"        return taskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"PawanPatil19"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"PawanPatil19"},"content":"        return taskBook.hasTask(task);","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"PawanPatil19"},"content":"    public boolean hasTaskIndex(Index taskIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(taskIndex);","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"PawanPatil19"},"content":"        return taskBook.hasTaskIndex(taskIndex);","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"Yaladah"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"Yaladah"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"Yaladah"},"content":"        taskBook.setTask(target, editedTask);","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"PawanPatil19"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"PawanPatil19"},"content":"        taskBook.removeTask(target);","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"PawanPatil19"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"PawanPatil19"},"content":"        taskBook.addTask(task);","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"PawanPatil19"},"content":"    public void commentOnTask(Task taskToComment, Task commentedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"PawanPatil19"},"content":"        taskBook.commentOnTask(taskToComment, commentedTask, taskIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"PawanPatil19"},"content":"    public void markTask(Task task, Task markedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(markedTask);","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(taskIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"PawanPatil19"},"content":"        taskBook.markTask(task, markedTask, taskIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"PawanPatil19"},"content":"    public void unmarkTask(Task taskToUnmark, Task unmarkedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(taskToUnmark);","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(unmarkedTask);","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(taskIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"PawanPatil19"},"content":"        taskBook.unmarkTask(taskToUnmark, unmarkedTask, taskIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"PawanPatil19"},"content":"    public void assignTask(Task taskToAssign, Task assignedTask, Index taskIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"PawanPatil19"},"content":"        taskBook.assignTask(taskToAssign, assignedTask, taskIndex);","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":144,"author":{"gitId":"PawanPatil19"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"PawanPatil19"},"content":"        return filteredTasks;","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"PawanPatil19"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"PawanPatil19"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"PawanPatil19"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"PawanPatil19"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"PawanPatil19"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"PawanPatil19"},"content":"            return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":159,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"PawanPatil19"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"PawanPatil19"},"content":"        if (!(obj instanceof TaskBookModelManager)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"PawanPatil19"},"content":"            return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"PawanPatil19"},"content":"        // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModelManager other \u003d (TaskBookModelManager) obj;","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"PawanPatil19"},"content":"        return taskBook.equals(other.taskBook)","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"PawanPatil19"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"PawanPatil19"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks);","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"PawanPatil19"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Yaladah":7,"PawanPatil19":165}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"    private final Path taskBookFilePath \u003d Paths.get(\"data\", \"tasks.json\");","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"PawanPatil19"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"PawanPatil19"},"content":"        return taskBookFilePath;","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"PawanPatil19"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"PawanPatil19"},"content":"                \u0026\u0026 taskBookFilePath.equals(o.taskBookFilePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"PawanPatil19"},"content":"        return Objects.hash(guiSettings, addressBookFilePath,","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"PawanPatil19"},"content":"                taskBookFilePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"PawanPatil19"},"content":"        sb.append(\"\\nLocal user data file location : \" + addressBookFilePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"PawanPatil19"},"content":"        sb.append(\"\\nLocal task data file location : \" + taskBookFilePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":84,"PawanPatil19":12}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Cyrus-Krispin"},"content":"import seedu.address.model.role.Role;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Cyrus-Krispin"},"content":"    private final Set\u003cRole\u003e roles \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"Cyrus-Krispin"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cRole\u003e roles) {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Cyrus-Krispin"},"content":"        requireAllNonNull(name, phone, email, address, roles);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Cyrus-Krispin"},"content":"        this.roles.addAll(roles);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Cyrus-Krispin"},"content":"     * Returns an immutable role set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Cyrus-Krispin"},"content":"    public Set\u003cRole\u003e getRoles() {","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Cyrus-Krispin"},"content":"        return Collections.unmodifiableSet(roles);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"PawanPatil19"},"content":"     * Returns the first role in the set of roles.","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"PawanPatil19"},"content":"    public String getRole() {","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"PawanPatil19"},"content":"        return roles.iterator().next().toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"Cyrus-Krispin"},"content":"                \u0026\u0026 otherPerson.getRoles().equals(getRoles());","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"Cyrus-Krispin"},"content":"        return Objects.hash(name, phone, email, address, roles);","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"Cyrus-Krispin"},"content":"        Set\u003cRole\u003e roles \u003d getRoles();","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"Cyrus-Krispin"},"content":"        if (!roles.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"Cyrus-Krispin"},"content":"            builder.append(\"; Roles: \");","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"Cyrus-Krispin"},"content":"            roles.forEach(builder::append);","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":111,"PawanPatil19":5,"Cyrus-Krispin":14}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"PawanPatil19"},"content":"    public Person getPerson(Index personIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"PawanPatil19"},"content":"        return internalList.get(personIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":144,"author":{"gitId":"PawanPatil19"},"content":"     * Returns true if the index is within the bounds of the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":145,"author":{"gitId":"PawanPatil19"},"content":"     * @param personIndex","lastModifiedDate":"2023-03-12"},{"lineNumber":146,"author":{"gitId":"PawanPatil19"},"content":"     * @return","lastModifiedDate":"2023-03-12"},{"lineNumber":147,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":148,"author":{"gitId":"PawanPatil19"},"content":"    public boolean checkIndex(Index personIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"PawanPatil19"},"content":"        return personIndex.getZeroBased() \u003c internalList.size();","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":137,"PawanPatil19":14}},{"path":"src/main/java/seedu/address/model/role/Role.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cyrus-Krispin"},"content":"package seedu.address.model.role;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Cyrus-Krispin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Cyrus-Krispin"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Cyrus-Krispin"},"content":" * Represents a Role in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Cyrus-Krispin"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidRoleName(String)}","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Cyrus-Krispin"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Cyrus-Krispin"},"content":"public class Role {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Cyrus-Krispin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Role names should be alphanumeric\";","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Cyrus-Krispin"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Cyrus-Krispin"},"content":"    public final String roleName;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Cyrus-Krispin"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Cyrus-Krispin"},"content":"     * Constructs a {@code Role}.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Cyrus-Krispin"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Cyrus-Krispin"},"content":"     * @param roleName A valid role name.","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Cyrus-Krispin"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Cyrus-Krispin"},"content":"    public Role(String roleName) {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Cyrus-Krispin"},"content":"        requireNonNull(roleName);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Cyrus-Krispin"},"content":"        checkArgument(isValidRoleName(roleName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Cyrus-Krispin"},"content":"        this.roleName \u003d roleName;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Cyrus-Krispin"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Cyrus-Krispin"},"content":"     * Returns true if a given string is a valid role name.","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Cyrus-Krispin"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Cyrus-Krispin"},"content":"    public static boolean isValidRoleName(String test) {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Cyrus-Krispin"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Cyrus-Krispin"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Cyrus-Krispin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Cyrus-Krispin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Cyrus-Krispin"},"content":"                || (other instanceof Role // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Cyrus-Krispin"},"content":"                \u0026\u0026 roleName.equals(((Role) other).roleName)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Cyrus-Krispin"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Cyrus-Krispin"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Cyrus-Krispin"},"content":"        return roleName.hashCode();","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Cyrus-Krispin"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Cyrus-Krispin"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Cyrus-Krispin"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Cyrus-Krispin"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"PawanPatil19"},"content":"        return roleName;","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"PawanPatil19":1,"Cyrus-Krispin":53}},{"path":"src/main/java/seedu/address/model/stats/PersonStats.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package seedu.address.model.stats;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":" * Represents statistics of a Person in the address book.","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"public class PersonStats {","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"    private Person person;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"    private int tasksAssigned;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"    private int tasksCompleted;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"    private double averageScore;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"     * Constructs a {@code PersonStats}.","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"     * @param person Person in the address book.","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"     * @param tasksAssigned Number of tasks assigned.","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"     * @param tasksCompleted Number of tasks completed.","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"     * @param averageScore Average score of the person.","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"    public PersonStats(Person person, int tasksAssigned, int tasksCompleted, double averageScore) {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"        requireAllNonNull(person, tasksAssigned, tasksCompleted, averageScore);","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"        this.tasksAssigned \u003d tasksAssigned;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"        this.tasksCompleted \u003d tasksCompleted;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"        this.averageScore \u003d averageScore;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"    public Person getPerson() {","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"        return person;","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"jereldlimjy"},"content":"    public int getTasksAssigned() {","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"jereldlimjy"},"content":"        return tasksAssigned;","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"jereldlimjy"},"content":"    public int getTasksCompleted() {","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"jereldlimjy"},"content":"        return tasksCompleted;","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"jereldlimjy"},"content":"    public double getAverageScore() {","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"jereldlimjy"},"content":"        return averageScore;","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"jereldlimjy":47}},{"path":"src/main/java/seedu/address/model/task/Comment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":" * Represents a comment for a task in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidComment(String)}","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"public class Comment {","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"            \"Comments should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    /*","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    public final String fullComment;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"     * Constructs a {@code Comment}.","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"     * @param comment A valid comment.","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    public Comment(String comment) {","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(comment);","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        checkArgument(isValidComment(comment), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        fullComment \u003d comment;","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    public static boolean isValidComment(String test) {","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"        return fullComment;","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"                || (other instanceof Comment // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"                \u0026\u0026 fullComment.equals(((seedu.address.model.task.Comment) other).fullComment)); // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"        return fullComment.hashCode();","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"zhengsterz":59}},{"path":"src/main/java/seedu/address/model/task/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":" * Represents a Date in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"public class Date {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"            \"Dates should only contain numeric characters and be in the format dd/mm/yyyy , and it should not be blank\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    /*","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[0-3]?[0-9]/[0-3]?[0-9]/(?:[0-9]{2})?[0-9]{2}$\";","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    public final String fullDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"     * @param date A valid date.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    public Date(String date) {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        fullDate \u003d date;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"     * @param test","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"     * @return true if a given string is a valid name","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        return fullDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"                || (other instanceof seedu.address.model.person.Name // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"                \u0026\u0026 fullDate.equals(((seedu.address.model.task.Date) other).fullDate)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"        return fullDate.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"zhengsterz":58,"PawanPatil19":3}},{"path":"src/main/java/seedu/address/model/task/DeadlineTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":" * This class is for tasks that have a deadline.","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"    private final Date deadlineDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"     * Constructor for a DeadlineTask that takes in a String description as well as String date.","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"     * @param description The description of the DeadlineTask.","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"     * @param date The date of the deadline.","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineTask(TaskDescription description, Date date) {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"        super(description, String.format(\"Due by: %s\", date.toString()), \"D\");","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"        this.deadlineDate \u003d date;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     * Supplies deadline date of the current task when requested.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"     * @return Date deadline date of the task","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"    public Date getDeadlineDate() {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        return this.deadlineDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    public String toString() {","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        return \"[D]\" + super.toString() + \" (Before: \" + deadlineDate + \")\";","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"     * Compares this object to the specified object.","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"     * @param obj the object to compare with.","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"     * @return true if the objects are the same; false otherwise.","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"        if (!(obj instanceof DeadlineTask)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"            return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask checkedObj \u003d (DeadlineTask) obj;","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        boolean isSameDescription \u003d this.getDescription().equals(checkedObj.getDescription());","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        boolean isSameDate \u003d this.getDate().equals(checkedObj.getDate());","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"        boolean isSame \u003d isSameDescription \u0026\u0026 isSameDate;","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"        if (isSame) {","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"        return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"zhengsterz":59,"PawanPatil19":2}},{"path":"src/main/java/seedu/address/model/task/EventTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":" * This class is for tasks that are events.","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"    private final Date startDate;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"    private final Date endDate;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"     * Constructor for a EventTask that takes in a String description as well as String dates.","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"     * @param description The description of the EventTask.","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"     * @param startDate The start date of the event.","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"     * @param endDate The end date of the event.","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    public EventTask(TaskDescription description, Date startDate, Date endDate) {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"        super(description, String.format(\"From: %s To: %s\", startDate.toString(), endDate.toString()), \"E\");","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"     * Supplies start date of the current task when requested.","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"     * @return Date deadline date of the task","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"    public Date getStartDate() {","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        return this.startDate;","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"     * Supplies end date of the current task when requested.","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"     * @return Date deadline date of the task","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    public Date getEndDate() {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"        return this.endDate;","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"        return \"[E]\" + super.toString() + \" (From: \" + startDate + \" To: \" + endDate + \")\";","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"     * Compares this object to the specified object.","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"     * @param obj the object to compare with.","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"     * @return true if the objects are the same; false otherwise.","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"        if (!(obj instanceof EventTask)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"        EventTask checkedObj \u003d (EventTask) obj;","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"        boolean isSameDescription \u003d this.getDescription().equals(checkedObj.getDescription());","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"        boolean isSameStartDate \u003d this.getStartDate().equals(checkedObj.getStartDate());","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"        boolean isSameEndDate \u003d this.getEndDate().equals(checkedObj.getEndDate());","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"        boolean isSameDuration \u003d isSameStartDate \u0026\u0026 isSameEndDate;","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"        boolean isSame \u003d isSameDescription \u0026\u0026 isSameDuration;","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"        if (isSame) {","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"        return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"zhengsterz":74,"PawanPatil19":1}},{"path":"src/main/java/seedu/address/model/task/Score.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":" * Represents a Task\u0027s score in the address book.","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"public class Score {","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"            \"Scores should only contain numeric characters and be in the range 0-5, and it should not be blank\";","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"    public final int score;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":"     * Constructs a {@code Score}.","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"     * @param score A valid score.","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"    public Score(int score) {","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(score);","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"        //checkArgument(isValidScore(score), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"        this.score \u003d score;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"    public static boolean isValidScore(int test) {","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"        return test \u003e\u003d 0 \u0026\u0026 test \u003c\u003d 5;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"    public int getValue() {","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"        return this.score;","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"        return Integer.toString(score);","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"                || (other instanceof seedu.address.model.person.Name // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"                \u0026\u0026 score \u003d\u003d ((seedu.address.model.task.Score) other).score); // state check","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"PawanPatil19"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"PawanPatil19":45}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"Cyrus-Krispin"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Cyrus-Krispin"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Cyrus-Krispin"},"content":"import java.util.Date;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Cyrus-Krispin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Cyrus-Krispin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":" * This class is the parent class of tasks that make up the tasklist.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"public class Task {","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    private final TaskDescription description;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    private Comment taskComment;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"    private Index personAssignedIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"    private String personAssignedName;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"    private String personAssignedRole;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"    private Score score;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"    private String date;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"    private String taskType;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Cyrus-Krispin"},"content":"    private Boolean isOverdue;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"     * The constructor of the Task that takes in description of the task.","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"    public Task(TaskDescription description, String date, String taskType) {","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"        this.personAssignedIndex \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"        this.personAssignedName \u003d null;","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"        this.personAssignedRole \u003d null;","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"        this.score \u003d null;","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        this.taskComment \u003d null;","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"Cyrus-Krispin"},"content":"        this.isOverdue \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"     * Supplies description of the current task when requested.","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"     * @return TaskDescription description of the task","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"    public TaskDescription getDescription() {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"        return this.description;","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"     * Supplies type of the current task when requested.","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"     * @return String type of the task","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"PawanPatil19"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"PawanPatil19"},"content":"        return this.taskType;","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"     * Supplies description of the completeness of current task when requested.","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"     * @return String description of the completeness of current task","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"jereldlimjy"},"content":"     * Returns whether task is done or not.","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"jereldlimjy"},"content":"     * @return Boolean value of whether task is done.","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"jereldlimjy"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"jereldlimjy"},"content":"        return isDone;","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Cyrus-Krispin"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"Cyrus-Krispin"},"content":"     * Returns whether task is done or not","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"Cyrus-Krispin"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"Cyrus-Krispin"},"content":"     * @return Boolean value of whether task is overdue.","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"Cyrus-Krispin"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"Cyrus-Krispin"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"Cyrus-Krispin"},"content":"    public boolean isOverdue() throws IndexOutOfBoundsException, ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Cyrus-Krispin"},"content":"        String date \u003d getDate();","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"Cyrus-Krispin"},"content":"        if (date.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"Cyrus-Krispin"},"content":"            return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"Cyrus-Krispin"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"Cyrus-Krispin"},"content":"        String endDate \u003d date.substring(date.length() - 10);","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"Cyrus-Krispin"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"Cyrus-Krispin"},"content":"        Date deadlineDate \u003d new SimpleDateFormat(\"dd/MM/yyyy\").parse(endDate);","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"Cyrus-Krispin"},"content":"        return currentDate.after(deadlineDate);","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Cyrus-Krispin"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"Cyrus-Krispin"},"content":"     * Returns whether task is due today or not","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"Cyrus-Krispin"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"Cyrus-Krispin"},"content":"     * @return Boolean value of whether task is due today","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"Cyrus-Krispin"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"Cyrus-Krispin"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"Cyrus-Krispin"},"content":"    public boolean isDueToday() throws IndexOutOfBoundsException, ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"Cyrus-Krispin"},"content":"        SimpleDateFormat fmt \u003d new SimpleDateFormat(\"yyyyMMdd\");","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"Cyrus-Krispin"},"content":"        String date \u003d getDate();","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"Cyrus-Krispin"},"content":"        String endDate \u003d date.substring(date.length() - 10);","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"Cyrus-Krispin"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"Cyrus-Krispin"},"content":"        Date deadlineDate \u003d new SimpleDateFormat(\"dd/MM/yyyy\").parse(endDate);","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"Cyrus-Krispin"},"content":"        return fmt.format(currentDate).equals(fmt.format(deadlineDate));","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"jereldlimjy"},"content":"     * Returns whether task is assigned.","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"jereldlimjy"},"content":"     * @return Boolean value of whether task is assigned to a person.","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"jereldlimjy"},"content":"    public boolean isAssigned() {","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"jereldlimjy"},"content":"        return personAssignedIndex !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"PawanPatil19"},"content":"     * Marks the current task as done.","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"PawanPatil19"},"content":"    public void setStatus(boolean isDone) {","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"PawanPatil19"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"PawanPatil19"},"content":"     * Sets the score of the current task.","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"PawanPatil19"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"PawanPatil19"},"content":"     * @param score Score to be assigned to the current task","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"PawanPatil19"},"content":"    public void setScore(Score score) {","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"PawanPatil19"},"content":"        this.score \u003d score;","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"PawanPatil19"},"content":"     * Gets the score of the current task.","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"PawanPatil19"},"content":"     * @return Score value assigned to the current task","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"PawanPatil19"},"content":"    public Score getScore() {","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"PawanPatil19"},"content":"        return this.score;","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"zhengsterz"},"content":"     * Leaves a comment to the current task.","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"zhengsterz"},"content":"     * @param comment Comment by user to be assigned to the current task","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"zhengsterz"},"content":"    public void setTaskComment(Comment comment) {","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"zhengsterz"},"content":"        this.taskComment \u003d comment;","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"zhengsterz"},"content":"     * Returns the comment of the current task.","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"zhengsterz"},"content":"     * @return Comment value assigned to the current task","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":158,"author":{"gitId":"zhengsterz"},"content":"    public Comment getTaskComment() {","lastModifiedDate":"2023-03-17"},{"lineNumber":159,"author":{"gitId":"zhengsterz"},"content":"        return this.taskComment;","lastModifiedDate":"2023-03-17"},{"lineNumber":160,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":161,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":162,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"PawanPatil19"},"content":"     * Supplies date of the current task when requested.","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"PawanPatil19"},"content":"     * @return String date of the task","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"PawanPatil19"},"content":"    public String getDate() {","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"PawanPatil19"},"content":"        return this.date;","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"PawanPatil19"},"content":"     * Assigns a person to the current task.","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"PawanPatil19"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"PawanPatil19"},"content":"     * @param personIndex Index of the person to be assigned to the current task","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"PawanPatil19"},"content":"     * @param personToAssign Person to be assigned to the current task","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"PawanPatil19"},"content":"    public void assignPerson(Index personIndex, Person personToAssign) {","lastModifiedDate":"2023-03-15"},{"lineNumber":177,"author":{"gitId":"PawanPatil19"},"content":"        this.personAssignedIndex \u003d personIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"PawanPatil19"},"content":"        this.personAssignedName \u003d personToAssign.getName().toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":179,"author":{"gitId":"PawanPatil19"},"content":"        this.personAssignedRole \u003d personToAssign.getRole();","lastModifiedDate":"2023-03-15"},{"lineNumber":180,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"PawanPatil19"},"content":"     * Assigns a person to the current task.","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"PawanPatil19"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"PawanPatil19"},"content":"     * @param personIndex Index of the person to be assigned to the current task","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"PawanPatil19"},"content":"     * @param personName Name of the person to be assigned to the current task","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"PawanPatil19"},"content":"     * @param personRole Role of the person to be assigned to the current task","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"PawanPatil19"},"content":"    public void assignPerson(Index personIndex, String personName, String personRole) {","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"PawanPatil19"},"content":"        this.personAssignedIndex \u003d personIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"PawanPatil19"},"content":"        this.personAssignedName \u003d personName;","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"PawanPatil19"},"content":"        this.personAssignedRole \u003d personRole;","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":195,"author":{"gitId":"PawanPatil19"},"content":"     * Supplies the index of the person assigned to the current task when requested.","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"PawanPatil19"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"PawanPatil19"},"content":"     * @return Index index of the person assigned to the current task","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"PawanPatil19"},"content":"    public Index getPersonAssignedIndex() {","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"jereldlimjy"},"content":"        return personAssignedIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":201,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":202,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":203,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"PawanPatil19"},"content":"     * Supplies the name of the person assigned to the current task when requested.","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"jereldlimjy"},"content":"     * @return String name of the person assigned to the current task","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"jereldlimjy"},"content":"    public String getPersonAssignedName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"jereldlimjy"},"content":"        return personAssignedName;","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":213,"author":{"gitId":"PawanPatil19"},"content":"     * Supplies the role of the person assigned to the current task when requested.","lastModifiedDate":"2023-03-15"},{"lineNumber":214,"author":{"gitId":"PawanPatil19"},"content":"     * @return String role of the person assigned to the current task","lastModifiedDate":"2023-03-21"},{"lineNumber":215,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"PawanPatil19"},"content":"    public String getPersonAssignedRole() {","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"PawanPatil19"},"content":"        return personAssignedRole;","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":220,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":221,"author":{"gitId":"zhengsterz"},"content":"     * Changes status of current task as done by assigning isDone as true.","lastModifiedDate":"2023-03-02"},{"lineNumber":222,"author":{"gitId":"PawanPatil19"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":223,"author":{"gitId":"PawanPatil19"},"content":"     * @param score Score to be assigned to the current task","lastModifiedDate":"2023-03-21"},{"lineNumber":224,"author":{"gitId":"PawanPatil19"},"content":"     * @return String message to be displayed to user","lastModifiedDate":"2023-03-21"},{"lineNumber":225,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":226,"author":{"gitId":"PawanPatil19"},"content":"    public String mark(Task taskToMark, Task markedTask, Score score) {","lastModifiedDate":"2023-03-30"},{"lineNumber":227,"author":{"gitId":"zhengsterz"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-03-02"},{"lineNumber":228,"author":{"gitId":"PawanPatil19"},"content":"        this.setScore(score);","lastModifiedDate":"2023-03-19"},{"lineNumber":229,"author":{"gitId":"zhengsterz"},"content":"        return \"This task has been marked as completed:\\n\" + this + \"\\n\";","lastModifiedDate":"2023-03-02"},{"lineNumber":230,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":231,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":232,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":233,"author":{"gitId":"zhengsterz"},"content":"     * Changes status of current task as not done by assigning isDone as false.","lastModifiedDate":"2023-03-02"},{"lineNumber":234,"author":{"gitId":"PawanPatil19"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":235,"author":{"gitId":"PawanPatil19"},"content":"     * @return String message to be displayed to user","lastModifiedDate":"2023-03-21"},{"lineNumber":236,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":237,"author":{"gitId":"zhengsterz"},"content":"    public String unmark() {","lastModifiedDate":"2023-03-02"},{"lineNumber":238,"author":{"gitId":"zhengsterz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-02"},{"lineNumber":239,"author":{"gitId":"PawanPatil19"},"content":"        this.score \u003d null;","lastModifiedDate":"2023-03-19"},{"lineNumber":240,"author":{"gitId":"zhengsterz"},"content":"        return \"This task has been marked as uncompleted:\\n\" + this + \"\\n\";","lastModifiedDate":"2023-03-02"},{"lineNumber":241,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":242,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":243,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":244,"author":{"gitId":"PawanPatil19"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-03-21"},{"lineNumber":245,"author":{"gitId":"PawanPatil19"},"content":"     * @return String representation of the task","lastModifiedDate":"2023-03-21"},{"lineNumber":246,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":247,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":248,"author":{"gitId":"zhengsterz"},"content":"    public String toString() {","lastModifiedDate":"2023-03-02"},{"lineNumber":249,"author":{"gitId":"zhengsterz"},"content":"        String statusIcon \u003d this.getStatusIcon();","lastModifiedDate":"2023-03-02"},{"lineNumber":250,"author":{"gitId":"zhengsterz"},"content":"        String str \u003d \"\";","lastModifiedDate":"2023-03-02"},{"lineNumber":251,"author":{"gitId":"zhengsterz"},"content":"        str \u003d String.format(\"[\" + statusIcon + \"] \" + this.description);","lastModifiedDate":"2023-03-02"},{"lineNumber":252,"author":{"gitId":"zhengsterz"},"content":"        return str;","lastModifiedDate":"2023-03-02"},{"lineNumber":253,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":254,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":255,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":256,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if both tasks have the same description.","lastModifiedDate":"2023-03-07"},{"lineNumber":257,"author":{"gitId":"zhengsterz"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2023-03-07"},{"lineNumber":258,"author":{"gitId":"PawanPatil19"},"content":"     * @param otherTask","lastModifiedDate":"2023-03-21"},{"lineNumber":259,"author":{"gitId":"PawanPatil19"},"content":"     * @return Boolean value of whether the two tasks have the same description","lastModifiedDate":"2023-03-21"},{"lineNumber":260,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":261,"author":{"gitId":"zhengsterz"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2023-03-07"},{"lineNumber":262,"author":{"gitId":"zhengsterz"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2023-03-07"},{"lineNumber":263,"author":{"gitId":"zhengsterz"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":264,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":265,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":266,"author":{"gitId":"zhengsterz"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2023-03-07"},{"lineNumber":267,"author":{"gitId":"zhengsterz"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription());","lastModifiedDate":"2023-03-07"},{"lineNumber":268,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":269,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":270,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":271,"author":{"gitId":"Yaladah"},"content":"     * Returns true if the input task type is valid.","lastModifiedDate":"2023-03-29"},{"lineNumber":272,"author":{"gitId":"Yaladah"},"content":"     * Task type is valid if it\u0027s equal to \"T\", \"D\" or \"E\".","lastModifiedDate":"2023-03-29"},{"lineNumber":273,"author":{"gitId":"Yaladah"},"content":"     * @param taskType Task type input by user.","lastModifiedDate":"2023-03-29"},{"lineNumber":274,"author":{"gitId":"Yaladah"},"content":"     * @return Boolean value of whether task type matches \"T\", \"D\" or \"E\".","lastModifiedDate":"2023-03-29"},{"lineNumber":275,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":276,"author":{"gitId":"Yaladah"},"content":"    public static boolean isValidTaskType(String taskType) {","lastModifiedDate":"2023-03-29"},{"lineNumber":277,"author":{"gitId":"Yaladah"},"content":"        if ((taskType.equals(\"T\")) || (taskType.equals(\"D\")) || (taskType.equals(\"E\"))) {","lastModifiedDate":"2023-03-29"},{"lineNumber":278,"author":{"gitId":"Yaladah"},"content":"            return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":279,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":280,"author":{"gitId":"Yaladah"},"content":"        return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":281,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":282,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":283,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":284,"author":{"gitId":"PawanPatil19"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2023-03-21"},{"lineNumber":285,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":286,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":287,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-02"},{"lineNumber":288,"author":{"gitId":"zhengsterz"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-02"},{"lineNumber":289,"author":{"gitId":"zhengsterz"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":290,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":291,"author":{"gitId":"zhengsterz"},"content":"        if (!(obj instanceof Task)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":292,"author":{"gitId":"zhengsterz"},"content":"            return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":293,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":294,"author":{"gitId":"zhengsterz"},"content":"        Task checkedObj \u003d (Task) obj;","lastModifiedDate":"2023-03-02"},{"lineNumber":295,"author":{"gitId":"zhengsterz"},"content":"        boolean isSameDescription \u003d this.description.equals(checkedObj.description);","lastModifiedDate":"2023-03-02"},{"lineNumber":296,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":297,"author":{"gitId":"zhengsterz"},"content":"        if (isSameDescription) {","lastModifiedDate":"2023-03-02"},{"lineNumber":298,"author":{"gitId":"zhengsterz"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":299,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":300,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":301,"author":{"gitId":"zhengsterz"},"content":"        return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":302,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":303,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":304,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":305,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"zhengsterz":109,"Yaladah":13,"PawanPatil19":116,"jereldlimjy":23,"Cyrus-Krispin":44}},{"path":"src/main/java/seedu/address/model/task/TaskDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":" * Represents a Task\u0027s description in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTaskDescription(String)}","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"public class TaskDescription {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"            \"Task descriptions should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    /*","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    public final String fullTaskDescription;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"     * Constructs a {@code TaskDescription}.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"     * @param description A valid description.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    public TaskDescription(String description) {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        checkArgument(isValidTaskDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        fullTaskDescription \u003d description;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    public static boolean isValidTaskDescription(String test) {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"        return fullTaskDescription;","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"                || (other instanceof seedu.address.model.person.Name // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"                \u0026\u0026 fullTaskDescription.equals(((seedu.address.model.task.TaskDescription) other).fullTaskDescription));","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"        return fullTaskDescription.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"zhengsterz":60}},{"path":"src/main/java/seedu/address/model/task/TaskDescriptionContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import java.util.List;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":" * Tests that a {@code Task}\u0027s {@code Description} matches any of the keywords given.","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"public class TaskDescriptionContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"    public TaskDescriptionContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"        return keywords.stream().anyMatch(keyword -\u003e StringUtil","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"                .containsWordIgnoreCase(task.getDescription().fullTaskDescription, keyword));","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"                || (other instanceof TaskDescriptionContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"                \u0026\u0026 keywords.equals(((TaskDescriptionContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"Yaladah":30}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":" * Tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a Task uses Task#equals(Object) so","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":" * as to ensure that the Task with exactly the same fields will be removed.","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":" *","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":" *","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"     * Adds a person to the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"     * The person must exist in the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"zhengsterz"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"zhengsterz"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"zhengsterz"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"zhengsterz"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"zhengsterz"},"content":"     * Replaces the contents of this list with {@code Tasks}.","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"zhengsterz"},"content":"     * {@code Tasks} must not contain duplicate Tasks.","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"zhengsterz"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"zhengsterz"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"zhengsterz"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"zhengsterz"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"zhengsterz"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"zhengsterz"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"zhengsterz"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"zhengsterz"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"zhengsterz"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"zhengsterz"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"zhengsterz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"zhengsterz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"zhengsterz"},"content":"                || (other instanceof seedu.address.model.task.UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"zhengsterz"},"content":"                \u0026\u0026 internalList.equals(((seedu.address.model.task.UniqueTaskList) other).internalList));","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"zhengsterz"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"zhengsterz"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"zhengsterz"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"zhengsterz"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"zhengsterz"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"zhengsterz"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"zhengsterz"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"zhengsterz"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"zhengsterz"},"content":"                    return false;","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"zhengsterz"},"content":"                }","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"zhengsterz"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"zhengsterz"},"content":"        return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":139,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"PawanPatil19"},"content":"     * Returns if the task index is valid","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskIndex","lastModifiedDate":"2023-03-12"},{"lineNumber":144,"author":{"gitId":"PawanPatil19"},"content":"     * @return","lastModifiedDate":"2023-03-12"},{"lineNumber":145,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":146,"author":{"gitId":"PawanPatil19"},"content":"    public boolean checkIndex(Index taskIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":147,"author":{"gitId":"PawanPatil19"},"content":"        return taskIndex.getZeroBased() \u003c internalList.size();","lastModifiedDate":"2023-03-12"},{"lineNumber":148,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"PawanPatil19"},"content":"     * Assigns a task to a person","lastModifiedDate":"2023-03-12"},{"lineNumber":152,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskIndex","lastModifiedDate":"2023-03-12"},{"lineNumber":153,"author":{"gitId":"PawanPatil19"},"content":"     * @param personIndex","lastModifiedDate":"2023-03-12"},{"lineNumber":154,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"PawanPatil19"},"content":"    public void assignTask(Index taskIndex, Index personIndex, Person personToAssign) {","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"PawanPatil19"},"content":"        internalList.get(taskIndex.getZeroBased()).assignPerson(personIndex, personToAssign);","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"PawanPatil19"},"content":"    public void assignTask(Task taskToAssign, Task assignedTask, Index taskIndex) {","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"PawanPatil19"},"content":"        internalList.set(taskIndex.getZeroBased(), assignedTask);","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":163,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"PawanPatil19"},"content":"     * Replace the task with the marked task","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskToMark","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"PawanPatil19"},"content":"     * @param markedTask","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskIndex","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"PawanPatil19"},"content":"    public void markTask(Task taskToMark, Task markedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"PawanPatil19"},"content":"        internalList.set(taskIndex.getZeroBased(), markedTask);","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"PawanPatil19"},"content":"     * Replace the task with the unmarked task","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskToUnmark","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"PawanPatil19"},"content":"     * @param unmarkedTask","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskIndex","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"PawanPatil19"},"content":"    public void unmarkTask(Task taskToUnmark, Task unmarkedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"PawanPatil19"},"content":"        internalList.set(taskIndex.getZeroBased(), unmarkedTask);","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"PawanPatil19"},"content":"     * Replace the task with the commented task","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskToComment","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"PawanPatil19"},"content":"     * @param commentedTask","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskIndex","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"PawanPatil19"},"content":"    public void commentOnTask(Task taskToComment, Task commentedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"PawanPatil19"},"content":"        internalList.set(taskIndex.getZeroBased(), commentedTask);","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"zhengsterz":137,"PawanPatil19":55,"jereldlimjy":1}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":" * Signals that the operation will result in duplicate Tasks (Persons are considered duplicates if they have the same","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":" * description).","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"zhengsterz":11}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"zhengsterz":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"Cyrus-Krispin"},"content":"import seedu.address.model.role.Role;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Cyrus-Krispin"},"content":"                getRoleSet(\"friends\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Cyrus-Krispin"},"content":"                getRoleSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Cyrus-Krispin"},"content":"                getRoleSet(\"neighbours\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Cyrus-Krispin"},"content":"                getRoleSet(\"family\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Cyrus-Krispin"},"content":"                getRoleSet(\"classmates\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Cyrus-Krispin"},"content":"                getRoleSet(\"colleagues\"))","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"    public static ReadOnlyTaskBook getEmptyTaskBook() {","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"        return new TaskBook();","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Cyrus-Krispin"},"content":"     * Returns a role set containing the list of strings given.","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Cyrus-Krispin"},"content":"    public static Set\u003cRole\u003e getRoleSet(String... strings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Cyrus-Krispin"},"content":"                .map(Role::new)","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":50,"PawanPatil19":6,"Cyrus-Krispin":10}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Cyrus-Krispin"},"content":"import seedu.address.model.role.Role;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Cyrus-Krispin"},"content":"    private final List\u003cJsonAdaptedRole\u003e roles \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Cyrus-Krispin"},"content":"            @JsonProperty(\"roles\") List\u003cJsonAdaptedRole\u003e roles) {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Cyrus-Krispin"},"content":"        if (roles !\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Cyrus-Krispin"},"content":"            this.roles.addAll(roles);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Cyrus-Krispin"},"content":"        roles.addAll(source.getRoles().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Cyrus-Krispin"},"content":"                .map(JsonAdaptedRole::new)","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"Cyrus-Krispin"},"content":"        final List\u003cRole\u003e personRoles \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Cyrus-Krispin"},"content":"        for (JsonAdaptedRole role : roles) {","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Cyrus-Krispin"},"content":"            personRoles.add(role.toModelType());","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"Cyrus-Krispin"},"content":"        final Set\u003cRole\u003e modelRoles \u003d new HashSet\u003c\u003e(personRoles);","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"Cyrus-Krispin"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelRoles);","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":97,"Cyrus-Krispin":12}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedRole.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cyrus-Krispin"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Cyrus-Krispin"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Cyrus-Krispin"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Cyrus-Krispin"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Cyrus-Krispin"},"content":"import seedu.address.model.role.Role;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Cyrus-Krispin"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Cyrus-Krispin"},"content":" * Jackson-friendly version of {@link Role}.","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Cyrus-Krispin"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Cyrus-Krispin"},"content":"class JsonAdaptedRole {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Cyrus-Krispin"},"content":"    private final String roleName;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Cyrus-Krispin"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Cyrus-Krispin"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Cyrus-Krispin"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Cyrus-Krispin"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Cyrus-Krispin"},"content":"    public JsonAdaptedRole(String tagName) {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Cyrus-Krispin"},"content":"        this.roleName \u003d tagName;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Cyrus-Krispin"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Cyrus-Krispin"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Cyrus-Krispin"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Cyrus-Krispin"},"content":"    public JsonAdaptedRole(Role source) {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Cyrus-Krispin"},"content":"        roleName \u003d source.roleName;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Cyrus-Krispin"},"content":"    @JsonValue","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Cyrus-Krispin"},"content":"    public String getTagName() {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Cyrus-Krispin"},"content":"        return roleName;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Cyrus-Krispin"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Cyrus-Krispin"},"content":"     * Converts this Jackson-friendly adapted role object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Cyrus-Krispin"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Cyrus-Krispin"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Cyrus-Krispin"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Cyrus-Krispin"},"content":"    public Role toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Cyrus-Krispin"},"content":"        if (!Role.isValidRoleName(roleName)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Cyrus-Krispin"},"content":"            throw new IllegalValueException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Cyrus-Krispin"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Cyrus-Krispin"},"content":"        return new Role(roleName);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Cyrus-Krispin":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Comment;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Score;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"    private final String taskDesc;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"    private final String date;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"    private final String comment;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"    private final String score;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"    private final boolean status;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"    private final String personAssignedName;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"    private final String personAssignedIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"PawanPatil19"},"content":"    private final String personAssignedRole;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"    private final String taskType;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"    public JsonAdaptedTask(@JsonProperty(\"taskDesc\") String taskDesc, @JsonProperty(\"date\") String date,","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"            @JsonProperty(\"comment\") String comment, @JsonProperty(\"score\") String score,","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"            @JsonProperty(\"status\") boolean status,","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"            @JsonProperty(\"personAssignedName\") String personAssignedName,","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"            @JsonProperty(\"personAssignedIndex\") String personAssignedIndex,","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"            @JsonProperty(\"personAssignedRole\") String personAssignedRole,","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"            @JsonProperty(\"taskType\") String taskType) {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"        this.taskDesc \u003d taskDesc;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"PawanPatil19"},"content":"        this.score \u003d score;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"PawanPatil19"},"content":"        this.personAssignedName \u003d personAssignedName;","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"PawanPatil19"},"content":"        this.personAssignedIndex \u003d personAssignedIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"PawanPatil19"},"content":"        this.personAssignedRole \u003d personAssignedRole;","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"PawanPatil19"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"PawanPatil19"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"PawanPatil19"},"content":"        taskDesc \u003d source.getDescription().toString();","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"PawanPatil19"},"content":"        date \u003d source.getDate();","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"PawanPatil19"},"content":"        comment \u003d source.getTaskComment() \u003d\u003d null ? null : source.getTaskComment().toString();","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"PawanPatil19"},"content":"        score \u003d source.getScore() \u003d\u003d null ? null : Integer.toString(source.getScore().getValue());","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"PawanPatil19"},"content":"        status \u003d source.isDone();","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"PawanPatil19"},"content":"        personAssignedName \u003d source.getPersonAssignedName() \u003d\u003d null ? null : source.getPersonAssignedName();","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"PawanPatil19"},"content":"        personAssignedIndex \u003d source.getPersonAssignedIndex() \u003d\u003d null ? null","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"PawanPatil19"},"content":"            : Integer.toString(source.getPersonAssignedIndex().getZeroBased());","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"PawanPatil19"},"content":"        personAssignedRole \u003d source.getPersonAssignedRole() \u003d\u003d null ? null : source.getPersonAssignedRole();","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"PawanPatil19"},"content":"        taskType \u003d source.getTaskType();","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"PawanPatil19"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"PawanPatil19"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"PawanPatil19"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"PawanPatil19"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"PawanPatil19"},"content":"        if (taskDesc \u003d\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"PawanPatil19"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"PawanPatil19"},"content":"                TaskDescription.class.getSimpleName()));","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"PawanPatil19"},"content":"        if (!TaskDescription.isValidTaskDescription(taskDesc)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"PawanPatil19"},"content":"            throw new IllegalValueException(TaskDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"PawanPatil19"},"content":"        final TaskDescription modelTaskDesc \u003d new TaskDescription(taskDesc);","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"PawanPatil19"},"content":"        final String modelDate \u003d date;","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"PawanPatil19"},"content":"        final String modelTaskType \u003d taskType;","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"PawanPatil19"},"content":"        Task task \u003d new Task(modelTaskDesc, modelDate, modelTaskType);","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"PawanPatil19"},"content":"        if (comment !\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"PawanPatil19"},"content":"            final Comment modelComment \u003d new Comment(comment);","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"PawanPatil19"},"content":"            task.setTaskComment(modelComment);","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"PawanPatil19"},"content":"        if (score !\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"PawanPatil19"},"content":"            final Score modelScore \u003d new Score(Integer.parseInt(score));","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"PawanPatil19"},"content":"            task.setScore(modelScore);","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"PawanPatil19"},"content":"        if (personAssignedName !\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"PawanPatil19"},"content":"            final String modelPersonAssignedName \u003d personAssignedName;","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"PawanPatil19"},"content":"            final Index modelPersonAssignedIndex \u003d Index.fromZeroBased(Integer.parseInt(personAssignedIndex));","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"PawanPatil19"},"content":"            final String modelPersonAssignedRole \u003d personAssignedRole;","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"PawanPatil19"},"content":"            task.assignPerson(modelPersonAssignedIndex, modelPersonAssignedName, modelPersonAssignedRole);","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"PawanPatil19"},"content":"        final boolean modelStatus \u003d status;","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"PawanPatil19"},"content":"        task.setStatus(modelStatus);","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"PawanPatil19"},"content":"        return task;","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"PawanPatil19"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"PawanPatil19":110}},{"path":"src/main/java/seedu/address/storage/JsonSerializableTaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"@JsonRootName(value \u003d \"taskbook\")","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"class JsonSerializableTaskBook {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"    public JsonSerializableTaskBook(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"    public JsonSerializableTaskBook(ReadOnlyTaskBook source) {","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"PawanPatil19"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"PawanPatil19"},"content":"    public TaskBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"PawanPatil19"},"content":"        TaskBook taskBook \u003d new TaskBook();","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"PawanPatil19"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"PawanPatil19"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"PawanPatil19"},"content":"            if (taskBook.hasTask(task)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"            taskBook.addTask(task);","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"PawanPatil19"},"content":"        return taskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"PawanPatil19"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"PawanPatil19":60}},{"path":"src/main/java/seedu/address/storage/JsonTaskStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"public class JsonTaskStorage implements TaskStorage {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskStorage.class);","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"    public JsonTaskStorage(Path filePath) {","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"        return filePath;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTasks() throws DataConversionException {","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"        return readTasks(filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"PawanPatil19"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTasks(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"PawanPatil19"},"content":"        Optional\u003cJsonSerializableTaskBook\u003e jsonTasks \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"PawanPatil19"},"content":"                filePath, JsonSerializableTaskBook.class);","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"PawanPatil19"},"content":"        if (!jsonTasks.isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"PawanPatil19"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"            return Optional.of(jsonTasks.get().toModelType());","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"PawanPatil19"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"PawanPatil19"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"PawanPatil19"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"PawanPatil19"},"content":"    public void saveTasks(ReadOnlyTaskBook taskBook) throws IOException {","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"PawanPatil19"},"content":"        saveTasks(taskBook, filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"PawanPatil19"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"PawanPatil19"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"PawanPatil19"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"PawanPatil19"},"content":"    public void saveTasks(ReadOnlyTaskBook taskBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(taskBook);","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"PawanPatil19"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"PawanPatil19"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"PawanPatil19"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskBook(taskBook), filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"PawanPatil19"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"PawanPatil19":80}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"public interface Storage extends AddressBookStorage, TaskStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"    Optional\u003cReadOnlyTaskBook\u003e readTasks() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"PawanPatil19"},"content":"    void saveTasks(ReadOnlyTaskBook addressBook) throws IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":31,"PawanPatil19":17}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"    private TaskStorage taskStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, TaskStorage taskStorage,","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"        UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"        this.taskStorage \u003d taskStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"PawanPatil19"},"content":"        logger.fine(\"Attempting to read user data from file: \" + filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"PawanPatil19"},"content":"        logger.fine(\"Attempting to write user to data file: \" + filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"PawanPatil19"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Tasks methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"PawanPatil19"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"PawanPatil19"},"content":"        return taskStorage.getTaskBookFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"PawanPatil19"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTasks() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"PawanPatil19"},"content":"        return readTasks(taskStorage.getTaskBookFilePath());","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"PawanPatil19"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTasks(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"PawanPatil19"},"content":"        logger.fine(\"Attempting to read task data from file: \" + filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"PawanPatil19"},"content":"        return taskStorage.readTasks(filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"PawanPatil19"},"content":"    public void saveTasks(ReadOnlyTaskBook taskBook) throws IOException {","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"PawanPatil19"},"content":"        saveTasks(taskBook, taskStorage.getTaskBookFilePath());","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"PawanPatil19"},"content":"    public void saveTasks(ReadOnlyTaskBook taskBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"PawanPatil19"},"content":"        logger.fine(\"Attempting to write task to data file: \" + filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"PawanPatil19"},"content":"        taskStorage.saveTasks(taskBook, filePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":75,"PawanPatil19":40}},{"path":"src/main/java/seedu/address/storage/TaskStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":" * Represents a storage for {@link seedu.address.model.TaskBook}.","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"public interface TaskStorage {","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"     * Returns tasks data as a {@link ReadOnlyTaskBook}.","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"    Optional\u003cReadOnlyTaskBook\u003e readTasks() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"     * @see #getTaskBookFilePath()","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"    Optional\u003cReadOnlyTaskBook\u003e readTasks(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"     * Saves the given {@link ReadOnlyTaskBook} to the storage.","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"     * @param taskBook cannot be null.","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"    void saveTasks(ReadOnlyTaskBook taskBook) throws IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"     * @see #saveTaskBook(ReadOnlyTaskBook)","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"    void saveTasks(ReadOnlyTaskBook taskBook, Path filePath) throws IOException;","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"PawanPatil19"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"PawanPatil19":45}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-w15-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"PawanPatil19":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"Cyrus-Krispin"},"content":"import javafx.scene.control.CheckMenuItem;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Cyrus-Krispin"},"content":"import javafx.scene.control.Menu;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.logic.commands.ReviewCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"jereldlimjy"},"content":"    private PersonStatsListPanel personStatsListPanel;","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"jereldlimjy"},"content":"    private StackPane listPanelPlaceholder;","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"jereldlimjy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jereldlimjy"},"content":"    private Label panelLabel;","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Cyrus-Krispin"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"Cyrus-Krispin"},"content":"    private CheckMenuItem dark;","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Cyrus-Krispin"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Cyrus-Krispin"},"content":"    private Menu menuButton;","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void setTheme() {","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"Cyrus-Krispin"},"content":"        dark.selectedProperty().addListener((obs, wasSelected, isSelected) -\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"Cyrus-Krispin"},"content":"            String currentStyleSheet \u003d primaryStage.getScene().getStylesheets().get(0);","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"Cyrus-Krispin"},"content":"            String newStyleSheet;","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"Cyrus-Krispin"},"content":"            if (isSelected) {","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"Cyrus-Krispin"},"content":"                newStyleSheet \u003d \"view/DarkTheme.css\";","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"Cyrus-Krispin"},"content":"            } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"Cyrus-Krispin"},"content":"                newStyleSheet \u003d \"view/LightTheme.css\";","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"Cyrus-Krispin"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"Cyrus-Krispin"},"content":"            primaryStage.getScene().getStylesheets().remove(currentStyleSheet);","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"Cyrus-Krispin"},"content":"            primaryStage.getScene().getStylesheets().add(newStyleSheet);","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"Cyrus-Krispin"},"content":"        });","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"PawanPatil19"},"content":"     * Fills up all the tasks placeholders of this window.","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"PawanPatil19"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"jereldlimjy"},"content":"        listPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"PawanPatil19"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getTaskBookFilePath());","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"Cyrus-Krispin"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"Cyrus-Krispin"},"content":"     * Replicates view task command","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"Cyrus-Krispin"},"content":"     * @throws CommandException","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"Cyrus-Krispin"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"Cyrus-Krispin"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"Cyrus-Krispin"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void tasksClicked() throws CommandException, ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"Cyrus-Krispin"},"content":"        CommandResult commandResult \u003d executeCommand(\"view\");","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"Cyrus-Krispin"},"content":"        show();","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":187,"author":{"gitId":"Cyrus-Krispin"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"Cyrus-Krispin"},"content":"     * Replicates list command","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"Cyrus-Krispin"},"content":"     * @throws CommandException","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"Cyrus-Krispin"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"Cyrus-Krispin"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"Cyrus-Krispin"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":193,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void personsClicked() throws CommandException, ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"Cyrus-Krispin"},"content":"        CommandResult commandResult \u003d executeCommand(\"list\");","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"Cyrus-Krispin"},"content":"        show();","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"Cyrus-Krispin"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"Cyrus-Krispin"},"content":"     * Replicates review command","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"Cyrus-Krispin"},"content":"     * @throws CommandException","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"Cyrus-Krispin"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"Cyrus-Krispin"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"PawanPatil19"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"PawanPatil19"},"content":"    public void reviewClicked() throws CommandException, ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"PawanPatil19"},"content":"        CommandResult commandResult \u003d executeCommand(\"review\");","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"Cyrus-Krispin"},"content":"        show();","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":229,"author":{"gitId":"PawanPatil19"},"content":"    public TaskListPanel getTaskListPanel() {","lastModifiedDate":"2023-03-15"},{"lineNumber":230,"author":{"gitId":"PawanPatil19"},"content":"        return taskListPanel;","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":232,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"jereldlimjy"},"content":"            // TODO: refine later","lastModifiedDate":"2023-03-14"},{"lineNumber":245,"author":{"gitId":"jereldlimjy"},"content":"            if (commandResult.getFeedbackToUser().equals(ListCommand.MESSAGE_SUCCESS)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"jereldlimjy"},"content":"                personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2023-03-14"},{"lineNumber":247,"author":{"gitId":"jereldlimjy"},"content":"                listPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-03-14"},{"lineNumber":248,"author":{"gitId":"jereldlimjy"},"content":"                listPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":249,"author":{"gitId":"PawanPatil19"},"content":"                StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"PawanPatil19"},"content":"                statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"jereldlimjy"},"content":"                panelLabel.setText(\"Persons\");","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"jereldlimjy"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"jereldlimjy"},"content":"            if (commandResult.getFeedbackToUser().equals(ViewCommand.MESSAGE_SUCCESS)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"PawanPatil19"},"content":"                taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2023-03-27"},{"lineNumber":256,"author":{"gitId":"jereldlimjy"},"content":"                listPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-03-14"},{"lineNumber":257,"author":{"gitId":"jereldlimjy"},"content":"                listPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":258,"author":{"gitId":"PawanPatil19"},"content":"                StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getTaskBookFilePath());","lastModifiedDate":"2023-03-27"},{"lineNumber":259,"author":{"gitId":"PawanPatil19"},"content":"                statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2023-03-27"},{"lineNumber":260,"author":{"gitId":"jereldlimjy"},"content":"                panelLabel.setText(\"Tasks\");","lastModifiedDate":"2023-03-14"},{"lineNumber":261,"author":{"gitId":"jereldlimjy"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":262,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":263,"author":{"gitId":"jereldlimjy"},"content":"            if (commandResult.getFeedbackToUser().equals(ReviewCommand.MESSAGE_SUCCESS)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":264,"author":{"gitId":"jereldlimjy"},"content":"                personStatsListPanel \u003d new PersonStatsListPanel(logic);","lastModifiedDate":"2023-03-29"},{"lineNumber":265,"author":{"gitId":"jereldlimjy"},"content":"                listPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-03-29"},{"lineNumber":266,"author":{"gitId":"jereldlimjy"},"content":"                listPanelPlaceholder.getChildren().add(personStatsListPanel.getRoot());","lastModifiedDate":"2023-03-29"},{"lineNumber":267,"author":{"gitId":"jereldlimjy"},"content":"                StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2023-03-29"},{"lineNumber":268,"author":{"gitId":"jereldlimjy"},"content":"                statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2023-03-29"},{"lineNumber":269,"author":{"gitId":"jereldlimjy"},"content":"                panelLabel.setText(\"Review\");","lastModifiedDate":"2023-03-29"},{"lineNumber":270,"author":{"gitId":"jereldlimjy"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":271,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":186,"jereldlimjy":33,"PawanPatil19":18,"Cyrus-Krispin":50}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Cyrus-Krispin"},"content":"    private FlowPane roles;","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"Cyrus-Krispin"},"content":"        person.getRoles().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Cyrus-Krispin"},"content":"                .sorted(Comparator.comparing(role -\u003e role.roleName))","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Cyrus-Krispin"},"content":"                .forEach(role -\u003e roles.getChildren().add(new Label(role.roleName)));","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":73,"Cyrus-Krispin":4}},{"path":"src/main/java/seedu/address/ui/PersonStatsCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.stats.PersonStats;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":" * An UI component that displays information of a {@code PersonStats}.","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"public class PersonStatsCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"    private static final String FXML \u003d \"PersonStatsListCard.fxml\";","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"    public final PersonStats personStats;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"    private Label name;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"    private Label id;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"    private Label tasksAssigned;","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"    private Label tasksCompleted;","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"jereldlimjy"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"jereldlimjy"},"content":"    private Label averageScore;","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"jereldlimjy"},"content":"     * Creates a {@code PersonStatsCard} with the given {@code PersonStats} and index to display.","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"jereldlimjy"},"content":"    public PersonStatsCard(PersonStats personStats, int displayedIndex) {","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"jereldlimjy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"jereldlimjy"},"content":"        this.personStats \u003d personStats;","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"jereldlimjy"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"jereldlimjy"},"content":"        name.setText(personStats.getPerson().getName().fullName);","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"jereldlimjy"},"content":"        tasksAssigned.setText(\"No. of tasks assigned: \" + Integer.toString(personStats.getTasksAssigned()));","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"jereldlimjy"},"content":"        tasksCompleted.setText(\"No. of tasks completed: \" + Integer.toString(personStats.getTasksCompleted()));","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"jereldlimjy"},"content":"        averageScore.setText(\"Average score: \"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"jereldlimjy"},"content":"                + (Double.isNaN(personStats.getAverageScore()) ? \"-\" : personStats.getAverageScore()));","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"jereldlimjy"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"jereldlimjy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"jereldlimjy"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"jereldlimjy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"jereldlimjy"},"content":"            return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"jereldlimjy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"jereldlimjy"},"content":"        if (!(other instanceof PersonStatsCard)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"jereldlimjy"},"content":"            return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"jereldlimjy"},"content":"        // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"jereldlimjy"},"content":"        PersonStatsCard card \u003d (PersonStatsCard) other;","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"jereldlimjy"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"jereldlimjy"},"content":"                \u0026\u0026 personStats.equals(card.personStats);","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"jereldlimjy":70}},{"path":"src/main/java/seedu/address/ui/PersonStatsListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.stats.PersonStats;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"jereldlimjy"},"content":" * Panel containing the list of persons and their average scores.","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"public class PersonStatsListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"    private static final String FXML \u003d \"PersonStatsListPanel.fxml\";","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonStatsListPanel.class);","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"    private final Logic logic;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"    private ListView\u003cPersonStats\u003e personStatsListView;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"    private ObservableList\u003cPersonStats\u003e personStatsList;","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"jereldlimjy"},"content":"    public PersonStatsListPanel(Logic logic) {","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"jereldlimjy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"jereldlimjy"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"jereldlimjy"},"content":"        personStatsList \u003d createPersonStatsList(logic.getFilteredPersonList(), logic.getFilteredTaskList());","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"jereldlimjy"},"content":"        personStatsListView.setItems(personStatsList);","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"jereldlimjy"},"content":"        personStatsListView.setCellFactory(listView -\u003e new PersonStatsListViewCell());","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"jereldlimjy"},"content":"        logic.getFilteredPersonList().addListener((ListChangeListener\u003cPerson\u003e) change -\u003e updatePersonStatsList());","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"jereldlimjy"},"content":"        logic.getFilteredTaskList().addListener((ListChangeListener\u003cTask\u003e) change -\u003e updatePersonStatsList());","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"jereldlimjy"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"jereldlimjy"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code PersonStats} using a {@code PersonCard}.","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"jereldlimjy"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"jereldlimjy"},"content":"    class PersonStatsListViewCell extends ListCell\u003cPersonStats\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"jereldlimjy"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"jereldlimjy"},"content":"        protected void updateItem(PersonStats personStats, boolean empty) {","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"jereldlimjy"},"content":"            super.updateItem(personStats, empty);","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"jereldlimjy"},"content":"            if (empty || personStats \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"jereldlimjy"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"jereldlimjy"},"content":"                setText(null);","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"jereldlimjy"},"content":"            } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"jereldlimjy"},"content":"                setGraphic(new PersonStatsCard(personStats, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"jereldlimjy"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"jereldlimjy"},"content":"    private ObservableList\u003cPersonStats\u003e createPersonStatsList(","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"jereldlimjy"},"content":"            ObservableList\u003cPerson\u003e personList,","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"jereldlimjy"},"content":"            ObservableList\u003cTask\u003e taskList","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"jereldlimjy"},"content":"    ) {","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"jereldlimjy"},"content":"        List\u003cPersonStats\u003e personStatsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"jereldlimjy"},"content":"        for (Person person : personList) {","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"jereldlimjy"},"content":"            List\u003cTask\u003e personTasks \u003d taskList.stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"jereldlimjy"},"content":"                    .filter(task -\u003e task.getPersonAssignedName() !\u003d null","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"jereldlimjy"},"content":"                            \u0026\u0026 task.getPersonAssignedName().equals(person.getName().toString()))","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"jereldlimjy"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"jereldlimjy"},"content":"            int tasksAssigned \u003d personTasks.size();","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"jereldlimjy"},"content":"            int tasksCompleted \u003d (int) personTasks.stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"jereldlimjy"},"content":"                    .filter(Task::isDone)","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"jereldlimjy"},"content":"                    .count();","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"jereldlimjy"},"content":"            double averageScore \u003d personTasks.stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"jereldlimjy"},"content":"                    .filter(task -\u003e task.getScore() !\u003d null)","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"jereldlimjy"},"content":"                    .mapToDouble(task -\u003e task.getScore().getValue())","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"jereldlimjy"},"content":"                    .average()","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"jereldlimjy"},"content":"                    .orElse(Double.NaN);","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"jereldlimjy"},"content":"            personStatsList.add(new PersonStats(person, tasksAssigned, tasksCompleted, averageScore));","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"jereldlimjy"},"content":"        return FXCollections.observableArrayList(personStatsList);","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"jereldlimjy"},"content":"    private void updatePersonStatsList() {","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"jereldlimjy"},"content":"        personStatsList \u003d createPersonStatsList(logic.getFilteredPersonList(), logic.getFilteredTaskList());","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"jereldlimjy"},"content":"        personStatsListView.setItems(personStatsList);","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"jereldlimjy":97}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Cyrus-Krispin"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Cyrus-Krispin"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Cyrus-Krispin"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Cyrus-Krispin"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Cyrus-Krispin"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Cyrus-Krispin"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Cyrus-Krispin"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Cyrus-Krispin"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Score;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"PawanPatil19"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"    public final Task task;","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"    private Label taskDesc;","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"    private Label taskDeadline;","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"    private Label id;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"PawanPatil19"},"content":"    private Label personAssigned;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"PawanPatil19"},"content":"    private Label personRole;","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Cyrus-Krispin"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Cyrus-Krispin"},"content":"    private Label taskComment;","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Cyrus-Krispin"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Cyrus-Krispin"},"content":"    private Circle circle1;","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Cyrus-Krispin"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Cyrus-Krispin"},"content":"    private Circle circle2;","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Cyrus-Krispin"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Cyrus-Krispin"},"content":"    private Circle circle3;","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Cyrus-Krispin"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Cyrus-Krispin"},"content":"    private Circle circle4;","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Cyrus-Krispin"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Cyrus-Krispin"},"content":"    private Circle circle5;","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Cyrus-Krispin"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"Cyrus-Krispin"},"content":"    private Label status;","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"PawanPatil19"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Cyrus-Krispin"},"content":"    public TaskCard(Task task, int displayedIndex) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"PawanPatil19"},"content":"        super(FXML);","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"PawanPatil19"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"PawanPatil19"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"PawanPatil19"},"content":"        taskDesc.setText(task.getDescription().toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"PawanPatil19"},"content":"        if (task.getPersonAssignedName() \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"PawanPatil19"},"content":"            personAssigned.setText(\"Not Assigned\");","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"PawanPatil19"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"PawanPatil19"},"content":"            personAssigned.setText(task.getPersonAssignedName());","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"PawanPatil19"},"content":"        taskDeadline.setText(task.getDate());","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"PawanPatil19"},"content":"        if (task.getPersonAssignedRole() \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"PawanPatil19"},"content":"            personRole.setText(\"None\");","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"PawanPatil19"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"PawanPatil19"},"content":"            personRole.setText(task.getPersonAssignedRole());","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"Cyrus-Krispin"},"content":"        if (task.getTaskComment() \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"PawanPatil19"},"content":"            taskComment.setText(\"\");","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"Cyrus-Krispin"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"Cyrus-Krispin"},"content":"            taskComment.setText(task.getTaskComment().toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"Cyrus-Krispin"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Cyrus-Krispin"},"content":"        setScore(task);","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Cyrus-Krispin"},"content":"        setTaskStatus(task);","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void setScore(Task task) {","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"Cyrus-Krispin"},"content":"        if (task.isDone()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"PawanPatil19"},"content":"            Score score \u003d task.getScore();","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"PawanPatil19"},"content":"            if (score \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"PawanPatil19"},"content":"                circle1.setFill(Paint.valueOf(\"#ffffff\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"PawanPatil19"},"content":"                circle2.setFill(Paint.valueOf(\"#ffffff\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"PawanPatil19"},"content":"                circle3.setFill(Paint.valueOf(\"#ffffff\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"PawanPatil19"},"content":"                circle4.setFill(Paint.valueOf(\"#ffffff\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"PawanPatil19"},"content":"                circle5.setFill(Paint.valueOf(\"#ffffff\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"PawanPatil19"},"content":"            } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"PawanPatil19"},"content":"                if (score.getValue() \u003d\u003d 5) {","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"Cyrus-Krispin"},"content":"                    circle1.setFill(Paint.valueOf(\"#fad02c\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"Cyrus-Krispin"},"content":"                    circle2.setFill(Paint.valueOf(\"#fad02c\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"Cyrus-Krispin"},"content":"                    circle3.setFill(Paint.valueOf(\"#fad02c\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"Cyrus-Krispin"},"content":"                    circle4.setFill(Paint.valueOf(\"#fad02c\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"Cyrus-Krispin"},"content":"                    circle5.setFill(Paint.valueOf(\"#fad02c\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"PawanPatil19"},"content":"                } else if (score.getValue() \u003d\u003d 4) {","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"Cyrus-Krispin"},"content":"                    circle1.setFill(Paint.valueOf(\"#fad02c\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"Cyrus-Krispin"},"content":"                    circle2.setFill(Paint.valueOf(\"#fad02c\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"Cyrus-Krispin"},"content":"                    circle3.setFill(Paint.valueOf(\"#fad02c\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"Cyrus-Krispin"},"content":"                    circle4.setFill(Paint.valueOf(\"#fad02c\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"PawanPatil19"},"content":"                } else if (score.getValue() \u003d\u003d 3) {","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"Cyrus-Krispin"},"content":"                    circle1.setFill(Paint.valueOf(\"#fad02c\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"Cyrus-Krispin"},"content":"                    circle2.setFill(Paint.valueOf(\"#fad02c\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"Cyrus-Krispin"},"content":"                    circle3.setFill(Paint.valueOf(\"#fad02c\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"PawanPatil19"},"content":"                } else if (score.getValue() \u003d\u003d 2) {","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"Cyrus-Krispin"},"content":"                    circle1.setFill(Paint.valueOf(\"#fad02c\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"Cyrus-Krispin"},"content":"                    circle2.setFill(Paint.valueOf(\"#fad02c\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"PawanPatil19"},"content":"                } else if (score.getValue() \u003d\u003d 1) {","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"Cyrus-Krispin"},"content":"                    circle1.setFill(Paint.valueOf(\"#fad02c\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"Cyrus-Krispin"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"Cyrus-Krispin"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"Cyrus-Krispin"},"content":"        if (!task.isDone()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"Cyrus-Krispin"},"content":"            circle1.setFill(Paint.valueOf(\"#ffffff\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"Cyrus-Krispin"},"content":"            circle2.setFill(Paint.valueOf(\"#ffffff\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"Cyrus-Krispin"},"content":"            circle3.setFill(Paint.valueOf(\"#ffffff\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"Cyrus-Krispin"},"content":"            circle4.setFill(Paint.valueOf(\"#ffffff\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"Cyrus-Krispin"},"content":"            circle5.setFill(Paint.valueOf(\"#ffffff\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"Cyrus-Krispin"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void setTaskStatus(Task task) {","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"Cyrus-Krispin"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"Cyrus-Krispin"},"content":"            if (task.isDone()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"Cyrus-Krispin"},"content":"                status.setBackground(new Background(new BackgroundFill(Color.GREEN, CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"Cyrus-Krispin"},"content":"            } else if (task.isDueToday()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"Cyrus-Krispin"},"content":"                status.setBackground(new Background(new BackgroundFill(Color.ORANGE, CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"Cyrus-Krispin"},"content":"            } else if (task.isOverdue()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"Cyrus-Krispin"},"content":"                status.setBackground(new Background(new BackgroundFill(Color.RED, CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"Cyrus-Krispin"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"Cyrus-Krispin"},"content":"        } catch (IndexOutOfBoundsException | ParseException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"Cyrus-Krispin"},"content":"            status.setBackground(new Background(new BackgroundFill(Color.BLACK, CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"Cyrus-Krispin"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"PawanPatil19"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"PawanPatil19"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"PawanPatil19"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"PawanPatil19"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"PawanPatil19"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"PawanPatil19"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"PawanPatil19"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"PawanPatil19"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"PawanPatil19"},"content":"        // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"PawanPatil19"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"PawanPatil19"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"PawanPatil19"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"PawanPatil19"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"PawanPatil19":94,"Cyrus-Krispin":79}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Cyrus-Krispin"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"PawanPatil19"},"content":"        super(FXML);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"                setText(null);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"            } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Cyrus-Krispin"},"content":"                try {","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"                    setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Cyrus-Krispin"},"content":"                } catch (ParseException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Cyrus-Krispin"},"content":"                    throw new RuntimeException(e);","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Cyrus-Krispin"},"content":"                }","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"PawanPatil19"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"PawanPatil19":49,"Cyrus-Krispin":5}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"Cyrus-Krispin"},"content":"            mainWindow.setTheme();","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":88,"Cyrus-Krispin":1}},{"path":"src/main/resources/UmlDiagrams/DeleteCommand.puml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"\u0027autonumber","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"user -\u003e LogicManager : execute(commandText)","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"LogicManager -\u003e AddressBookParser: parseCommand(commandText)","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"activate \"AddressBookParser\"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"AddressBookParser -\u003e Matcher : group(\"commadWord\")","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"activate Matcher","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"Matcher --\u003e AddressBookParser : commandWord","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"deactivate Matcher","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"AddressBookParser -\u003e Matcher : group(\"arguments\")","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"activate Matcher","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"Matcher --\u003e AddressBookParser : arguments","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"deactivate Matcher","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Yaladah"},"content":"AddressBookParser -\u003e DeleteCommandParser : DeleteCommandParser()","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Yaladah"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"DeleteCommandParser --\u003e AddressBookParser : DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"AddressBookParser --\u003e LogicManager : DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":"LogicManager -\u003e DeleteCommand : execute(model)","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":"activate DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":"DeleteCommand -\u003e Model : getFilteredPersonsList()","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"Model --\u003e DeleteCommand : lastShownPersonsList","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"DeleteCommand -\u003e Model :deletePerson(personToDelete)","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Yaladah"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Yaladah"},"content":"DeleteCommand --\u003e LogicManager : CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"deactivate DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"LogicManager --\u003e user : CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Yaladah"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Yaladah":44}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Cyrus-Krispin"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":8,"Cyrus-Krispin":1}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#000000, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Semibold\";","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Semibold\";","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Light\";","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Semibold\";","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Light\";","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#1d1d1d, 20%)","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: #1c1c1c;","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-color: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-width: 2px;","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-insets: 2px;","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-color: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-width: 2px;","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-insets: 2px;","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Semibold\";","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Light\";","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Light\";","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Light\";","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#000000, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Light\";","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: #dedede;","lastModifiedDate":"2023-03-30"},{"lineNumber":230,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Light\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2023-03-30"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Light\";","lastModifiedDate":"2023-03-30"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"Cyrus-Krispin"},"content":"#roles {","lastModifiedDate":"2023-03-13"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"Cyrus-Krispin"},"content":"#roles .label {","lastModifiedDate":"2023-03-13"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"-":334,"Cyrus-Krispin":28}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-background: #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"Cyrus-Krispin"},"content":".role-selector {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":19,"Cyrus-Krispin":1}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cyrus-Krispin"},"content":".background {","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Cyrus-Krispin"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Cyrus-Krispin"},"content":".label {","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Semibold\";","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Cyrus-Krispin"},"content":".label-bright {","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Semibold\";","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Cyrus-Krispin"},"content":".label-header {","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Light\";","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Cyrus-Krispin"},"content":".text-field {","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Semibold\";","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Cyrus-Krispin"},"content":".tab-pane {","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Cyrus-Krispin"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"Cyrus-Krispin"},"content":".table-view {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Cyrus-Krispin"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Cyrus-Krispin"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-color:","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"Cyrus-Krispin"},"content":"            transparent","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"Cyrus-Krispin"},"content":"            transparent","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Cyrus-Krispin"},"content":"            derive(-fx-base, 80%)","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"Cyrus-Krispin"},"content":"            transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Cyrus-Krispin"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Light\";","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"Cyrus-Krispin"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"Cyrus-Krispin"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"Cyrus-Krispin"},"content":".split-pane {","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"Cyrus-Krispin"},"content":".list-view {","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Cyrus-Krispin"},"content":".list-cell {","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"Cyrus-Krispin"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: #dadada;","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-width: 2px;","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-insets: 2px;","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"Cyrus-Krispin"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-width: 2px;","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-insets: 2px;","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"Cyrus-Krispin"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: #7c8aa1;","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"Cyrus-Krispin"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"Cyrus-Krispin"},"content":".list-cell .label {","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"Cyrus-Krispin"},"content":".cell_big_label {","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Semibold\";","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"Cyrus-Krispin"},"content":".cell_small_label {","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Light\";","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"Cyrus-Krispin"},"content":".stack-pane {","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"Cyrus-Krispin"},"content":".pane-with-border {","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"Cyrus-Krispin"},"content":".status-bar {","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#ffffff, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"Cyrus-Krispin"},"content":".result-display {","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Light\";","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"Cyrus-Krispin"},"content":".result-display .label {","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"Cyrus-Krispin"},"content":".status-bar .label {","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Light\";","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"Cyrus-Krispin"},"content":".status-bar-with-border {","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#ffffff, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"Cyrus-Krispin"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"Cyrus-Krispin"},"content":".grid-pane {","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#ffffff, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"Cyrus-Krispin"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"Cyrus-Krispin"},"content":".context-menu {","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#ffffff, 50%);","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"Cyrus-Krispin"},"content":".context-menu .label {","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"Cyrus-Krispin"},"content":".menu-bar {","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#b6b6b6, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"Cyrus-Krispin"},"content":".menu-bar .label {","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-03-30"},{"lineNumber":210,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Light\";","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":214,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"Cyrus-Krispin"},"content":".menu .left-container {","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"Cyrus-Krispin"},"content":"/*","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"Cyrus-Krispin"},"content":" * Metro style Push Button","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"Cyrus-Krispin"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"Cyrus-Krispin"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-03-30"},{"lineNumber":223,"author":{"gitId":"Cyrus-Krispin"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":224,"author":{"gitId":"Cyrus-Krispin"},"content":".button {","lastModifiedDate":"2023-03-30"},{"lineNumber":225,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-03-30"},{"lineNumber":226,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2023-03-30"},{"lineNumber":227,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-30"},{"lineNumber":228,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":229,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: #2a2a2a;","lastModifiedDate":"2023-03-30"},{"lineNumber":230,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-30"},{"lineNumber":231,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-30"},{"lineNumber":232,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":233,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-03-30"},{"lineNumber":234,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":235,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":236,"author":{"gitId":"Cyrus-Krispin"},"content":".button:hover {","lastModifiedDate":"2023-03-30"},{"lineNumber":237,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2023-03-30"},{"lineNumber":238,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":239,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":240,"author":{"gitId":"Cyrus-Krispin"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-03-30"},{"lineNumber":241,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":242,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-30"},{"lineNumber":243,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":244,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":245,"author":{"gitId":"Cyrus-Krispin"},"content":".button:focused {","lastModifiedDate":"2023-03-30"},{"lineNumber":246,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2023-03-30"},{"lineNumber":247,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":248,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-03-30"},{"lineNumber":249,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":251,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":252,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":253,"author":{"gitId":"Cyrus-Krispin"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-03-30"},{"lineNumber":254,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-03-30"},{"lineNumber":255,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-30"},{"lineNumber":256,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":257,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":258,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":259,"author":{"gitId":"Cyrus-Krispin"},"content":".button:default {","lastModifiedDate":"2023-03-30"},{"lineNumber":260,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-30"},{"lineNumber":261,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":262,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":263,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":264,"author":{"gitId":"Cyrus-Krispin"},"content":".button:default:hover {","lastModifiedDate":"2023-03-30"},{"lineNumber":265,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":266,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":267,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":268,"author":{"gitId":"Cyrus-Krispin"},"content":".dialog-pane {","lastModifiedDate":"2023-03-30"},{"lineNumber":269,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-30"},{"lineNumber":270,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":271,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":272,"author":{"gitId":"Cyrus-Krispin"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-03-30"},{"lineNumber":273,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-30"},{"lineNumber":274,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":275,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":276,"author":{"gitId":"Cyrus-Krispin"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-03-30"},{"lineNumber":277,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-30"},{"lineNumber":278,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-30"},{"lineNumber":279,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":280,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":281,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":282,"author":{"gitId":"Cyrus-Krispin"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-03-30"},{"lineNumber":283,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#ffffff, 25%);","lastModifiedDate":"2023-03-30"},{"lineNumber":284,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":285,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":286,"author":{"gitId":"Cyrus-Krispin"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-03-30"},{"lineNumber":287,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-03-30"},{"lineNumber":288,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-03-30"},{"lineNumber":289,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-fill: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":290,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":291,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":292,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":293,"author":{"gitId":"Cyrus-Krispin"},"content":".scroll-bar {","lastModifiedDate":"2023-03-30"},{"lineNumber":294,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":295,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":296,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":297,"author":{"gitId":"Cyrus-Krispin"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-03-30"},{"lineNumber":298,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-03-30"},{"lineNumber":299,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-03-30"},{"lineNumber":300,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":301,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":302,"author":{"gitId":"Cyrus-Krispin"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-03-30"},{"lineNumber":303,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":304,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":305,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":306,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":307,"author":{"gitId":"Cyrus-Krispin"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-03-30"},{"lineNumber":308,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-03-30"},{"lineNumber":309,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":310,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":311,"author":{"gitId":"Cyrus-Krispin"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-03-30"},{"lineNumber":312,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-03-30"},{"lineNumber":313,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":314,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":315,"author":{"gitId":"Cyrus-Krispin"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-03-30"},{"lineNumber":316,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":317,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":318,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":319,"author":{"gitId":"Cyrus-Krispin"},"content":"#cardPane {","lastModifiedDate":"2023-03-30"},{"lineNumber":320,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":321,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":322,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":323,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":324,"author":{"gitId":"Cyrus-Krispin"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-03-30"},{"lineNumber":325,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-03-30"},{"lineNumber":326,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-03-30"},{"lineNumber":327,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":328,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":329,"author":{"gitId":"Cyrus-Krispin"},"content":"#commandTextField {","lastModifiedDate":"2023-03-30"},{"lineNumber":330,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":331,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":332,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2023-03-30"},{"lineNumber":333,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":334,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":335,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-family: \"Comic Sans MS Light\";","lastModifiedDate":"2023-03-30"},{"lineNumber":336,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-30"},{"lineNumber":337,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":338,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":339,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":340,"author":{"gitId":"Cyrus-Krispin"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2023-03-30"},{"lineNumber":341,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-03-30"},{"lineNumber":342,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":343,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":344,"author":{"gitId":"Cyrus-Krispin"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-03-30"},{"lineNumber":345,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":346,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":347,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":348,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":349,"author":{"gitId":"Cyrus-Krispin"},"content":"#roles {","lastModifiedDate":"2023-03-30"},{"lineNumber":350,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-30"},{"lineNumber":351,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-30"},{"lineNumber":352,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":353,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":354,"author":{"gitId":"Cyrus-Krispin"},"content":"#roles .label {","lastModifiedDate":"2023-03-30"},{"lineNumber":355,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":356,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-03-30"},{"lineNumber":357,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-30"},{"lineNumber":358,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-30"},{"lineNumber":359,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-30"},{"lineNumber":360,"author":{"gitId":"Cyrus-Krispin"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-30"},{"lineNumber":361,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Cyrus-Krispin":361}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"Cyrus-Krispin"},"content":"\u003c?import javafx.scene.control.CheckMenuItem?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"Cyrus-Krispin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"Cyrus-Krispin"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"Cyrus-Krispin"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"750\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Pied Piper\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"Cyrus-Krispin"},"content":"        \u003cURL value\u003d\"@LightTheme.css\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"Cyrus-Krispin"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Cyrus-Krispin"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Cyrus-Krispin"},"content":"              \u003cMenuBar fx:id\u003d\"menuBar\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                  \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                  \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"Cyrus-Krispin"},"content":"                     \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"View\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Cyrus-Krispin"},"content":"                        \u003citems\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Cyrus-Krispin"},"content":"                           \u003cMenuItem fx:id\u003d\"Tasks\" onAction\u003d\"#tasksClicked\" text\u003d\"Tasks\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Cyrus-Krispin"},"content":"                           \u003cMenuItem fx:id\u003d\"Persons\" onAction\u003d\"#personsClicked\" text\u003d\"Persons\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"                           \u003cMenuItem fx:id\u003d\"Review\" onAction\u003d\"#reviewClicked\" text\u003d\"Review\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Cyrus-Krispin"},"content":"                        \u003c/items\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Cyrus-Krispin"},"content":"                     \u003c/Menu\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Cyrus-Krispin"},"content":"                     \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Theme\" fx:id\u003d\"menuButton\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Cyrus-Krispin"},"content":"                        \u003citems\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Cyrus-Krispin"},"content":"                           \u003cCheckMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Dark Mode\" fx:id\u003d\"dark\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Cyrus-Krispin"},"content":"                        \u003c/items\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Cyrus-Krispin"},"content":"                     \u003c/Menu\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"              \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"Cyrus-Krispin"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Cyrus-Krispin"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"Cyrus-Krispin"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":56,"author":{"gitId":"Cyrus-Krispin"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":60,"author":{"gitId":"Cyrus-Krispin"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":62,"author":{"gitId":"Cyrus-Krispin"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":66,"author":{"gitId":"Cyrus-Krispin"},"content":"        \u003cVBox fx:id\u003d\"panelList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":68,"author":{"gitId":"Cyrus-Krispin"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"30\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":70,"author":{"gitId":"Cyrus-Krispin"},"content":"          \u003cLabel fx:id\u003d\"panelLabel\" styleClass\u003d\"label-bright\" text\u003d\"Tasks\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"jereldlimjy"},"content":"          \u003cStackPane fx:id\u003d\"listPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":47,"jereldlimjy":2,"PawanPatil19":1,"Cyrus-Krispin":28}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"Cyrus-Krispin"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"Cyrus-Krispin"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" style\u003d\"-fx-font-size: 20px;\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"Cyrus-Krispin"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" style\u003d\"-fx-font-size: 20px;\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"Cyrus-Krispin"},"content":"      \u003cFlowPane fx:id\u003d\"roles\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":32,"Cyrus-Krispin":4}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Cyrus-Krispin"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":7,"Cyrus-Krispin":1}},{"path":"src/main/resources/view/PersonStatsListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Cyrus-Krispin"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"jereldlimjy"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"jereldlimjy"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"jereldlimjy"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"jereldlimjy"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"jereldlimjy"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Cyrus-Krispin"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" style\u003d\"-fx-font-size: 20px;\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Cyrus-Krispin"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" style\u003d\"-fx-font-size: 20px;\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"      \u003cLabel fx:id\u003d\"tasksAssigned\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$tasksAssigned\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"jereldlimjy"},"content":"      \u003cLabel fx:id\u003d\"tasksCompleted\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$tasksCompleted\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"jereldlimjy"},"content":"      \u003cLabel fx:id\u003d\"averageScore\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$averageScore\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"jereldlimjy":32,"Cyrus-Krispin":3}},{"path":"src/main/resources/view/PersonStatsListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Cyrus-Krispin"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"  \u003cListView fx:id\u003d\"personStatsListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"jereldlimjy":7,"Cyrus-Krispin":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Cyrus-Krispin"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":8,"Cyrus-Krispin":1}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"Cyrus-Krispin"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"-":11,"Cyrus-Krispin":1}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Cyrus-Krispin"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Cyrus-Krispin"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Cyrus-Krispin"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" spacing\u003d\"10.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Cyrus-Krispin"},"content":"  \u003cGridPane fx:id\u003d\"gridPane\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Cyrus-Krispin"},"content":"      \u003cBorderPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Cyrus-Krispin"},"content":"         \u003ctop\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Cyrus-Krispin"},"content":"            \u003cHBox BorderPane.alignment\u003d\"TOP_LEFT\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Cyrus-Krispin"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Cyrus-Krispin"},"content":"                  \u003cLabel fx:id\u003d\"id\" style\u003d\"-fx-font-size: 20px;\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Cyrus-Krispin"},"content":"                \u003cLabel fx:id\u003d\"taskDesc\" alignment\u003d\"CENTER\" style\u003d\"-fx-font-size: 20px;\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"                        \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"Cyrus-Krispin"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Cyrus-Krispin"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Cyrus-Krispin"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Cyrus-Krispin"},"content":"         \u003c/top\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Cyrus-Krispin"},"content":"         \u003cright\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Cyrus-Krispin"},"content":"            \u003cHBox alignment\u003d\"CENTER\" spacing\u003d\"10.0\" BorderPane.alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Cyrus-Krispin"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Cyrus-Krispin"},"content":"                  \u003cLabel style\u003d\"-fx-font-size: 15px;\" text\u003d\"Assigned to: \" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Cyrus-Krispin"},"content":"               \u003cLabel fx:id\u003d\"personAssigned\" style\u003d\"-fx-font-size: 15px;\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"Cyrus-Krispin"},"content":"               \u003cLabel fx:id\u003d\"personRole\" contentDisplay\u003d\"CENTER\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"25.0\" style\u003d\"-fx-background-color: #3e7b91; -fx-background-radius: 5px; -fx-alignment: center; -fx-label-padding: 5px;\" styleClass\u003d\"cell_small_label\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Cyrus-Krispin"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Cyrus-Krispin"},"content":"                        \u003cFont size\u003d\"11.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Cyrus-Krispin"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Cyrus-Krispin"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Cyrus-Krispin"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Cyrus-Krispin"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Cyrus-Krispin"},"content":"         \u003c/right\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"Cyrus-Krispin"},"content":"         \u003cbottom\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Cyrus-Krispin"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"30.0\" spacing\u003d\"3.0\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Cyrus-Krispin"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Cyrus-Krispin"},"content":"                  \u003cCircle fx:id\u003d\"circle1\" fill\u003d\"WHITE\" radius\u003d\"6.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Cyrus-Krispin"},"content":"                  \u003cCircle fx:id\u003d\"circle2\" fill\u003d\"WHITE\" layoutX\u003d\"21.0\" layoutY\u003d\"21.0\" radius\u003d\"6.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Cyrus-Krispin"},"content":"                  \u003cCircle fx:id\u003d\"circle3\" fill\u003d\"WHITE\" layoutX\u003d\"43.0\" layoutY\u003d\"21.0\" radius\u003d\"6.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Cyrus-Krispin"},"content":"                  \u003cCircle fx:id\u003d\"circle4\" fill\u003d\"WHITE\" layoutX\u003d\"66.0\" layoutY\u003d\"21.0\" radius\u003d\"6.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Cyrus-Krispin"},"content":"                  \u003cCircle fx:id\u003d\"circle5\" fill\u003d\"WHITE\" layoutX\u003d\"88.0\" layoutY\u003d\"21.0\" radius\u003d\"6.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Cyrus-Krispin"},"content":"         \u003c/bottom\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Cyrus-Krispin"},"content":"         \u003cleft\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"Cyrus-Krispin"},"content":"            \u003cVBox BorderPane.alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Cyrus-Krispin"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Cyrus-Krispin"},"content":"                  \u003cLabel fx:id\u003d\"status\" text\u003d\"STATUS\" style\u003d\"-fx-text-fill: white\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"Cyrus-Krispin"},"content":"               \u003cLabel fx:id\u003d\"taskDeadline\" style\u003d\"-fx-font-size: 15px;\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"Cyrus-Krispin"},"content":"                  \u003cHBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Cyrus-Krispin"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"Cyrus-Krispin"},"content":"                        \u003cLabel style\u003d\"-fx-font-size: 15px;\" styleClass\u003d\"cell_small_label\" text\u003d\"Comment: \" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"Cyrus-Krispin"},"content":"                        \u003cLabel fx:id\u003d\"taskComment\" style\u003d\"-fx-font-size: 15px;\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Cyrus-Krispin"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Cyrus-Krispin"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Cyrus-Krispin"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"PawanPatil19"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Cyrus-Krispin"},"content":"         \u003c/left\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"Cyrus-Krispin"},"content":"      \u003c/BorderPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"PawanPatil19"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"PawanPatil19"},"content":"          \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"PawanPatil19"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"PawanPatil19"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Cyrus-Krispin"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"Cyrus-Krispin"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"Cyrus-Krispin"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"PawanPatil19"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"PawanPatil19":25,"Cyrus-Krispin":53}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Cyrus-Krispin"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"  \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"PawanPatil19":7,"Cyrus-Krispin":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.storage.JsonTaskStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel taskBookModel \u003d new TaskBookModelManager();","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"        JsonTaskStorage taskStorage \u003d new JsonTaskStorage(temporaryFolder.resolve(\"tasks.json\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, taskStorage, userPrefsStorage);","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"        logic \u003d new LogicManager(model, taskBookModel, storage);","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"PawanPatil19"},"content":"        JsonTaskStorage taskStorage \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"PawanPatil19"},"content":"                new JsonTaskStorage(temporaryFolder.resolve(\"ioExceptionTasks.json\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"PawanPatil19"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, taskStorage, userPrefsStorage);","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"Cyrus-Krispin"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withRoles().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":158,"PawanPatil19":10,"Cyrus-Krispin":1}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel taskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel \u003d new TaskBookModelManager(new TaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModel expectedTaskBookModel \u003d new TaskBookModelManager(taskBookModel.getTaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model, taskBookModel,","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandFailure(new AddCommand(personInList), model, taskBookModel, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":42,"PawanPatil19":9}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub, new TaskBookModelStub());","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"            addCommand.execute(modelStub, new TaskBookModelStub()));","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"PawanPatil19"},"content":"        public boolean hasPersonIndex(Index personIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"PawanPatil19"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"PawanPatil19"},"content":"    private class TaskBookModelStub implements TaskBookModel {","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"PawanPatil19"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027setUserPrefs\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"PawanPatil19"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":216,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getUserPrefs\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"PawanPatil19"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getGuiSettings\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":224,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":225,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"PawanPatil19"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-27"},{"lineNumber":227,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027setGuiSettings\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"PawanPatil19"},"content":"        public Path getTaskBookFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getTaskBookFilePath\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"PawanPatil19"},"content":"        public void setTaskBook(ReadOnlyTaskBook taskBook) {","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027setTaskBook\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":244,"author":{"gitId":"PawanPatil19"},"content":"        public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":246,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getTaskBook\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":247,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":249,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"PawanPatil19"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027hasTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":253,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":255,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":256,"author":{"gitId":"PawanPatil19"},"content":"        public boolean hasTaskIndex(Index taskIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":257,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":258,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027hasTaskIndex\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":259,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":260,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":261,"author":{"gitId":"Yaladah"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":262,"author":{"gitId":"Yaladah"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-03-29"},{"lineNumber":263,"author":{"gitId":"Yaladah"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-29"},{"lineNumber":264,"author":{"gitId":"Yaladah"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027setTask\u0027\");","lastModifiedDate":"2023-03-29"},{"lineNumber":265,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":266,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":267,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":268,"author":{"gitId":"PawanPatil19"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2023-03-27"},{"lineNumber":269,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":270,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027deleteTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":271,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":272,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":273,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":274,"author":{"gitId":"PawanPatil19"},"content":"        public void addTask(Task target) {","lastModifiedDate":"2023-03-27"},{"lineNumber":275,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":276,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027addTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":277,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":278,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":279,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":280,"author":{"gitId":"PawanPatil19"},"content":"        public void markTask(Task taskToMark, Task markedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":281,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":282,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027markTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":283,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":284,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":285,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":286,"author":{"gitId":"PawanPatil19"},"content":"        public void unmarkTask(Task taskToUnmark, Task unmarkedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":287,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":288,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027unmarkTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":289,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":290,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":291,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":292,"author":{"gitId":"PawanPatil19"},"content":"        public void commentOnTask(Task taskToComment, Task commentedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":293,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":294,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027commentOnTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":295,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":296,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":297,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":298,"author":{"gitId":"PawanPatil19"},"content":"        public void assignTask(Task taskToAssign, Task assignedTask, Index taskIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":299,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":300,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027assignTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":301,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":302,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":303,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":304,"author":{"gitId":"PawanPatil19"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-27"},{"lineNumber":305,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":306,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getFilteredTaskList\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":307,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":308,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":309,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":310,"author":{"gitId":"PawanPatil19"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-03-27"},{"lineNumber":311,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":312,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027updateFilteredTaskList\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":313,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":314,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":315,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":316,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"zhengsterz":1,"Yaladah":6,"-":192,"PawanPatil19":118}},{"path":"src/test/java/seedu/address/logic/commands/AssignTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PawanPatil19"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"PawanPatil19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"PawanPatil19"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"PawanPatil19"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.logic.commands.AssignTaskCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.testutil.DeadlineTaskBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":" * {@code assign command}.","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"PawanPatil19"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"public class AssignTaskCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel taskBookModel \u003d new TaskBookModelManager(new TaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"    public void execute_validTaskPersonIndex_success() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"        Index taskToAssign \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"        Index personToAssign \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"PawanPatil19"},"content":"        DeadlineTask validDeadlineTask \u003d new DeadlineTaskBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.addTask(validDeadlineTask);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"PawanPatil19"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(taskToAssign, personToAssign);","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"PawanPatil19"},"content":"        Task task \u003d taskBookModel.getFilteredTaskList().get(taskToAssign.getZeroBased());","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"PawanPatil19"},"content":"        Person person \u003d model.getFilteredPersonList().get(personToAssign.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SUCCESS, person.getName().toString(), task.toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"        Task assignedTask \u003d createAssignedTask(task, personToAssign, person);","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.assignTask(task, assignedTask, taskToAssign);","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"PawanPatil19"},"content":"        assertEquals(assignTaskCommand.execute(model, taskBookModel).getFeedbackToUser(), expectedMessage);","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"PawanPatil19"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"PawanPatil19"},"content":"    public void execute_invalidTaskIndex_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"PawanPatil19"},"content":"        Index outOfBoundTaskIndex \u003d Index.fromOneBased(taskBookModel.getFilteredTaskList().size() + 1);","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"PawanPatil19"},"content":"        Index personToAssign \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"PawanPatil19"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(outOfBoundTaskIndex, personToAssign);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandFailure(assignTaskCommand, model, taskBookModel, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"PawanPatil19"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"PawanPatil19"},"content":"    public void execute_invalidPersonIndex_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"PawanPatil19"},"content":"        Index taskToAssign \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"PawanPatil19"},"content":"        DeadlineTask validDeadlineTask \u003d new DeadlineTaskBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.addTask(validDeadlineTask);","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"PawanPatil19"},"content":"        Index outOfBoundPersonIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"PawanPatil19"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(taskToAssign, outOfBoundPersonIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandFailure(assignTaskCommand, model, taskBookModel, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"PawanPatil19"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"PawanPatil19"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"PawanPatil19"},"content":"        Index taskToAssign \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"PawanPatil19"},"content":"        Index personToAssign \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"PawanPatil19"},"content":"        DeadlineTask validDeadlineTask \u003d new DeadlineTaskBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.addTask(validDeadlineTask);","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"PawanPatil19"},"content":"        AssignTaskCommand assignFirstCommand \u003d new AssignTaskCommand(taskToAssign, personToAssign);","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"PawanPatil19"},"content":"        AssignTaskCommand assignSecondCommand \u003d new AssignTaskCommand(taskToAssign, personToAssign);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"PawanPatil19"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"PawanPatil19"},"content":"        assertTrue(assignFirstCommand.equals(assignFirstCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"PawanPatil19"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"PawanPatil19"},"content":"        assertTrue(assignFirstCommand.equals(assignSecondCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"PawanPatil19"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"PawanPatil19"},"content":"        assertFalse(assignFirstCommand.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"PawanPatil19"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"PawanPatil19"},"content":"        assertFalse(assignFirstCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"PawanPatil19"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"PawanPatil19"},"content":"        assertFalse(assignFirstCommand.equals(new AssignTaskCommand(INDEX_SECOND_TASK, personToAssign)));","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"PawanPatil19"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"PawanPatil19"},"content":"        assertFalse(assignFirstCommand.equals(new AssignTaskCommand(taskToAssign, INDEX_FIRST_PERSON)));","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"PawanPatil19"},"content":"    private static Task createAssignedTask(Task taskToAssign, Index personToAssign, Person personAssigned) {","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"PawanPatil19"},"content":"        TaskDescription taskDesc \u003d taskToAssign.getDescription();","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"PawanPatil19"},"content":"        Date taskDate \u003d ((DeadlineTask) taskToAssign).getDeadlineDate();","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"PawanPatil19"},"content":"        Task assignedTask \u003d new DeadlineTask(taskDesc, taskDate);","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"PawanPatil19"},"content":"        assignedTask.assignPerson(personToAssign, personAssigned);","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"PawanPatil19"},"content":"        return assignedTask;","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"PawanPatil19"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"PawanPatil19":121}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModel taskBookModel \u003d new TaskBookModelManager();","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModel expectedTaskBookModel \u003d new TaskBookModelManager();","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(new ClearCommand(), model, taskBookModel, ClearCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"                expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModel taskBookModel \u003d new TaskBookModelManager();","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModel expectedTaskBookModel \u003d new TaskBookModelManager();","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"        expectedTaskBookModel.setTaskBook(new TaskBook());","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(new ClearCommand(), model, taskBookModel, ClearCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"                expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":30,"PawanPatil19":12}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.task.TaskDescriptionContainsKeywordsPredicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"Cyrus-Krispin"},"content":"    public static final String VALID_ROLE_HUSBAND \u003d \"husband\";","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Cyrus-Krispin"},"content":"    public static final String VALID_ROLE_FRIEND \u003d \"friend\";","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Cyrus-Krispin"},"content":"    public static final String ROLE_DESC_FRIEND \u003d \" \" + PREFIX_ROLE + VALID_ROLE_FRIEND;","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Cyrus-Krispin"},"content":"    public static final String ROLE_DESC_HUSBAND \u003d \" \" + PREFIX_ROLE + VALID_ROLE_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Cyrus-Krispin"},"content":"    public static final String INVALID_ROLE_DESC \u003d \" \" + PREFIX_ROLE + \"hubby*\"; // \u0027*\u0027 not allowed in roles","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Cyrus-Krispin"},"content":"                .withRoles(VALID_ROLE_FRIEND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Cyrus-Krispin"},"content":"                .withRoles(VALID_ROLE_HUSBAND, VALID_ROLE_FRIEND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"PawanPatil19"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel,","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModel actualTaskBookModel, CommandResult expectedCommandResult,","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"PawanPatil19"},"content":"        Model expectedModel, TaskBookModel expectedTaskBookModel) {","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"PawanPatil19"},"content":"            CommandResult result \u003d command.execute(actualModel, actualTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"PawanPatil19"},"content":"            assertEquals(expectedTaskBookModel, actualTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"PawanPatil19"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel,","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModel actualTaskBookModel, String expectedMessage,","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"PawanPatil19"},"content":"        Model expectedModel, TaskBookModel expectedTaskBookModel) {","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(command, actualModel, actualTaskBookModel, expectedCommandResult,","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"PawanPatil19"},"content":"                    expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"PawanPatil19"},"content":"    public static void assertCommandFailure(Command command, Model actualModel,","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModel actualTaskBookModel, String expectedMessage) {","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"PawanPatil19"},"content":"        TaskBook expectedTaskBook \u003d new TaskBook(actualTaskBookModel.getTaskBook());","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"PawanPatil19"},"content":"        List\u003cTask\u003e expectedTaskFilteredList \u003d new ArrayList\u003c\u003e(actualTaskBookModel.getFilteredTaskList());","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"PawanPatil19"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel, actualTaskBookModel));","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"PawanPatil19"},"content":"        assertEquals(expectedTaskBook, actualTaskBookModel.getTaskBook());","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"PawanPatil19"},"content":"        assertEquals(expectedTaskFilteredList, actualTaskBookModel.getFilteredTaskList());","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"Yaladah"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"Yaladah"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"PawanPatil19"},"content":"    public static void showTaskAtIndex(TaskBookModel taskBookModel, Index targetIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"PawanPatil19"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c taskBookModel.getFilteredTaskList().size());","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"PawanPatil19"},"content":"        Task task \u003d taskBookModel.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"Yaladah"},"content":"        final String[] splitName \u003d task.getDescription().fullTaskDescription.split(\"\\\\s+\");","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.updateFilteredTaskList(new TaskDescriptionContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"PawanPatil19"},"content":"        assertEquals(1, taskBookModel.getFilteredTaskList().size());","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Yaladah":11,"-":112,"PawanPatil19":26,"Cyrus-Krispin":8}},{"path":"src/test/java/seedu/address/logic/commands/CommentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Comment;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"public class CommentCommandTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel taskBookModel \u003d new TaskBookModelManager(new TaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(taskBookModel.getFilteredTaskList().size() + 1);","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        Comment com \u003d new Comment(\"Well Done\");","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        CommentCommand commentCommand \u003d new CommentCommand(outOfBoundIndex, com);","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandFailure(commentCommand, model, taskBookModel, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    public void constructor_nullComment_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CommentCommand(null, null));","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"    public void equals() {","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        Comment first \u003d new Comment(\"Well done\");","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"        Comment second \u003d new Comment(\"Not done well\");","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"        Index firstTaskIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"        Index secondTaskIndex \u003d Index.fromZeroBased(2);","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"        CommentCommand addFirstCommand \u003d new CommentCommand(firstTaskIndex, first);","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        CommentCommand addSecondCommand \u003d new CommentCommand(secondTaskIndex, second);","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(addFirstCommand.equals(addFirstCommand));","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"        CommentCommand addFirstCommandCopy \u003d new CommentCommand(firstTaskIndex, first);","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(addFirstCommand.equals(addFirstCommandCopy));","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(addFirstCommand.equals(1));","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(addFirstCommand.equals(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"        // different comments -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(addFirstCommand.equals(addSecondCommand));","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"        // different task index -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"        CommentCommand addSecondCommandCopyDifferentIndex \u003d new CommentCommand(secondTaskIndex, first);","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(addSecondCommand.equals(addSecondCommandCopyDifferentIndex));","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"zhengsterz":70,"PawanPatil19":6}},{"path":"src/test/java/seedu/address/logic/commands/DeadlineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.testutil.DeadlineTaskBuilder;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    public void constructor_nullDeadlineTask_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeadlineCommand(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    public void execute_deadlineTaskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"        ModelStubAcceptingDeadlineTaskAdded modelStub \u003d new ModelStubAcceptingDeadlineTaskAdded();","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask validDeadlineTask \u003d new DeadlineTaskBuilder().build();","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"        CommandResult commandResult \u003d new DeadlineCommand(validDeadlineTask).execute(new ModelStub(), modelStub);","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(String.format(DeadlineCommand.MESSAGE_SUCCESS, validDeadlineTask),","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(Arrays.asList(validDeadlineTask), modelStub.tasksAdded);","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"    public void execute_duplicateDeadlineTask_throwsCommandException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask validDeadlineTask \u003d new DeadlineTaskBuilder().build();","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"        DeadlineCommand deadlineCommand \u003d new DeadlineCommand(validDeadlineTask);","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModelStub modelStub \u003d new ModelStubWithDeadlineTask(validDeadlineTask);","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"PawanPatil19"},"content":"                DeadlineCommand.MESSAGE_DUPLICATE_TASK, () -\u003e deadlineCommand.execute(new ModelStub(), modelStub));","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"    public void equals() {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask firstTask \u003d new DeadlineTaskBuilder().withTaskDescription(\"obtain team approval\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask secondTask \u003d new DeadlineTaskBuilder().withTaskDescription(\"proofread documents\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"        DeadlineCommand addFirstTaskCommand \u003d new DeadlineCommand(firstTask);","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"        DeadlineCommand addSecondTaskCommand \u003d new DeadlineCommand(secondTask);","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(addFirstTaskCommand.equals(addFirstTaskCommand));","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"        DeadlineCommand addFirstTaskCommandCopy \u003d new DeadlineCommand(firstTask);","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(addFirstTaskCommand.equals(addFirstTaskCommandCopy));","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(addFirstTaskCommand.equals(1));","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(addFirstTaskCommand.equals(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"zhengsterz"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(addFirstTaskCommand.equals(addSecondTaskCommand));","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"zhengsterz"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"zhengsterz"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"zhengsterz"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"zhengsterz"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"zhengsterz"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"zhengsterz"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"zhengsterz"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"zhengsterz"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"zhengsterz"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"zhengsterz"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"zhengsterz"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"zhengsterz"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"PawanPatil19"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"Yaladah"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"PawanPatil19"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"Yaladah"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"PawanPatil19"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"PawanPatil19"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"PawanPatil19"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"PawanPatil19"},"content":"        public boolean hasPersonIndex(Index personIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"PawanPatil19"},"content":"    private class TaskBookModelStub implements TaskBookModel {","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"PawanPatil19"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027setUserPrefs\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"PawanPatil19"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getUserPrefs\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"PawanPatil19"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getGuiSettings\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":184,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":185,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":186,"author":{"gitId":"PawanPatil19"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027setGuiSettings\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":190,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":191,"author":{"gitId":"Yaladah"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"PawanPatil19"},"content":"        public Path getTaskBookFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getTaskBookFilePath\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":196,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"jereldlimjy"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"PawanPatil19"},"content":"        public void setTaskBook(ReadOnlyTaskBook taskBook) {","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":200,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027setTaskBook\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":202,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":203,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"PawanPatil19"},"content":"        public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getTaskBook\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"PawanPatil19"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027hasTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":216,"author":{"gitId":"PawanPatil19"},"content":"        public boolean hasTaskIndex(Index taskIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027hasTaskIndex\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"Yaladah"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":222,"author":{"gitId":"Yaladah"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-03-29"},{"lineNumber":223,"author":{"gitId":"Yaladah"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-29"},{"lineNumber":224,"author":{"gitId":"Yaladah"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027setTask\u0027\");","lastModifiedDate":"2023-03-29"},{"lineNumber":225,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":226,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":227,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"PawanPatil19"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027deleteTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"PawanPatil19"},"content":"        public void addTask(Task target) {","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027addTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"PawanPatil19"},"content":"        public void markTask(Task task, Task markedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":241,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027markTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":244,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":245,"author":{"gitId":"jereldlimjy"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"PawanPatil19"},"content":"        public void unmarkTask(Task taskToUnmark, Task unmarkedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":247,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027unmarkTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":249,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"PawanPatil19"},"content":"        public void commentOnTask(Task taskToComment, Task commentedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":253,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027commentOnTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":255,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":256,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":257,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":258,"author":{"gitId":"PawanPatil19"},"content":"        public void assignTask(Task taskToAssign, Task assignedTask, Index taskIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":259,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":260,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027assignTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":261,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":262,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":263,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":264,"author":{"gitId":"PawanPatil19"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-27"},{"lineNumber":265,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":266,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getFilteredTaskList\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":267,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":268,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":269,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":270,"author":{"gitId":"PawanPatil19"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-03-27"},{"lineNumber":271,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":272,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027updateFilteredTaskList\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":273,"author":{"gitId":"jereldlimjy"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":274,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":275,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":276,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":277,"author":{"gitId":"zhengsterz"},"content":"     * A Model stub that contains a single task.","lastModifiedDate":"2023-03-18"},{"lineNumber":278,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":279,"author":{"gitId":"PawanPatil19"},"content":"    private class ModelStubWithDeadlineTask extends TaskBookModelStub {","lastModifiedDate":"2023-03-27"},{"lineNumber":280,"author":{"gitId":"zhengsterz"},"content":"        private final DeadlineTask task;","lastModifiedDate":"2023-03-09"},{"lineNumber":281,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":282,"author":{"gitId":"zhengsterz"},"content":"        ModelStubWithDeadlineTask(DeadlineTask task) {","lastModifiedDate":"2023-03-09"},{"lineNumber":283,"author":{"gitId":"zhengsterz"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":284,"author":{"gitId":"zhengsterz"},"content":"            this.task \u003d task;","lastModifiedDate":"2023-03-09"},{"lineNumber":285,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":286,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":287,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":288,"author":{"gitId":"zhengsterz"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-09"},{"lineNumber":289,"author":{"gitId":"zhengsterz"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":290,"author":{"gitId":"zhengsterz"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":291,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":292,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":293,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":294,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":295,"author":{"gitId":"zhengsterz"},"content":"     * A Model stub that always accept the task being added.","lastModifiedDate":"2023-03-17"},{"lineNumber":296,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":297,"author":{"gitId":"PawanPatil19"},"content":"    private class ModelStubAcceptingDeadlineTaskAdded extends TaskBookModelStub {","lastModifiedDate":"2023-03-27"},{"lineNumber":298,"author":{"gitId":"zhengsterz"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":299,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":300,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":301,"author":{"gitId":"zhengsterz"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-09"},{"lineNumber":302,"author":{"gitId":"zhengsterz"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":303,"author":{"gitId":"zhengsterz"},"content":"            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2023-03-09"},{"lineNumber":304,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":305,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":306,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":307,"author":{"gitId":"zhengsterz"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2023-03-17"},{"lineNumber":308,"author":{"gitId":"zhengsterz"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":309,"author":{"gitId":"zhengsterz"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":310,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":311,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":312,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":313,"author":{"gitId":"PawanPatil19"},"content":"        public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2023-03-27"},{"lineNumber":314,"author":{"gitId":"PawanPatil19"},"content":"            return new TaskBook();","lastModifiedDate":"2023-03-27"},{"lineNumber":315,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":316,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":317,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":318,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":319,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":189,"Yaladah":13,"PawanPatil19":109,"jereldlimjy":8}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.commands.DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel taskBookModel \u003d new TaskBookModelManager(new TaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"Yaladah"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModel expectedTaskBookModel \u003d new TaskBookModelManager(taskBookModel.getTaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(deleteCommand, model, taskBookModel, expectedMessage,","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"            expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandFailure(deleteCommand, model, taskBookModel, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"Yaladah"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModel expectedTaskBookModel \u003d new TaskBookModelManager(taskBookModel.getTaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(deleteCommand, model, taskBookModel, expectedMessage,","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"PawanPatil19"},"content":"            expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandFailure(deleteCommand, model, taskBookModel, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Yaladah":3,"-":103,"PawanPatil19":12}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yaladah"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"Yaladah"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"Yaladah"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.logic.commands.DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.testutil.TypicalDeadlineTasks.getTypicalAddressBook;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"Yaladah"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"Yaladah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"Yaladah"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"Yaladah"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.testutil.DeadlineTaskBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"Yaladah"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"Yaladah"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"Yaladah"},"content":" * {@code DeleteTaskCommand}.","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"Yaladah"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"Yaladah"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"Yaladah"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel taskBookModel \u003d new TaskBookModelManager(new TaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"Yaladah"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"Yaladah"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"        DeadlineTask validDeadlineTask \u003d new DeadlineTaskBuilder().build();","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.addTask(validDeadlineTask);","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"        Task taskToDelete \u003d taskBookModel.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"Yaladah"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"Yaladah"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"Yaladah"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModel expectedTaskBookModel \u003d new TaskBookModelManager(taskBookModel.getTaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"PawanPatil19"},"content":"        expectedTaskBookModel.deleteTask(taskToDelete);","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(deleteTaskCommand, model, taskBookModel, expectedMessage,","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"PawanPatil19"},"content":"            expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"Yaladah"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"Yaladah"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"PawanPatil19"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(taskBookModel.getFilteredTaskList().size() + 1);","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"Yaladah"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandFailure(deleteTaskCommand, model, taskBookModel, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"Yaladah"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"Yaladah"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"PawanPatil19"},"content":"        DeadlineTask validDeadlineTask \u003d new DeadlineTaskBuilder().build();","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.addTask(validDeadlineTask);","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"PawanPatil19"},"content":"        showTaskAtIndex(taskBookModel, INDEX_FIRST_TASK);","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"PawanPatil19"},"content":"        Task taskToDelete \u003d taskBookModel.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"Yaladah"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"Yaladah"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"Yaladah"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModel expectedTaskBookModel \u003d new TaskBookModelManager(taskBookModel.getTaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"PawanPatil19"},"content":"        expectedTaskBookModel.deleteTask(taskToDelete);","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"PawanPatil19"},"content":"        showNoTask(expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(deleteTaskCommand, model, taskBookModel, expectedMessage,","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"PawanPatil19"},"content":"            expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"Yaladah"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"Yaladah"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"PawanPatil19"},"content":"        DeadlineTask validDeadlineTask \u003d new DeadlineTaskBuilder().build();","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.addTask(validDeadlineTask);","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"PawanPatil19"},"content":"        showTaskAtIndex(taskBookModel, INDEX_FIRST_TASK);","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"Yaladah"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"Yaladah"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"Yaladah"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"Yaladah"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandFailure(deleteTaskCommand, model, taskBookModel, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"Yaladah"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"Yaladah"},"content":"    public void equals() {","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"Yaladah"},"content":"        DeleteTaskCommand deleteFirstTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"Yaladah"},"content":"        DeleteTaskCommand deleteSecondTaskCommand \u003d new DeleteTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"Yaladah"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"Yaladah"},"content":"        assertTrue(deleteFirstTaskCommand.equals(deleteFirstTaskCommand));","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"Yaladah"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"Yaladah"},"content":"        DeleteTaskCommand deleteFirstTaskCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"Yaladah"},"content":"        assertTrue(deleteFirstTaskCommand.equals(deleteFirstTaskCommandCopy));","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"Yaladah"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"Yaladah"},"content":"        assertFalse(deleteFirstTaskCommand.equals(1));","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"Yaladah"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"Yaladah"},"content":"        assertFalse(deleteFirstTaskCommand.equals(null));","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"Yaladah"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"Yaladah"},"content":"        assertFalse(deleteFirstTaskCommand.equals(deleteSecondTaskCommand));","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"Yaladah"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"Yaladah"},"content":"     * Updates {@code model}\u0027s filtered list to show no task.","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"Yaladah"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"PawanPatil19"},"content":"    private void showNoTask(TaskBookModel taskBookModel) {","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"PawanPatil19"},"content":"        assertTrue(taskBookModel.getFilteredTaskList().isEmpty());","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"Yaladah"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"Yaladah"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"Yaladah":94,"PawanPatil19":32}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel taskBookModel \u003d new TaskBookModelManager(new TaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModel expectedTaskBookModel \u003d new TaskBookModelManager(taskBookModel.getTaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(editCommand, model, taskBookModel, expectedMessage, expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"Cyrus-Krispin"},"content":"                .withRoles(VALID_ROLE_HUSBAND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"Cyrus-Krispin"},"content":"                .withPhone(VALID_PHONE_BOB).withRoles(VALID_ROLE_HUSBAND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModel expectedTaskBookModel \u003d new TaskBookModelManager(taskBookModel.getTaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(editCommand, model, taskBookModel, expectedMessage, expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModel expectedTaskBookModel \u003d new TaskBookModelManager(taskBookModel.getTaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(editCommand, model, taskBookModel, expectedMessage, expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModel expectedTaskBookModel \u003d new TaskBookModelManager(taskBookModel.getTaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(editCommand, model, taskBookModel, expectedMessage, expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandFailure(editCommand, model, taskBookModel, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandFailure(editCommand, model, taskBookModel, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandFailure(editCommand, model, taskBookModel, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandFailure(editCommand, model, taskBookModel, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"-":162,"PawanPatil19":17,"Cyrus-Krispin":3}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"Cyrus-Krispin"},"content":"        // different roles -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Cyrus-Krispin"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withRoles(VALID_ROLE_HUSBAND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":55,"Cyrus-Krispin":3}},{"path":"src/test/java/seedu/address/logic/commands/EventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.EventTask;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.testutil.EventTaskBuilder;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"public class EventCommandTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    public void constructor_nullDeadlineTask_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventCommand(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    public void execute_deadlineTaskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"        ModelStubAcceptingEventTaskAdded modelStub \u003d new ModelStubAcceptingEventTaskAdded();","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"        EventTask validEventTask \u003d new EventTaskBuilder().build();","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"        CommandResult commandResult \u003d new EventCommand(validEventTask).execute(new ModelStub(), modelStub);","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(String.format(EventCommand.MESSAGE_SUCCESS, validEventTask),","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(Arrays.asList(validEventTask), modelStub.tasksAdded);","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"    public void execute_duplicateDeadlineTask_throwsCommandException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"        EventTask validEventTask \u003d new EventTaskBuilder().build();","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"        EventCommand eventCommand \u003d new EventCommand(validEventTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModelStub modelStub \u003d new ModelStubWithEventTask(validEventTask);","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"PawanPatil19"},"content":"                DeadlineCommand.MESSAGE_DUPLICATE_TASK, () -\u003e eventCommand.execute(new ModelStub(), modelStub));","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"    public void equals() {","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"        EventTask firstTask \u003d new EventTaskBuilder().withTaskDescription(\"obtain team approval\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"        EventTask secondTask \u003d new EventTaskBuilder().withTaskDescription(\"proofread documents\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"        EventCommand addFirstTaskCommand \u003d new EventCommand(firstTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"        EventCommand addSecondTaskCommand \u003d new EventCommand(secondTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(addFirstTaskCommand.equals(addFirstTaskCommand));","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"        EventCommand addFirstTaskCommandCopy \u003d new EventCommand(firstTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(addFirstTaskCommand.equals(addFirstTaskCommandCopy));","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(addFirstTaskCommand.equals(1));","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(addFirstTaskCommand.equals(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"zhengsterz"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(addFirstTaskCommand.equals(addSecondTaskCommand));","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"zhengsterz"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"zhengsterz"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"zhengsterz"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"zhengsterz"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"zhengsterz"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"zhengsterz"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"zhengsterz"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"zhengsterz"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"zhengsterz"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"zhengsterz"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"zhengsterz"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"zhengsterz"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"PawanPatil19"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"PawanPatil19"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"PawanPatil19"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"PawanPatil19"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"PawanPatil19"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"PawanPatil19"},"content":"        public boolean hasPersonIndex(Index personIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"PawanPatil19"},"content":"    private class TaskBookModelStub implements TaskBookModel {","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"PawanPatil19"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027setUserPrefs\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"PawanPatil19"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getUserPrefs\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":178,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"PawanPatil19"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getGuiSettings\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":184,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":185,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":186,"author":{"gitId":"PawanPatil19"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027setGuiSettings\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":190,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":191,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":192,"author":{"gitId":"PawanPatil19"},"content":"        public Path getTaskBookFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getTaskBookFilePath\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":196,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":197,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":198,"author":{"gitId":"PawanPatil19"},"content":"        public void setTaskBook(ReadOnlyTaskBook taskBook) {","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":200,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027setTaskBook\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":202,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":203,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"PawanPatil19"},"content":"        public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getTaskBook\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"PawanPatil19"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027hasTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":216,"author":{"gitId":"PawanPatil19"},"content":"        public boolean hasTaskIndex(Index taskIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027hasTaskIndex\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"Yaladah"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":222,"author":{"gitId":"Yaladah"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-03-29"},{"lineNumber":223,"author":{"gitId":"Yaladah"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-29"},{"lineNumber":224,"author":{"gitId":"Yaladah"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027setTask\u0027\");","lastModifiedDate":"2023-03-29"},{"lineNumber":225,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":226,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":227,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"PawanPatil19"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027deleteTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"PawanPatil19"},"content":"        public void addTask(Task target) {","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027addTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"PawanPatil19"},"content":"        public void markTask(Task task, Task markedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":241,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027markTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":244,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":245,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":246,"author":{"gitId":"PawanPatil19"},"content":"        public void unmarkTask(Task taskToUnmark, Task unmarkedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":247,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027unmarkTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":249,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"PawanPatil19"},"content":"        public void commentOnTask(Task taskToComment, Task commentedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":253,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027commentOnTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":255,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":256,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":257,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":258,"author":{"gitId":"PawanPatil19"},"content":"        public void assignTask(Task taskToAssign, Task assignedTask, Index taskIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":259,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":260,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027assignTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":261,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":262,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":263,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":264,"author":{"gitId":"PawanPatil19"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-27"},{"lineNumber":265,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":266,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getFilteredTaskList\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":267,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":268,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":269,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":270,"author":{"gitId":"PawanPatil19"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-03-27"},{"lineNumber":271,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":272,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027updateFilteredTaskList\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":273,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":274,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":275,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":276,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":277,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":278,"author":{"gitId":"zhengsterz"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-03-18"},{"lineNumber":279,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":280,"author":{"gitId":"PawanPatil19"},"content":"    private class ModelStubWithEventTask extends TaskBookModelStub {","lastModifiedDate":"2023-03-27"},{"lineNumber":281,"author":{"gitId":"zhengsterz"},"content":"        private final EventTask task;","lastModifiedDate":"2023-03-18"},{"lineNumber":282,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":283,"author":{"gitId":"zhengsterz"},"content":"        ModelStubWithEventTask(EventTask task) {","lastModifiedDate":"2023-03-18"},{"lineNumber":284,"author":{"gitId":"zhengsterz"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":285,"author":{"gitId":"zhengsterz"},"content":"            this.task \u003d task;","lastModifiedDate":"2023-03-18"},{"lineNumber":286,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":287,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":288,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":289,"author":{"gitId":"zhengsterz"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-18"},{"lineNumber":290,"author":{"gitId":"zhengsterz"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":291,"author":{"gitId":"zhengsterz"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":292,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":293,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":294,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":295,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":296,"author":{"gitId":"zhengsterz"},"content":"     * A Model stub that always accept the task being added.","lastModifiedDate":"2023-03-18"},{"lineNumber":297,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":298,"author":{"gitId":"PawanPatil19"},"content":"    private class ModelStubAcceptingEventTaskAdded extends TaskBookModelStub {","lastModifiedDate":"2023-03-27"},{"lineNumber":299,"author":{"gitId":"zhengsterz"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":300,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":301,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":302,"author":{"gitId":"zhengsterz"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-18"},{"lineNumber":303,"author":{"gitId":"zhengsterz"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":304,"author":{"gitId":"zhengsterz"},"content":"            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":305,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":306,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":307,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":308,"author":{"gitId":"zhengsterz"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2023-03-18"},{"lineNumber":309,"author":{"gitId":"zhengsterz"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":310,"author":{"gitId":"zhengsterz"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":311,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":312,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":313,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":314,"author":{"gitId":"PawanPatil19"},"content":"        public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2023-03-27"},{"lineNumber":315,"author":{"gitId":"PawanPatil19"},"content":"            return new TaskBook();","lastModifiedDate":"2023-03-27"},{"lineNumber":316,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":317,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":318,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":319,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-18"},{"lineNumber":320,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":321,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"zhengsterz":216,"Yaladah":6,"PawanPatil19":99}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel taskBookmodel \u003d new TaskBookModelManager();","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel expectedTaskBookModel \u003d new TaskBookModelManager();","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(new ExitCommand(), model, taskBookmodel, expectedCommandResult,","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"            expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"PawanPatil19":6}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel taskBookModel \u003d new TaskBookModelManager(new TaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel expectedTaskBookModel \u003d new TaskBookModelManager(taskBookModel.getTaskBook(),","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"PawanPatil19"},"content":"        new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(command, model, taskBookModel, expectedMessage, expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(command, model, taskBookModel, expectedMessage, expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":81,"PawanPatil19":8}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel taskBookModel \u003d new TaskBookModelManager(new TaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel expectedTaskBookModel \u003d new TaskBookModelManager(taskBookModel.getTaskBook(),","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"        new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(new HelpCommand(), model, taskBookModel, expectedCommandResult,","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"            expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"PawanPatil19":9}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel taskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel expectedTaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel \u003d new TaskBookModelManager(new TaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"PawanPatil19"},"content":"        expectedTaskBookModel \u003d new TaskBookModelManager(taskBookModel.getTaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(new ListCommand(), model, taskBookModel, ListCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"            expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":45,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandSuccess(new ListCommand(), model, taskBookModel, ListCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"            expectedModel, expectedTaskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":37,"PawanPatil19":11}},{"path":"src/test/java/seedu/address/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"import static seedu.address.testutil.TypicalDeadlineTasks.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"PawanPatil19"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Score;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.testutil.DeadlineTaskBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":" * {@code MarkCommand}.","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"    private final TaskBookModel taskBookModel \u003d new TaskBookModelManager(new TaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"    public void execute_validIndex_success() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"        DeadlineTask validDeadlineTask \u003d new DeadlineTaskBuilder().build();","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.addTask(validDeadlineTask);","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"        Task taskToMark \u003d taskBookModel.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"        taskToMark.assignPerson(INDEX_FIRST_TASK, \"Test Name\", \"Test Role\");","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"        Score score \u003d new Score(4);","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"        CommandResult commandResult \u003d new MarkCommand(INDEX_FIRST_TASK, score).execute(model, taskBookModel);","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"PawanPatil19"},"content":"        Task markedTask \u003d taskBookModel.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"PawanPatil19"},"content":"        assertEquals(String.format(MarkCommand.MESSAGE_MARK_TASK_SUCCESS, taskToMark, score.toString()),","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"jereldlimjy"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"PawanPatil19"},"content":"        assertTrue(markedTask.isDone());","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"jereldlimjy"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"jereldlimjy"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"PawanPatil19"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(taskBookModel.getFilteredTaskList().size() + 1);","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"PawanPatil19"},"content":"        Score score \u003d new Score(4);","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"        MarkCommand markCommand \u003d new MarkCommand(outOfBoundIndex, score);","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandFailure(markCommand, model, taskBookModel, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"PawanPatil19"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"PawanPatil19"},"content":"    public void execute_invalidScore_throwsCommandException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"PawanPatil19"},"content":"        DeadlineTask validDeadlineTask \u003d new DeadlineTaskBuilder().build();","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.addTask(validDeadlineTask);","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"PawanPatil19"},"content":"        Score score \u003d new Score(6);","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"PawanPatil19"},"content":"        MarkCommand markCommand \u003d new MarkCommand(INDEX_FIRST_TASK, score);","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandFailure(markCommand, model, taskBookModel, Score.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jereldlimjy":34,"PawanPatil19":33}},{"path":"src/test/java/seedu/address/logic/commands/ToDoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"public class ToDoCommandTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    public void constructor_nullDeadlineTask_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventCommand(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    public void execute_deadlineTaskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"PawanPatil19"},"content":"        CommandResult commandResult \u003d new ToDoCommand(validTask).execute(new ModelStub(), modelStub);","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(String.format(EventCommand.MESSAGE_SUCCESS, validTask),","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"    public void execute_duplicateDeadlineTask_throwsCommandException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"        ToDoCommand toDoCommand \u003d new ToDoCommand(validTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"PawanPatil19"},"content":"        TaskBookModelStub modelStub \u003d new ModelStubWithTask(validTask);","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"PawanPatil19"},"content":"                DeadlineCommand.MESSAGE_DUPLICATE_TASK, () -\u003e toDoCommand.execute(new ModelStub(), modelStub));","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"    public void equals() {","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"        Task firstTask \u003d new TaskBuilder().withTaskDescription(\"obtain team approval\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"        Task secondTask \u003d new TaskBuilder().withTaskDescription(\"proofread documents\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"        ToDoCommand addFirstTaskCommand \u003d new ToDoCommand(firstTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"        ToDoCommand addSecondTaskCommand \u003d new ToDoCommand(secondTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(addFirstTaskCommand.equals(addFirstTaskCommand));","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"        ToDoCommand addFirstTaskCommandCopy \u003d new ToDoCommand(firstTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(addFirstTaskCommand.equals(addFirstTaskCommandCopy));","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(addFirstTaskCommand.equals(1));","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(addFirstTaskCommand.equals(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(addFirstTaskCommand.equals(addSecondTaskCommand));","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"zhengsterz"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"zhengsterz"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"zhengsterz"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"zhengsterz"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"zhengsterz"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"zhengsterz"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"zhengsterz"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"zhengsterz"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"zhengsterz"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"zhengsterz"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"zhengsterz"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"zhengsterz"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"PawanPatil19"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"PawanPatil19"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"PawanPatil19"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"PawanPatil19"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"PawanPatil19"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"PawanPatil19"},"content":"        public boolean hasPersonIndex(Index personIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"zhengsterz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"PawanPatil19"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"PawanPatil19"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"PawanPatil19"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"PawanPatil19"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"PawanPatil19"},"content":"    private class TaskBookModelStub implements TaskBookModel {","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"PawanPatil19"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027setUserPrefs\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":177,"author":{"gitId":"PawanPatil19"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getUserPrefs\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"PawanPatil19"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getGuiSettings\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":189,"author":{"gitId":"PawanPatil19"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027setGuiSettings\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":193,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":194,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":195,"author":{"gitId":"PawanPatil19"},"content":"        public Path getTaskBookFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":196,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":197,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getTaskBookFilePath\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":198,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":199,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":200,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":201,"author":{"gitId":"PawanPatil19"},"content":"        public void setTaskBook(ReadOnlyTaskBook taskBook) {","lastModifiedDate":"2023-03-27"},{"lineNumber":202,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027setTaskBook\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"PawanPatil19"},"content":"        public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getTaskBook\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"PawanPatil19"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027hasTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":216,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"PawanPatil19"},"content":"        public boolean hasTaskIndex(Index taskIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027hasTaskIndex\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":224,"author":{"gitId":"Yaladah"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":225,"author":{"gitId":"Yaladah"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-03-29"},{"lineNumber":226,"author":{"gitId":"Yaladah"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-29"},{"lineNumber":227,"author":{"gitId":"Yaladah"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027setTask\u0027\");","lastModifiedDate":"2023-03-29"},{"lineNumber":228,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":229,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":230,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"PawanPatil19"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027deleteTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"PawanPatil19"},"content":"        public void addTask(Task target) {","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027addTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":241,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":242,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"PawanPatil19"},"content":"        public void markTask(Task task, Task markedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":244,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027markTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":246,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":247,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":248,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":249,"author":{"gitId":"PawanPatil19"},"content":"        public void unmarkTask(Task taskToUnmark, Task unmarkedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027unmarkTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":253,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":255,"author":{"gitId":"PawanPatil19"},"content":"        public void commentOnTask(Task taskToComment, Task commentedTask, Index taskIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":256,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":257,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027commentOnTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":258,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":259,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":260,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":261,"author":{"gitId":"PawanPatil19"},"content":"        public void assignTask(Task taskToAssign, Task assignedTask, Index taskIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":262,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":263,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027assignTask\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":264,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":265,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":266,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":267,"author":{"gitId":"PawanPatil19"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-27"},{"lineNumber":268,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":269,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027getFilteredTaskList\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":270,"author":{"gitId":"PawanPatil19"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":271,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":272,"author":{"gitId":"PawanPatil19"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":273,"author":{"gitId":"PawanPatil19"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-03-27"},{"lineNumber":274,"author":{"gitId":"PawanPatil19"},"content":"            // TODO Auto-generated method stub","lastModifiedDate":"2023-03-27"},{"lineNumber":275,"author":{"gitId":"PawanPatil19"},"content":"            throw new UnsupportedOperationException(\"Unimplemented method \u0027updateFilteredTaskList\u0027\");","lastModifiedDate":"2023-03-27"},{"lineNumber":276,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":277,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":278,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":279,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":280,"author":{"gitId":"zhengsterz"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-03-18"},{"lineNumber":281,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":282,"author":{"gitId":"PawanPatil19"},"content":"    private class ModelStubWithTask extends TaskBookModelStub {","lastModifiedDate":"2023-03-27"},{"lineNumber":283,"author":{"gitId":"zhengsterz"},"content":"        private final Task task;","lastModifiedDate":"2023-03-18"},{"lineNumber":284,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":285,"author":{"gitId":"zhengsterz"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2023-03-18"},{"lineNumber":286,"author":{"gitId":"zhengsterz"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":287,"author":{"gitId":"zhengsterz"},"content":"            this.task \u003d task;","lastModifiedDate":"2023-03-18"},{"lineNumber":288,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":289,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":290,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":291,"author":{"gitId":"zhengsterz"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-18"},{"lineNumber":292,"author":{"gitId":"zhengsterz"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":293,"author":{"gitId":"zhengsterz"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":294,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":295,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":296,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":297,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":298,"author":{"gitId":"zhengsterz"},"content":"     * A Model stub that always accept the task being added.","lastModifiedDate":"2023-03-18"},{"lineNumber":299,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":300,"author":{"gitId":"PawanPatil19"},"content":"    private class ModelStubAcceptingTaskAdded extends TaskBookModelStub {","lastModifiedDate":"2023-03-27"},{"lineNumber":301,"author":{"gitId":"zhengsterz"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":302,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":303,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":304,"author":{"gitId":"zhengsterz"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-18"},{"lineNumber":305,"author":{"gitId":"zhengsterz"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":306,"author":{"gitId":"zhengsterz"},"content":"            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2023-03-18"},{"lineNumber":307,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":308,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":309,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":310,"author":{"gitId":"zhengsterz"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2023-03-18"},{"lineNumber":311,"author":{"gitId":"zhengsterz"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":312,"author":{"gitId":"zhengsterz"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":313,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":314,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":315,"author":{"gitId":"zhengsterz"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":316,"author":{"gitId":"PawanPatil19"},"content":"        public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2023-03-27"},{"lineNumber":317,"author":{"gitId":"PawanPatil19"},"content":"            return new TaskBook();","lastModifiedDate":"2023-03-27"},{"lineNumber":318,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":319,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":320,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":321,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-18"},{"lineNumber":322,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":323,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"zhengsterz":215,"Yaladah":6,"PawanPatil19":102}},{"path":"src/test/java/seedu/address/logic/commands/UnmarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jereldlimjy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jereldlimjy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"jereldlimjy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"jereldlimjy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"jereldlimjy"},"content":"import static seedu.address.testutil.TypicalDeadlineTasks.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"jereldlimjy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"jereldlimjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.TaskBookModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.model.task.Score;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jereldlimjy"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"PawanPatil19"},"content":"import seedu.address.testutil.DeadlineTaskBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"jereldlimjy"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jereldlimjy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"jereldlimjy"},"content":" * {@code MarkCommand}.","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"jereldlimjy"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"jereldlimjy"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"jereldlimjy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"    private TaskBookModel taskBookModel \u003d new TaskBookModelManager(new TaskBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"PawanPatil19"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"jereldlimjy"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"jereldlimjy"},"content":"    public void execute_validIndex_success() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"PawanPatil19"},"content":"        DeadlineTask validDeadlineTask \u003d new DeadlineTaskBuilder().build();","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"PawanPatil19"},"content":"        taskBookModel.addTask(validDeadlineTask);","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"        Task taskToUnmark \u003d taskBookModel.getFilteredTaskList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"PawanPatil19"},"content":"        Score score \u003d new Score(4);","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"PawanPatil19"},"content":"        taskToUnmark.setScore(score);","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"PawanPatil19"},"content":"        CommandResult commandResult \u003d new UnmarkCommand(INDEX_FIRST_PERSON).execute(model, taskBookModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"jereldlimjy"},"content":"        assertEquals(String.format(UnmarkCommand.MESSAGE_UNMARK_TASK_SUCCESS, taskToUnmark),","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"jereldlimjy"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"jereldlimjy"},"content":"        assertFalse(taskToUnmark.isDone());","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"jereldlimjy"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"jereldlimjy"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"PawanPatil19"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(taskBookModel.getFilteredTaskList().size() + 1);","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"jereldlimjy"},"content":"        UnmarkCommand markCommand \u003d new UnmarkCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"jereldlimjy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"PawanPatil19"},"content":"        assertCommandFailure(markCommand, model, taskBookModel, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"jereldlimjy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"jereldlimjy"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jereldlimjy":39,"PawanPatil19":16}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ROLE_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_FRIEND;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_FRIEND;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Cyrus-Krispin"},"content":"import seedu.address.model.role.Role;","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Cyrus-Krispin"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withRoles(VALID_ROLE_FRIEND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Cyrus-Krispin"},"content":"                + ADDRESS_DESC_BOB + ROLE_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Cyrus-Krispin"},"content":"                + ADDRESS_DESC_BOB + ROLE_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Cyrus-Krispin"},"content":"                + ADDRESS_DESC_BOB + ROLE_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Cyrus-Krispin"},"content":"                + ADDRESS_DESC_BOB + ROLE_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Cyrus-Krispin"},"content":"                + ADDRESS_DESC_BOB + ROLE_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Cyrus-Krispin"},"content":"        // multiple roles - all accepted","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"Cyrus-Krispin"},"content":"        Person expectedPersonMultipleRoles \u003d new PersonBuilder(BOB).withRoles(VALID_ROLE_FRIEND, VALID_ROLE_HUSBAND)","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Cyrus-Krispin"},"content":"                + ROLE_DESC_HUSBAND + ROLE_DESC_FRIEND, new AddCommand(expectedPersonMultipleRoles));","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Cyrus-Krispin"},"content":"        // zero roles","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Cyrus-Krispin"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withRoles().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"Cyrus-Krispin"},"content":"                + ROLE_DESC_HUSBAND + ROLE_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"Cyrus-Krispin"},"content":"                + ROLE_DESC_HUSBAND + ROLE_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"Cyrus-Krispin"},"content":"                + ROLE_DESC_HUSBAND + ROLE_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"Cyrus-Krispin"},"content":"                + ROLE_DESC_HUSBAND + ROLE_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"Cyrus-Krispin"},"content":"        // invalid role","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"Cyrus-Krispin"},"content":"                + INVALID_ROLE_DESC + VALID_ROLE_FRIEND, Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"Cyrus-Krispin"},"content":"                + ADDRESS_DESC_BOB + ROLE_DESC_HUSBAND + ROLE_DESC_FRIEND,","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"-":117,"Cyrus-Krispin":24}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"Cyrus-Krispin"},"content":"        String argsString \u003d \"  some random string /r role with leading and trailing spaces \";","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":149,"Cyrus-Krispin":1}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ROLE_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_FRIEND;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_FRIEND;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Cyrus-Krispin"},"content":"import seedu.address.model.role.Role;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"Cyrus-Krispin"},"content":"    private static final String ROLE_EMPTY \u003d \" \" + PREFIX_ROLE;","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"Cyrus-Krispin"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ROLE_DESC, Role.MESSAGE_CONSTRAINTS); // invalid role","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"Cyrus-Krispin"},"content":"        // while parsing {@code PREFIX_ROLE} alone will reset the roles of the {@code Person} being edited,","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"Cyrus-Krispin"},"content":"        // parsing it together with a valid role results in error","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"Cyrus-Krispin"},"content":"        assertParseFailure(parser, \"1\" + ROLE_DESC_FRIEND + ROLE_DESC_HUSBAND + ROLE_EMPTY, Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"Cyrus-Krispin"},"content":"        assertParseFailure(parser, \"1\" + ROLE_DESC_FRIEND + ROLE_EMPTY + ROLE_DESC_HUSBAND, Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"Cyrus-Krispin"},"content":"        assertParseFailure(parser, \"1\" + ROLE_EMPTY + ROLE_DESC_FRIEND + ROLE_DESC_HUSBAND, Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"Cyrus-Krispin"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + ROLE_DESC_HUSBAND","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"Cyrus-Krispin"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + ROLE_DESC_FRIEND;","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"Cyrus-Krispin"},"content":"                .withRoles(VALID_ROLE_HUSBAND, VALID_ROLE_FRIEND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"Cyrus-Krispin"},"content":"        // roles","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"Cyrus-Krispin"},"content":"        userInput \u003d targetIndex.getOneBased() + ROLE_DESC_FRIEND;","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"Cyrus-Krispin"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withRoles(VALID_ROLE_FRIEND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"Cyrus-Krispin"},"content":"                + ROLE_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + ROLE_DESC_FRIEND","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"Cyrus-Krispin"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + ROLE_DESC_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"Cyrus-Krispin"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"Cyrus-Krispin"},"content":"                .withRoles(VALID_ROLE_FRIEND, VALID_ROLE_HUSBAND)","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void parse_resetRolesR_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"Cyrus-Krispin"},"content":"        String userInput \u003d targetIndex.getOneBased() + ROLE_EMPTY;","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"Cyrus-Krispin"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withRoles().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"-":185,"Cyrus-Krispin":27}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"Cyrus-Krispin"},"content":"import seedu.address.model.role.Role;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"Cyrus-Krispin"},"content":"    private static final String INVALID_ROLE \u003d \"#friend\";","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"Cyrus-Krispin"},"content":"    private static final String VALID_ROLE_1 \u003d \"friend\";","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Cyrus-Krispin"},"content":"    private static final String VALID_ROLE_2 \u003d \"neighbour\";","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void parseRole_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"Cyrus-Krispin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRole(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void parseRole_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"Cyrus-Krispin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRole(INVALID_ROLE));","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void parseRole_validValueWithoutWhitespace_returnsRole() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"Cyrus-Krispin"},"content":"        Role expectedRole \u003d new Role(VALID_ROLE_1);","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"Cyrus-Krispin"},"content":"        assertEquals(expectedRole, ParserUtil.parseRole(VALID_ROLE_1));","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void parseRole_validValueWithWhitespace_returnsTrimmedRole() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"Cyrus-Krispin"},"content":"        String roleWithWhitespace \u003d WHITESPACE + VALID_ROLE_1 + WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"Cyrus-Krispin"},"content":"        Role expectedRole \u003d new Role(VALID_ROLE_1);","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"Cyrus-Krispin"},"content":"        assertEquals(expectedRole, ParserUtil.parseRole(roleWithWhitespace));","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void parseRoles_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"Cyrus-Krispin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRoles(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void parseRoles_collectionWithInvalidRoles_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"Cyrus-Krispin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRoles(Arrays.asList(VALID_ROLE_1, INVALID_ROLE)));","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void parseRoles_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"Cyrus-Krispin"},"content":"        assertTrue(ParserUtil.parseRoles(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void parseRoles_collectionWithValidRoles_returnsRoleSet() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"Cyrus-Krispin"},"content":"        Set\u003cRole\u003e actualRoleSet \u003d ParserUtil.parseRoles(Arrays.asList(VALID_ROLE_1, VALID_ROLE_2));","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"Cyrus-Krispin"},"content":"        Set\u003cRole\u003e expectedRoleSet \u003d new HashSet\u003cRole\u003e(Arrays.asList(new Role(VALID_ROLE_1), new Role(VALID_ROLE_2)));","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"Cyrus-Krispin"},"content":"        assertEquals(expectedRoleSet, actualRoleSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":171,"Cyrus-Krispin":25}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Yaladah"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"Cyrus-Krispin"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withRoles(VALID_ROLE_HUSBAND)","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"Cyrus-Krispin"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withRoles(VALID_ROLE_HUSBAND)","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"Yaladah"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"Yaladah"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"Yaladah"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Yaladah"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"PawanPatil19"},"content":"            return tasks;","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"Yaladah"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Yaladah":6,"-":99,"PawanPatil19":1,"Cyrus-Krispin":3}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"Cyrus-Krispin"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getRoles().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"Cyrus-Krispin"},"content":"                .withAddress(VALID_ADDRESS_BOB).withRoles(VALID_ROLE_HUSBAND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"Cyrus-Krispin"},"content":"        // different roles -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"Cyrus-Krispin"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withRoles(VALID_ROLE_HUSBAND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":86,"Cyrus-Krispin":5}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"Cyrus-Krispin"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withRoles(VALID_ROLE_HUSBAND)","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"Cyrus-Krispin"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withRoles(VALID_ROLE_HUSBAND)","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":167,"Cyrus-Krispin":3}},{"path":"src/test/java/seedu/address/model/role/RoleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cyrus-Krispin"},"content":"package seedu.address.model.role;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Cyrus-Krispin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Cyrus-Krispin"},"content":"public class RoleTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Cyrus-Krispin"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Cyrus-Krispin"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Role(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Cyrus-Krispin"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void constructor_invalidRoleName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Cyrus-Krispin"},"content":"        String invalidRoleName \u003d \"\";","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Cyrus-Krispin"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Role(invalidRoleName));","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Cyrus-Krispin"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void isValidRoleName() {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Cyrus-Krispin"},"content":"        // null role name","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Cyrus-Krispin"},"content":"        assertThrows(NullPointerException.class, () -\u003e Role.isValidRoleName(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Cyrus-Krispin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Cyrus-Krispin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Cyrus-Krispin"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Cyrus-Krispin":26}},{"path":"src/test/java/seedu/address/model/task/CommentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"public class CommentTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Comment(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public void constructor_invalidComment_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Comment(invalidDate));","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    public void isValidAddress() {","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"        // null address","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e Comment.isValidComment(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"        // invalid addresses","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(Comment.isValidComment(\"\")); // empty string","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(Comment.isValidComment(\" \")); // spaces only","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        // valid addresses","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(Comment.isValidComment(\"done\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(Comment.isValidComment(\"VERY WELL DONE\")); // different format of date","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(Comment.isValidComment(\"DONE very WELL 11029329 points\")); // another different format of date","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"zhengsterz":36}},{"path":"src/test/java/seedu/address/model/task/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"public class DateTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    public void isValidAddress() {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"        // null address","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"        // invalid addresses","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(Date.isValidDate(\" \")); // spaces only","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        // valid addresses","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(Date.isValidDate(\"11/12/2012\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(Date.isValidDate(\"1/12/2012\")); // different format of date","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(Date.isValidDate(\"11/1/2012\")); // another different format of date","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":36}},{"path":"src/test/java/seedu/address/model/task/DeadlineTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalDeadlineTasks.FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalDeadlineTasks.SECOND;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalDeadlineTasks.THIRD;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.testutil.DeadlineTaskBuilder;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public void isSameDeadlineTask() {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(FIRST.isSameTask(FIRST));","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.isSameTask(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"        // same description, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask editedFirst \u003d new DeadlineTaskBuilder(FIRST).withDate(\"03/04/2024\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(FIRST.isSameTask(editedFirst));","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        // different description, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        editedFirst \u003d new DeadlineTaskBuilder(FIRST).withTaskDescription(\"kick rocks\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.isSameTask(editedFirst));","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        String taskDescriptionWithTrailingSpaces \u003d \"eat berries\" + \" \";","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask editedSecond \u003d new DeadlineTaskBuilder(SECOND)","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"                .withTaskDescription(taskDescriptionWithTrailingSpaces).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(SECOND.isSameTask(editedSecond));","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    public void equals() {","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask firstCopy \u003d new DeadlineTaskBuilder(FIRST).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(FIRST.equals(firstCopy));","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(FIRST.equals(FIRST));","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.equals(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.equals(5));","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.equals(THIRD));","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"        // different task description -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask editedFirst \u003d new DeadlineTaskBuilder(FIRST).withTaskDescription(\"kill Mufasa\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.equals(editedFirst));","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"        editedFirst \u003d new DeadlineTaskBuilder(FIRST).withDate(\"01/06/2015\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.equals(editedFirst));","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":65}},{"path":"src/test/java/seedu/address/model/task/EventTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalEventTasks.FIRST;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalEventTasks.SECOND;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalEventTasks.THIRD;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.testutil.EventTaskBuilder;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"public class EventTaskTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public void isSameEventTask() {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(FIRST.isSameTask(FIRST));","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.isSameTask(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"        // same description, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        EventTask editedFirst \u003d new EventTaskBuilder(FIRST).withStartDate(\"03/04/2024\")","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"                .withEndDate(\"20/06/2029\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(FIRST.isSameTask(editedFirst));","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        // different description, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        editedFirst \u003d new EventTaskBuilder(FIRST).withTaskDescription(\"kick rocks\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.isSameTask(editedFirst));","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        String taskDescriptionWithTrailingSpaces \u003d \"eat berries\" + \" \";","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"        EventTask editedSecond \u003d new EventTaskBuilder(SECOND)","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"                .withTaskDescription(taskDescriptionWithTrailingSpaces).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(SECOND.isSameTask(editedSecond));","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"    public void equals() {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"        EventTask firstCopy \u003d new EventTaskBuilder(FIRST).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(FIRST.equals(firstCopy));","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(FIRST.equals(FIRST));","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.equals(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.equals(5));","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.equals(THIRD));","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"        // different task description -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"        EventTask editedFirst \u003d new EventTaskBuilder(FIRST).withTaskDescription(\"kill Mufasa\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.equals(editedFirst));","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"        // different start date -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"        editedFirst \u003d new EventTaskBuilder(FIRST).withStartDate(\"01/06/2015\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.equals(editedFirst));","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"        // different end date -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"        editedFirst \u003d new EventTaskBuilder(FIRST).withEndDate(\"01/06/2015\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(FIRST.equals(editedFirst));","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"zhengsterz":70}},{"path":"src/test/java/seedu/address/model/task/TaskDescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"public class TaskDescriptionTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskDescription(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public void constructor_invalidTaskDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TaskDescription(invalidName));","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    public void isValidTaskDescription() {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"        // null name","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskDescription.isValidTaskDescription(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"        // invalid name","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(TaskDescription.isValidTaskDescription(\"\")); // empty string","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(TaskDescription.isValidTaskDescription(\" \")); // spaces only","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(TaskDescription.isValidTaskDescription(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(TaskDescription.isValidTaskDescription(\"eat food*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        // valid name","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(TaskDescription.isValidTaskDescription(\"eat salmon\")); // alphabets only","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(TaskDescription.isValidTaskDescription(\"12345\")); // numbers only","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(TaskDescription.isValidTaskDescription(\"eat 2 times\")); // alphanumeric characters","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(TaskDescription.isValidTaskDescription(\"Eat FooD\")); // with capital letters","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(TaskDescription.isValidTaskDescription(\"Eat Salmon And Turtles And Tigers\")); // long description","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":40}},{"path":"src/test/java/seedu/address/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalTasks.ONE;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalTasks.THREE;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalTasks.TWO;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"public class TaskTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public void isSameTask() {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(ONE.isSameTask(ONE));","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(ONE.isSameTask(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        String taskDescriptionWithTrailingSpaces \u003d \"eat berries\" + \" \";","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        Task editedSecond \u003d new TaskBuilder(TWO)","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"                .withTaskDescription(taskDescriptionWithTrailingSpaces).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(TWO.isSameTask(editedSecond));","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    public void equals() {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        Task firstCopy \u003d new TaskBuilder(ONE).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(ONE.equals(firstCopy));","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(ONE.equals(ONE));","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(ONE.equals(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(ONE.equals(5));","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(ONE.equals(THREE));","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"        // different task description -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"        Task editedFirst \u003d new TaskBuilder(ONE).withTaskDescription(\"kill Mufasa\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(ONE.equals(editedFirst));","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":55}},{"path":"src/test/java/seedu/address/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalDeadlineTasks.FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalDeadlineTasks.SECOND;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalTasks.ONE;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"import static seedu.address.testutil.TypicalTasks.TWO;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.testutil.DeadlineTaskBuilder;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        assertFalse(uniqueTaskList.contains(ONE));","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(uniqueTaskList.contains(ONE));","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"    public void contains_deadlineTaskWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(FIRST);","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask editedFirst \u003d new DeadlineTaskBuilder(FIRST).withDate(\"4/12/1089\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        assertTrue(uniqueTaskList.contains(editedFirst));","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(ONE));","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"    public void add_duplicateDeadlineTask_throwsDuplicateTaskException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(SECOND);","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(SECOND));","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, ONE));","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"zhengsterz"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(ONE, null));","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"zhengsterz"},"content":"    public void setTask_targetTaskNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(ONE, ONE));","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"zhengsterz"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(SECOND);","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.setTask(SECOND, SECOND);","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"zhengsterz"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"zhengsterz"},"content":"        expectedUniqueTaskList.add(SECOND);","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"zhengsterz"},"content":"    public void setDeadlineTask_editedDeadlineTaskHasSameIdentity_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(FIRST);","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"zhengsterz"},"content":"        DeadlineTask editedFirst \u003d new DeadlineTaskBuilder(FIRST).withDate(\"31/12/2021\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.setTask(FIRST, editedFirst);","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"zhengsterz"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"zhengsterz"},"content":"        expectedUniqueTaskList.add(editedFirst);","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"zhengsterz"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.setTask(ONE, TWO);","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"zhengsterz"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"zhengsterz"},"content":"        expectedUniqueTaskList.add(TWO);","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"zhengsterz"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(TWO);","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(ONE, TWO));","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"zhengsterz"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"zhengsterz"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(ONE));","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"zhengsterz"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.remove(ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"zhengsterz"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"zhengsterz"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"zhengsterz"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"zhengsterz"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"zhengsterz"},"content":"        expectedUniqueTaskList.add(TWO);","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.setTasks(expectedUniqueTaskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"zhengsterz"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"zhengsterz"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.add(ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"zhengsterz"},"content":"        List\u003cTask\u003e taskList \u003d Collections.singletonList(TWO);","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"zhengsterz"},"content":"        uniqueTaskList.setTasks(taskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"zhengsterz"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"zhengsterz"},"content":"        expectedUniqueTaskList.add(TWO);","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"zhengsterz"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"zhengsterz"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"zhengsterz"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(ONE, ONE);","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"zhengsterz"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"zhengsterz"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"zhengsterz"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"zhengsterz"},"content":"                -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":175}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Cyrus-Krispin"},"content":"    private static final String INVALID_ROLE \u003d \"#friend\";","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Cyrus-Krispin"},"content":"    private static final List\u003cJsonAdaptedRole\u003e VALID_ROLES \u003d BENSON.getRoles().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Cyrus-Krispin"},"content":"            .map(JsonAdaptedRole::new)","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Cyrus-Krispin"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLES);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Cyrus-Krispin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLES);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Cyrus-Krispin"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLES);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Cyrus-Krispin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_ROLES);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Cyrus-Krispin"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_ROLES);","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"Cyrus-Krispin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_ROLES);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"Cyrus-Krispin"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_ROLES);","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"Cyrus-Krispin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_ROLES);","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"Cyrus-Krispin"},"content":"    public void toModelType_invalidRoles_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"Cyrus-Krispin"},"content":"        List\u003cJsonAdaptedRole\u003e invalidRoles \u003d new ArrayList\u003c\u003e(VALID_ROLES);","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"Cyrus-Krispin"},"content":"        invalidRoles.add(new JsonAdaptedRole(INVALID_ROLE));","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"Cyrus-Krispin"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidRoles);","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":95,"Cyrus-Krispin":15}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"PawanPatil19"},"content":"        JsonTaskStorage taskStorage \u003d new JsonTaskStorage(getTempFilePath(\"cd\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"PawanPatil19"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, taskStorage, userPrefsStorage);","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":67,"PawanPatil19":2}},{"path":"src/test/java/seedu/address/testutil/DeadlineTaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":" * A utility class to help with building DeadlineTask objects.","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"public class DeadlineTaskBuilder {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Do assignments\";","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"    public static final String DEFAULT_DATE \u003d \"11/11/2011\";","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    private TaskDescription description;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    private Date date;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"     * Creates a {@code DeadlineTaskBuilder} with the default details.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineTaskBuilder() {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"        description \u003d new TaskDescription(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"     * Initializes the DeadlineTaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineTaskBuilder(DeadlineTask taskToCopy) {","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"PawanPatil19"},"content":"        date \u003d taskToCopy.getDeadlineDate();","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"     * Sets the {@code TaskDescription} of the {@code DeadlineTask} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineTaskBuilder withTaskDescription(String description) {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"        this.description \u003d new TaskDescription(description);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"     * Sets the {@code Date} of the {@code DeadlineTask} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineTaskBuilder withDate(String date) {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"    public DeadlineTask build() {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"        return new DeadlineTask(description, date);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":54,"PawanPatil19":1}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"Cyrus-Krispin"},"content":"import seedu.address.model.role.Role;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Cyrus-Krispin"},"content":"        descriptor.setRoles(person.getRoles());","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Cyrus-Krispin"},"content":"     * Parses the {@code roles} into a {@code Set\u003cRole\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"Cyrus-Krispin"},"content":"    public EditPersonDescriptorBuilder withRoles(String... roles) {","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Cyrus-Krispin"},"content":"        Set\u003cRole\u003e roleSet \u003d Stream.of(roles).map(Role::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Cyrus-Krispin"},"content":"        descriptor.setRoles(roleSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":81,"Cyrus-Krispin":6}},{"path":"src/test/java/seedu/address/testutil/EventTaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.EventTask;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":" * A utility class to help with building DeadlineTask objects.","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"public class EventTaskBuilder {","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Do assignments\";","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"    public static final String DEFAULT_START_DATE \u003d \"11/11/2011\";","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"    public static final String DEFAULT_END_DATE \u003d \"21/11/2011\";","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    private TaskDescription description;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    private Date startDate;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    private Date endDate;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"     * Creates a {@code EventTaskBuilder} with the default details.","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"    public EventTaskBuilder() {","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"        description \u003d new TaskDescription(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        startDate \u003d new Date(DEFAULT_START_DATE);","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        endDate \u003d new Date(DEFAULT_END_DATE);","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"     * Initializes the EventTaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    public EventTaskBuilder(EventTask taskToCopy) {","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        startDate \u003d taskToCopy.getStartDate();","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"        endDate \u003d taskToCopy.getEndDate();","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"     * Sets the {@code TaskDescription} of the {@code EventTask} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"    public EventTaskBuilder withTaskDescription(String description) {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"zhengsterz"},"content":"        this.description \u003d new TaskDescription(description);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"zhengsterz"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"zhengsterz"},"content":"     * Sets the {@code Date} of the {@code DeadlineTask} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"zhengsterz"},"content":"    public EventTaskBuilder withStartDate(String date) {","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"zhengsterz"},"content":"        this.startDate \u003d new Date(date);","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"zhengsterz"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"zhengsterz"},"content":"     * Sets the {@code Date} of the {@code DeadlineTask} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"zhengsterz"},"content":"    public EventTaskBuilder withEndDate(String date) {","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"zhengsterz"},"content":"        this.endDate \u003d new Date(date);","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"zhengsterz"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"zhengsterz"},"content":"    public EventTask build() {","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"zhengsterz"},"content":"        return new EventTask(description, startDate, endDate);","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"zhengsterz":69}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"Cyrus-Krispin"},"content":"import seedu.address.model.role.Role;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Cyrus-Krispin"},"content":"    private Set\u003cRole\u003e roles;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Cyrus-Krispin"},"content":"        roles \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Cyrus-Krispin"},"content":"        roles \u003d new HashSet\u003c\u003e(personToCopy.getRoles());","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Cyrus-Krispin"},"content":"     * Parses the {@code roles} into a {@code Set\u003cRole\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Cyrus-Krispin"},"content":"    public PersonBuilder withRoles(String ... roles) {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Cyrus-Krispin"},"content":"        this.roles \u003d SampleDataUtil.getRoleSet(roles);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":93,"author":{"gitId":"Cyrus-Krispin"},"content":"        return new Person(name, phone, email, address, roles);","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":88,"Cyrus-Krispin":8}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"Cyrus-Krispin"},"content":"import seedu.address.model.role.Role;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Cyrus-Krispin"},"content":"        person.getRoles().stream().forEach(","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Cyrus-Krispin"},"content":"            s -\u003e sb.append(PREFIX_ROLE + s.roleName + \" \")","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Cyrus-Krispin"},"content":"        if (descriptor.getRoles().isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Cyrus-Krispin"},"content":"            Set\u003cRole\u003e roles \u003d descriptor.getRoles().get();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Cyrus-Krispin"},"content":"            if (roles.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Cyrus-Krispin"},"content":"                sb.append(PREFIX_ROLE);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Cyrus-Krispin"},"content":"                roles.forEach(s -\u003e sb.append(PREFIX_ROLE).append(s.roleName).append(\" \"));","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":53,"Cyrus-Krispin":9}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"public class TaskBuilder {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Do assignments\";","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"    private TaskDescription description;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"    public TaskBuilder() {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"        description \u003d new TaskDescription(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"     * Sets the {@code TaskDescription} of the {@code Task} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    public TaskBuilder withTaskDescription(String description) {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        this.description \u003d new TaskDescription(description);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"zhengsterz"},"content":"    public Task build() {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"PawanPatil19"},"content":"        return new Task(description, \"\", \"\");","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":40,"PawanPatil19":1}},{"path":"src/test/java/seedu/address/testutil/TypicalDeadlineTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"public class TypicalDeadlineTasks {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    public static final DeadlineTask FIRST \u003d new DeadlineTaskBuilder().withTaskDescription(\"send out survey\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    public static final DeadlineTask SECOND \u003d new DeadlineTaskBuilder().withTaskDescription(\"eat berries\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public static final DeadlineTask THIRD \u003d new DeadlineTaskBuilder().withTaskDescription(\"eat salmon\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    private TypicalDeadlineTasks() {} // prevents instantiation","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        for (DeadlineTask task : getTypicalDeadlineTasks()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"            ab.addTask(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        return ab;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    public static List\u003cDeadlineTask\u003e getTypicalDeadlineTasks() {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(FIRST, SECOND, THIRD));","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":35}},{"path":"src/test/java/seedu/address/testutil/TypicalEventTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.EventTask;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"public class TypicalEventTasks {","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    public static final EventTask FIRST \u003d new EventTaskBuilder().withTaskDescription(\"send out survey\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    public static final EventTask SECOND \u003d new EventTaskBuilder().withTaskDescription(\"eat berries\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public static final EventTask THIRD \u003d new EventTaskBuilder().withTaskDescription(\"eat salmon\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    private TypicalEventTasks() {} // prevents instantiation","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     * Returns an {@code AddressBook} with all the typical Event Tasks.","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        for (EventTask task : getTypicalEventTasks()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"            ab.addTask(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        return ab;","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    public static List\u003cEventTask\u003e getTypicalEventTasks() {","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(FIRST, SECOND, THIRD));","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"zhengsterz":36}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"PawanPatil19"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"PawanPatil19"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"-":12,"PawanPatil19":2}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_FRIEND;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Cyrus-Krispin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Cyrus-Krispin"},"content":"            .withRoles(\"friends\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"Cyrus-Krispin"},"content":"            .withRoles(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"Cyrus-Krispin"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withRoles(\"friends\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"Cyrus-Krispin"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withRoles(VALID_ROLE_FRIEND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"Cyrus-Krispin"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withRoles(VALID_ROLE_HUSBAND, VALID_ROLE_FRIEND)","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"-":69,"Cyrus-Krispin":7}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhengsterz"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"zhengsterz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"zhengsterz"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"zhengsterz"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"zhengsterz"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"zhengsterz"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"zhengsterz"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"zhengsterz"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"zhengsterz"},"content":"public class TypicalTasks {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"zhengsterz"},"content":"    public static final Task ONE \u003d new TaskBuilder().withTaskDescription(\"send out survey\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"zhengsterz"},"content":"    public static final Task TWO \u003d new TaskBuilder().withTaskDescription(\"eat berries\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"zhengsterz"},"content":"    public static final Task THREE \u003d new TaskBuilder().withTaskDescription(\"eat salmon\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"zhengsterz"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"zhengsterz"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"zhengsterz"},"content":"     * Returns an {@code AddressBook} with all the typical tasks.","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"zhengsterz"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"zhengsterz"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"zhengsterz"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"zhengsterz"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"zhengsterz"},"content":"            ab.addTask(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"zhengsterz"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"zhengsterz"},"content":"        return ab;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"zhengsterz"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"zhengsterz"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"zhengsterz"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ONE, TWO, THREE));","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"zhengsterz"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"zhengsterz"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"zhengsterz":35}}]
