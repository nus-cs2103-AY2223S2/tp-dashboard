[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"# EZ-Schedule","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-W17-3/tp/workflows/Java%20CI/badge.svg)](","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"https://github.com/AY2223S2-CS2103-W17-3/tp/actions)","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"* EZ-Schedule is a desktop application for managing and scheduling of events,","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"  optimized for use via a Command Line Interface (CLI)","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"  while still providing an easy way to visualize all events through a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"* For documentation of this project, you may refer to our [website](https://ay2223s2-cs2103-w17-3.github.io/tp/)","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"## Acknowledgement","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"lhy-hoyin":10,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"BigheartSmallbrain"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"BigheartSmallbrain"},"content":"### Ho Yin","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"BigheartSmallbrain"},"content":"\u003cimg src\u003d\"images/lhy-hoyin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"BigheartSmallbrain"},"content":"[[github](https://github.com/lhy-hoyin)]","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"BigheartSmallbrain"},"content":"[[portfolio](team/lhy-hoyin.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"BigheartSmallbrain"},"content":"* Responsibilities: Data","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"BigheartSmallbrain"},"content":"### Jeremy","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"BigheartSmallbrain"},"content":"\u003cimg src\u003d\"images/jrmckh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"BigheartSmallbrain"},"content":"[[github](http://github.com/JrmCkh)]","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"BigheartSmallbrain"},"content":"[[portfolio](team/jermckh.md)]","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"BigheartSmallbrain"},"content":"### Yu Quan","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"BigheartSmallbrain"},"content":"\u003cimg src\u003d\"images/bigheartsmallbrain.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"BigheartSmallbrain"},"content":"[[github](http://github.com/BigheartSmallbrain)]","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"BigheartSmallbrain"},"content":"[[portfolio](team/bigheartsmallbrain.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"BigheartSmallbrain"},"content":"### Anthony","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"BigheartSmallbrain"},"content":"\u003cimg src\u003d\"images/anthonynmh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"BigheartSmallbrain"},"content":"[[github](http://github.com/anthonynmh)]","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"BigheartSmallbrain"},"content":"[[portfolio](team/anthonynmh.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"BigheartSmallbrain":18,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"anthonynmh"},"content":"* has a need to manage a significant number of events","lastModifiedDate":"2023-02-25"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"anthonynmh"},"content":"* prefers visual representation of output","lastModifiedDate":"2023-02-25"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"anthonynmh"},"content":"* can type fast","lastModifiedDate":"2023-02-25"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"anthonynmh"},"content":"**Value proposition**: manage events at high-level, provides faster event analysis with graphical outputs.","lastModifiedDate":"2023-02-25"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| Priority | As a …​          | I want to …​                               | So that I can…​                                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"anthonynmh"},"content":"|----------|------------------|--------------------------------------------|-------------------------------------------------------------------------|","lastModifiedDate":"2023-02-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"| `* * *`  | new user         | see usage instructions                     | refer to instructions when I forget how to use the App                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"anthonynmh"},"content":"| `* * *`  | user             | easily save events after closing the app   | generate it again when I start the app                                  |","lastModifiedDate":"2023-02-26"},{"lineNumber":277,"author":{"gitId":"anthonynmh"},"content":"| `* * *`  | user             | add a person\u0027s schedule into the app       | see their schedules                                                     |","lastModifiedDate":"2023-02-26"},{"lineNumber":278,"author":{"gitId":"anthonynmh"},"content":"| `* * *`  | user             | delete an event from the app               | remove events that are no longer scheduled                              |","lastModifiedDate":"2023-02-26"},{"lineNumber":279,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | forgetful user   | find my next event                         | see the upcoming event without having to check every events myself      |","lastModifiedDate":"2023-02-25"},{"lineNumber":280,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | user             | undo accidental deletions                  | easily restore accidents in scheduling                                  |","lastModifiedDate":"2023-02-25"},{"lineNumber":281,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | teacher          | find a free timeslot in my schedule        | schedule a timeslot for student consultations                           |","lastModifiedDate":"2023-02-25"},{"lineNumber":282,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | user             | find an event by name                      | locate details of events without having to go through the entire list   |","lastModifiedDate":"2023-02-25"},{"lineNumber":283,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | user             | edit my schedule                           | make last minute changes to events                                      |","lastModifiedDate":"2023-02-25"},{"lineNumber":284,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | user             | be able to schedule many events            | schedule as many events as I want                                       |","lastModifiedDate":"2023-02-25"},{"lineNumber":285,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | user             | be able to have more than one scheduler    | generate different schedules for differnt events                        |","lastModifiedDate":"2023-02-26"},{"lineNumber":286,"author":{"gitId":"anthonynmh"},"content":"| `*`      | unmotivated user | have motivational quotes                   | feel motivated in my day                                                |","lastModifiedDate":"2023-02-25"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"anthonynmh"},"content":"(For all use cases below, the **System** is the `EZ-Schedule` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-02-25"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"anthonynmh"},"content":"**Use case: Add an event**","lastModifiedDate":"2023-02-25"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"anthonynmh"},"content":"1. User requests to add an event","lastModifiedDate":"2023-02-25"},{"lineNumber":299,"author":{"gitId":"anthonynmh"},"content":"2. System adds the event","lastModifiedDate":"2023-02-25"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"anthonynmh"},"content":"* 1a. The event already exist.","lastModifiedDate":"2023-02-25"},{"lineNumber":306,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":307,"author":{"gitId":"anthonynmh"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2023-02-25"},{"lineNumber":308,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":309,"author":{"gitId":"anthonynmh"},"content":"      Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":310,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":311,"author":{"gitId":"anthonynmh"},"content":"* 2a. The given event format invalid.","lastModifiedDate":"2023-02-25"},{"lineNumber":312,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":313,"author":{"gitId":"anthonynmh"},"content":"    * 2a1. System shows an error message.","lastModifiedDate":"2023-02-25"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"anthonynmh"},"content":"**Use case: Delete an event**","lastModifiedDate":"2023-02-25"},{"lineNumber":318,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":319,"author":{"gitId":"anthonynmh"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":320,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":321,"author":{"gitId":"anthonynmh"},"content":"1.  User requests to list events","lastModifiedDate":"2023-02-25"},{"lineNumber":322,"author":{"gitId":"anthonynmh"},"content":"2.  System shows a list of events","lastModifiedDate":"2023-02-25"},{"lineNumber":323,"author":{"gitId":"anthonynmh"},"content":"3.  User requests to delete a specific event in the list","lastModifiedDate":"2023-02-25"},{"lineNumber":324,"author":{"gitId":"anthonynmh"},"content":"4.  System deletes the event","lastModifiedDate":"2023-02-25"},{"lineNumber":325,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":326,"author":{"gitId":"anthonynmh"},"content":"    Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":327,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":328,"author":{"gitId":"anthonynmh"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"anthonynmh"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-25"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":332,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":334,"author":{"gitId":"anthonynmh"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2023-02-25"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":336,"author":{"gitId":"anthonynmh"},"content":"    * 2a1. System shows an error message.","lastModifiedDate":"2023-02-25"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"anthonynmh"},"content":"**Use case: Undo a delete**","lastModifiedDate":"2023-02-25"},{"lineNumber":341,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":342,"author":{"gitId":"anthonynmh"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":343,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":344,"author":{"gitId":"anthonynmh"},"content":"1. User requests to undo the recent delete","lastModifiedDate":"2023-02-25"},{"lineNumber":345,"author":{"gitId":"anthonynmh"},"content":"2. System restores the most recent delete","lastModifiedDate":"2023-02-25"},{"lineNumber":346,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":347,"author":{"gitId":"anthonynmh"},"content":"    Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":348,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":349,"author":{"gitId":"anthonynmh"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":350,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":351,"author":{"gitId":"anthonynmh"},"content":"* 1a. New event added duplicate of recent deleted event.","lastModifiedDate":"2023-02-25"},{"lineNumber":352,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":353,"author":{"gitId":"anthonynmh"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2023-02-25"},{"lineNumber":354,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":355,"author":{"gitId":"anthonynmh"},"content":"      Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":356,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":357,"author":{"gitId":"anthonynmh"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-02-25"},{"lineNumber":358,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":359,"author":{"gitId":"anthonynmh"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":360,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":361,"author":{"gitId":"anthonynmh"},"content":"**Use case: Find event by name**","lastModifiedDate":"2023-02-25"},{"lineNumber":362,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":363,"author":{"gitId":"anthonynmh"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":364,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":365,"author":{"gitId":"anthonynmh"},"content":"1. User requests to find an event by name","lastModifiedDate":"2023-02-25"},{"lineNumber":366,"author":{"gitId":"anthonynmh"},"content":"2. System shows a list of events matching the name","lastModifiedDate":"2023-02-25"},{"lineNumber":367,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":368,"author":{"gitId":"anthonynmh"},"content":"   Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":369,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":370,"author":{"gitId":"anthonynmh"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":371,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":372,"author":{"gitId":"anthonynmh"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-25"},{"lineNumber":373,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":374,"author":{"gitId":"anthonynmh"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":375,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":376,"author":{"gitId":"anthonynmh"},"content":"**Use case: Find next event**","lastModifiedDate":"2023-02-25"},{"lineNumber":377,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":378,"author":{"gitId":"anthonynmh"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":379,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":380,"author":{"gitId":"anthonynmh"},"content":"1. User requests for next upcoming event","lastModifiedDate":"2023-02-25"},{"lineNumber":381,"author":{"gitId":"anthonynmh"},"content":"2. System shows the next upcoming event","lastModifiedDate":"2023-02-25"},{"lineNumber":382,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":383,"author":{"gitId":"anthonynmh"},"content":"   Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":384,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":385,"author":{"gitId":"anthonynmh"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":386,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":387,"author":{"gitId":"anthonynmh"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-25"},{"lineNumber":388,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":389,"author":{"gitId":"anthonynmh"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":390,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":391,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"anthonynmh"},"content":"2. Should be able to hold up to 1000 events without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-25"},{"lineNumber":397,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"anthonynmh"},"content":"4. A user with colour blindness may require a high-contrast setting for graphical outputs.","lastModifiedDate":"2023-02-25"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"anthonynmh"},"content":"* **Event**: A task with a starting time and an ending time","lastModifiedDate":"2023-02-26"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"anthonynmh":98,"-":361}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"# User Guide","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"EZ-Schedule is a **desktop application for managing and scheduling of events, optimized for use via a Command Line","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"Interface** (CLI) while still providing an easy way to visualize all events through a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"## Index","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"* [Quick start](#quick-start)","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"* [Features](#features)","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    * [Viewing help: `help`](#help)","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    * [Adding a event: `add`](#add)","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    * [Deleting a event: `delete`](#delete)","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    * [Listing all events: `list`](#list)","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    * [Retrieving next event: `next`](#next)","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    * [Locating all events by keyword: `find`](#find)","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    * [Exits the application: `exit`](#exit)","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"* [FAQ](#faq)","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"* [Command summary](#command-summary)","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"## \u003cdiv id\u003d\"quick-start\"\u003e Quick start \u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"2. Download the latest `EzSchedule.jar` from [here](https://github.com/AY2223S2-CS2103-W17-3/tp/releases).","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your EzSchedule.","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar EzSchedule.jar` command","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"   to run the application.","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"## \u003cdiv id\u003d\"features\"\u003e Features \u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"### \u003cdiv id\u003d\"help\"\u003e Viewing help: `help` (coming soon) \u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"Shows the user a list of instructions available.","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"Example: `help`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"### \u003cdiv id\u003d\"add\"\u003e Adding a event: `add` (coming soon)\u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"Adds an event into the Scheduler.","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"Format: `add \u003cevent\u003e /\u003cstart time\u003e /\u003cend time\u003e`","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"Example:","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"* `add booked tennis court /2023-02-01 /2023-02-02`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"### \u003cdiv id\u003d\"delete\"\u003e Deleting a event: `delete` (coming soon)\u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"Deletes an event in the Scheduler.","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"Format: `delete \u003cevent\u003e`","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"Example:","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"* `delete booked tennis court `\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"### \u003cdiv id\u003d\"list\"\u003e Listing all events: `list` (coming soon)\u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"Displays all events currently saved in the Scheduler.","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"Format: `list`","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"Example: `list`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"### \u003cdiv id\u003d\"next\"\u003e Retrieving next event: `next` (coming soon)\u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"Searches the Scheduler and returns the next upcoming event start time.","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"Format: `next event`","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"Example: `next event`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"### \u003cdiv id\u003d\"find\"\u003e Locating all events by keyword: `find` (coming soon)\u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"Finds the Scheduler for the task, returns all events containing the relevant keyword.","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"Format: `find \u003cevent\u003e`","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"Example: `find booked tennis court`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"### \u003cdiv id\u003d\"exit\"\u003e Exits the application `exit` (coming soon)\u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"Exits the application.","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"Example: `exit`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"## \u003cdiv id\u003d\"faq\"\u003e FAQ \u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"**Q:** On a scale of 1 to 10, how awesome is this product?","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"**A:** 10\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"## \u003cdiv id\u003d\"command-summary\"\u003e Command summary \u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"Action |      Format      |                                              Example |","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":":----- |:----------------:|-----------------------------------------------------:|","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"Help   |      `help`      |                                               `help` |","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"Add    |  `add \u003cevent\u003e`   |     `add booked tennis court /2023-02-01 /2023-02-0` |","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"Delete | `delete \u003cevent\u003e` |                         `delete booked tennis court` |","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"List   |      `list`      |                                               `list` |","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"Next   |   `next event`   |                                         `next event` |","lastModifiedDate":"2023-02-24"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":"Find   |  `find \u003cevent\u003e`  |                           `find booked tennis court` |","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"lhy-hoyin"},"content":"Exit   |      `exit`      |                                               `exit` |","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"lhy-hoyin":62,"-":49}},{"path":"docs/team/anthonynmh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"layout: page","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"title: Anthony\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"### Project: EZ-Schedule","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"EZ-Schedule is an application that allows for a high-level overview of all events for a particular administrator.","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"Examples:","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"- company manager - employee schedules","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"- badminton court manager - badminton court bookings","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"- teacher - students","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"GUI interactivity may be added in the future.","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"It is written in Java.","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"### Summary of contributions","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"* **New Feature**: to be added","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"* **Code contributed**: [Link to code contributions -- to be added]()","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"* **Project management**:","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"    * to be added","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"    * to be added","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"    * User Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"        * Updated the feature list for v1.2","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"        * Updated the command summary for v1.2","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"        * Updated the user stories for v1.2","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"        * Updated the use cases for v1.2","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"* **Community**:","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"    * to be added","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"* **Tools**:","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"    * to be added","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"anthonynmh":46}},{"path":"docs/team/bigheartsmallbrain.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BigheartSmallbrain"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"BigheartSmallbrain"},"content":"layout: page","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"BigheartSmallbrain"},"content":"title: Zhang Yuquan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"BigheartSmallbrain"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"BigheartSmallbrain"},"content":"### Project: Ez-Schedule","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"BigheartSmallbrain"},"content":"EZ-Schedule is a desktop application used for managing and scheduling of events. The user interacts with it using a","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"BigheartSmallbrain"},"content":"Command Line Interface (CLI), and it has a Graphical User Interface (GUI) created with JavaFX. It is written in Java,","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"BigheartSmallbrain"},"content":"and has about ***to be added soon*** kLoC.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"BigheartSmallbrain"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Code contributed**: [To be added soon](https://github.com/AY2223S2-CS2103-W17-3/tp)","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Project management**:","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"BigheartSmallbrain"},"content":"  * To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"BigheartSmallbrain"},"content":"  * To be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"BigheartSmallbrain"},"content":"  * User Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"BigheartSmallbrain"},"content":"    * Crafted the draft user","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"BigheartSmallbrain"},"content":"      guide [markdown file](https://github.com/AY2223S2-CS2103-W17-3/tp/pull/27/commits/5b329d62e2dbc73966ab2a4e59998c8d0657c246)","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"BigheartSmallbrain"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"BigheartSmallbrain"},"content":"    * To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Community**:","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"BigheartSmallbrain"},"content":"  * PRs reviewed (with non-trivial review comments): To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"BigheartSmallbrain"},"content":"  * Contributed to forum discussions: To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"BigheartSmallbrain"},"content":"  * Reported bugs and suggestions for other teams in the class: To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"BigheartSmallbrain"},"content":"  * Some parts of the history feature I added was adopted by several other class mates: To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Tools**:","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"BigheartSmallbrain"},"content":"  * To be added soon","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"BigheartSmallbrain":41}},{"path":"docs/team/jrmckh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"layout: page","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"title: Chia Jeremy\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"### \u003cspan style\u003d\"color:orange\"\u003e Project: EzSchedule \u003c/span\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"EZ-Schedule is a desktop application used for managing and scheduling of events. The user interacts with it using a","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"Command Line Interface (CLI), and it has a Graphical User Interface (GUI) created with JavaFX. It is written in Java,","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"and has about ***to be added soon*** kLoC.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"### Overview","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"* [Summary of Contributions](#summary-of-contributions-)","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"* [Code contributed](#code-contributed-)","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"* [New Features](#new-features-)","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"* [Enhancements to existing features](#enhancements-to-existing-features-)","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"* [Project management](#project-management-)","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"* [Documentation](#documentation-)","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"* [Community](#community-)","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"* [Tools](#tools-)","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"### Summary of Contributions:","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"* to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"### Code contributed:","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"* [to be added soon](https://github.com/AY2223S2-CS2103-W17-3/tp)","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"### New Features:","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"* to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"### Enhancements to existing features:","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"* to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"### Project management:","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"* to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"### Documentation:","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"* User Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"    * Crafted the draft user","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"      guide [markdown file](https://github.com/AY2223S2-CS2103-W17-3/tp/pull/27/commits/5b329d62e2dbc73966ab2a4e59998c8d0657c246)","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"* Developer Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"    * to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"* Project Portfolio Page:","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"    * Crafted the draft PPP [markdown file]()","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"### Community:","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"* PRs reviewed: [#27](https://github.com/AY2223S2-CS2103-W17-3/tp/pull/27)","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"### Tools:","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"* to be added soon","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"JrmCkh":52}},{"path":"docs/team/lhy-hoyin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"title: Ho Yin\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"## Overview","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"Project: EZ-Schedule","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"EZ-Schedule is a desktop application for managing and scheduling of events,","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"optimized for use via a Command Line Interface (CLI)","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"while still providing an easy way to visualize all events through a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"## Summary of Contributions","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"### Code contributed","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"Check it out [here](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dlhy-hoyin\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"### Enhancements implemented","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"### Contributions to the User Guide","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"to be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"### Contributions to the Developer Guide","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"- Set up the GitHub team org and repository","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"- Create milestones and labels within the team repository","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"- Add corresponding labels to issues and PRs (when missing)","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"### Review/mentoring contributions","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"[pr-reviewed-v1.1]: https://github.com/AY2223S2-CS2103-W17-3/tp/pulls?q\u003dis%3Apr+is%3Amerged+reviewed-by%3Alhy-hoyin+milestone%3Av1.1","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"[pr-reviewed-v1.2]: https://github.com/AY2223S2-CS2103-W17-3/tp/pulls?q\u003dis%3Apr+is%3Amerged+reviewed-by%3Alhy-hoyin+milestone%3Av1.2","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"[pr-reviewed-v1.3]: https://github.com/AY2223S2-CS2103-W17-3/tp/pulls?q\u003dis%3Apr+is%3Amerged+reviewed-by%3Alhy-hoyin+milestone%3Av1.3","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"[pr-reviewed-v1.4]: https://github.com/AY2223S2-CS2103-W17-3/tp/pulls?q\u003dis%3Apr+is%3Amerged+reviewed-by%3Alhy-hoyin+milestone%3Av1.4","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"[pr-reviewed-total]: https://github.com/AY2223S2-CS2103-W17-3/tp/pulls?q\u003dis%3Apr+is%3Amerged+reviewed-by%3Alhy-hoyin","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"| Milestone | PRs reviewed             |","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"|-----------|--------------------------|","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"| v1.1      | [4] [pr-reviewed-v1.1]   |","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"| v1.2      | [ ] [pr-reviewed-v1.2]   |","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"| v1.3      | [ ] [pr-reviewed-v1.3]   |","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"| v1.4      | [ ] [pr-reviewed-v1.4]   |","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"| Total:    | [4] [pr-reviewed-total]  |","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"PR Highlights","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"* Milestone 1","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"  * [Updated AboutUs and UserGuide](https://github.com/AY2223S2-CS2103-W17-3/tp/pull/9)","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"  * [Branch user story Developer Guide](https://github.com/AY2223S2-CS2103-W17-3/tp/pull/31)","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"### Contributions beyond the project team","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"## Contribution Highlights","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"to be added soon","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"lhy-hoyin":55}},{"path":"src/main/java/ezschedule/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"public class AppParameters {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    private Path configPath;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"        return configPath;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        return appParameters;","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"        return configPath.hashCode();","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":64}},{"path":"src/main/java/ezschedule/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":" * The main entry point to the application.","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":" *","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":" * entry point of the application:","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":" *","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":" *","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":" *","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"public class Main {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"lhy-hoyin":25}},{"path":"src/main/java/ezschedule/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Config;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Version;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.StringUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":" * Runs the application.","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"public class MainApp extends Application {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"    // TODO: also declare Ui, Logic, Storage, etc","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    protected Config config;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    public void init() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"        super.init();","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"        // TODO: initialise Ui, Logic, Storage, etc","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"        Config initializedConfig;","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"        return initializedConfig;","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"        logger.info(\"Starting Ez-Schedule \" + MainApp.VERSION);","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"        // TODO: Start to run UI of app","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"        //ui.start(primaryStage);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"        // TODO: Temporary code to allow exiting","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"        String input;","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"        do {","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"            System.out.println(\"To be implemented. Type \u0027exit\u0027 to stop. You typed: \" + input);","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"        } while (input.compareTo(\"exit\") !\u003d 0);","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"        Platform.exit();","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"    public void stop() {","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"        // TODO: do saving before closing","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":105}},{"path":"src/main/java/ezschedule/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":" * Config values used by the app","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"public class Config {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    // Config values customizable through config file","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        return logLevel;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":63}},{"path":"src/main/java/ezschedule/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.awt.Point;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":" * Guarantees: immutable.","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    private final double windowWidth;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    private final double windowHeight;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    public GuiSettings() {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"        return windowWidth;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        return windowHeight;","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":79}},{"path":"src/main/java/ezschedule/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"public class LogsCenter {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    public static void init(Config config) {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"        removeHandlers(logger);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"        addFileHandler(logger);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"        return fileHandler;","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":"        return consoleHandler;","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":112}},{"path":"src/main/java/ezschedule/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Container for user visible messages.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"public class Messages {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":13}},{"path":"src/main/java/ezschedule/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    private final int major;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    private final int minor;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"    private final int patch;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        this.major \u003d major;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"    public int getMajor() {","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        return major;","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"    public int getMinor() {","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"        return minor;","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"    public int getPatch() {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        return patch;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        return isEarlyAccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"     * @param versionString version number string","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"     * @return a Version object","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"    @JsonValue","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"            return major - other.major;","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"            return minor - other.minor;","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"            return patch - other.patch;","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"            return 0;","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"            return -1;","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"        return 1;","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"lhy-hoyin"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"lhy-hoyin"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"lhy-hoyin"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":116}},{"path":"src/main/java/ezschedule/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core.index;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" *","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"public class Index {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    public int getZeroBased() {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"    public int getOneBased() {","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":54}},{"path":"src/main/java/ezschedule/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"        super(cause);","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":11}},{"path":"src/main/java/ezschedule/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"        super(message);","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"     * @param cause of the main exception","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"        super(message, cause);","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":21}},{"path":"src/main/java/ezschedule/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.MainApp;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":" * A container for App specific utility functions","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"public class AppUtil {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"        if (!condition) {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"        if (!condition) {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":42}},{"path":"src/main/java/ezschedule/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":" * Utility methods related to Collections","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"public class CollectionUtil {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(items);","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(items);","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":35}},{"path":"src/main/java/ezschedule/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Config;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"public class ConfigUtil {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":23}},{"path":"src/main/java/ezschedule/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":" * Writes and reads files","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"public class FileUtil {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"     * otherwise returns false.","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"            Paths.get(path);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"            createFile(file);","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"            return;","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        Files.createFile(file);","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"     * Assumes file exists","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"     * Writes given string to a file.","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":83}},{"path":"src/main/java/ezschedule/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.LogsCenter;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"public class JsonUtil {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"            throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"        T jsonFile;","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"lhy-hoyin"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"lhy-hoyin"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"lhy-hoyin"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"lhy-hoyin"},"content":"            super(vc);","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"lhy-hoyin"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"lhy-hoyin"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"lhy-hoyin"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"lhy-hoyin"},"content":"        /**","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"lhy-hoyin"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"lhy-hoyin"},"content":"         * \u003cp\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"lhy-hoyin"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"lhy-hoyin"},"content":"         *","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"lhy-hoyin"},"content":"         */","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"lhy-hoyin"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"lhy-hoyin"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"lhy-hoyin"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"lhy-hoyin"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"lhy-hoyin"},"content":"            return Level.class;","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":143}},{"path":"src/main/java/ezschedule/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.StringWriter;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"public class StringUtil {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(word);","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(t);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":68}},{"path":"src/main/java/ezschedule/slots/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.slots;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Represent a event (i.e. something to be done at a certain time).","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"public class Event extends Slot {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"    // Identity fields","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"    private String description;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    private String location; // optional","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs an instance of Event.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    public Event(String description, String date, String startTime, String endTime) {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"        super(date, startTime, endTime);","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"lhy-hoyin":24}},{"path":"src/main/java/ezschedule/slots/Slot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.slots;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Represent a timeslot.","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"public abstract class Slot {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"    private String date;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"    private String startTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"    private String endTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    Slot(String date, String startTime, String endTime) {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    public String getDate() {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        return date;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    public String getStartTime() {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"        return startTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    public String getEndTime() {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        return endTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"lhy-hoyin":31}},{"path":"src/main/java/ezschedule/slots/SlotScheduler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.slots;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Represent the scheduler to manage slots.","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"public class SlotScheduler {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"    // List\u003cSlot\u003e \u003d ...","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"lhy-hoyin":9}},{"path":"src/main/java/ezschedule/slots/VenueBooking.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.slots;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Represent a booking made for a venue/location.","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"public class VenueBooking extends Slot {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"    private String venue;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"    private String bookedBy;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    VenueBooking(String venue, String bookedBy, String date, String startTime, String endTime) {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"        super(date, startTime, endTime);","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"        this.bookedBy \u003d bookedBy;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"lhy-hoyin":16}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid\";","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_EVENTS_LISTED_OVERVIEW \u003d \"%1$d events listed!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"anthonynmh":2,"-":13}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"BigheartSmallbrain"},"content":"        //checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"BigheartSmallbrain"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\");","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"BigheartSmallbrain"},"content":"        return preppedSentence.contains(preppedWord);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"BigheartSmallbrain":3,"-":64}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"     * Returns an unmodifiable view of the filtered list of events","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"     * @return","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"JrmCkh":6,"anthonynmh":2,"-":47}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"anthonynmh"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"anthonynmh"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"anthonynmh":3,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"anthonynmh"},"content":"        /*","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"anthonynmh"},"content":"        */","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"anthonynmh":3,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static seedu.address.logic.parser.CliEventSyntax.PREFIX_END;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static seedu.address.logic.parser.CliEventSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static seedu.address.logic.parser.CliEventSyntax.PREFIX_START;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":" * Adds a person to the scheduler.","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to the scheduler. \"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"        + PREFIX_NAME + \"NAME 1 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"        + PREFIX_START + \"2023-05-01 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"        + PREFIX_END + \"2023-05-05 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"        + PREFIX_NAME + \"NAME 2 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"        + PREFIX_START + \"2024-05-01 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"        + PREFIX_END + \"2024-05-05 \";","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the scheduler\";","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"    private final Event toAdd;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"     * Creates an AddEventCommand to add the specified {@code Event}","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"        toAdd \u003d event;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"        if (model.hasEvent(toAdd)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"anthonynmh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"anthonynmh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"anthonynmh"},"content":"            || (other instanceof AddEventCommand // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"anthonynmh"},"content":"            \u0026\u0026 toAdd.equals(((AddEventCommand) other).toAdd));","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JrmCkh":9,"anthonynmh":51}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"            + \": Deletes the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted Event: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"        Event eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete));","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"anthonynmh":8,"-":45}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static seedu.address.logic.parser.CliEventSyntax.PREFIX_END;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static seedu.address.logic.parser.CliEventSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static seedu.address.logic.parser.CliEventSyntax.PREFIX_START;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"        + \"[\" + PREFIX_START + \"STARTTIME] \"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"        + \"[\" + PREFIX_END + \"ENDTIME] \"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"        + PREFIX_START + \"2025-10-01 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"        + PREFIX_END + \"2025-10-02\";","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_EDIT_EVENT_SUCCESS \u003d \"Edited Event: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the scheduler.\";","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"    private final EditEventDescriptor editEventDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param index               of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"     * @param editEventDescriptor details to edit the event with","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"    public EditCommand(Index index, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(editEventDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"anthonynmh"},"content":"        this.editEventDescriptor \u003d new EditEventDescriptor(editEventDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"     * Creates and returns a {@code Event} with the details of {@code eventToEdit}","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"     * edited with {@code editEventDescriptor}.","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"    private static Event createEditedEvent(Event eventToEdit, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"        assert eventToEdit !\u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"        Name updatedName \u003d editEventDescriptor.getName().orElse(eventToEdit.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"        String updatedStartTime \u003d editEventDescriptor.getParsedStartTime().orElse(eventToEdit.getParsedStartTime());","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"        String updatedEndTime \u003d editEventDescriptor.getParsedEndTime().orElse(eventToEdit.getParsedEndTime());","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"        return new Event(updatedName, updatedStartTime, updatedEndTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"anthonynmh"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"anthonynmh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"anthonynmh"},"content":"        Event eventToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"anthonynmh"},"content":"        Event editedEvent \u003d createEditedEvent(eventToEdit, editEventDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"anthonynmh"},"content":"        if (!eventToEdit.isSameEvent(editedEvent) \u0026\u0026 model.hasEvent(editedEvent)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"anthonynmh"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"anthonynmh"},"content":"        model.setEvent(eventToEdit, editedEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"anthonynmh"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"anthonynmh"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_EVENT_SUCCESS, editedEvent));","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":107,"author":{"gitId":"anthonynmh"},"content":"            \u0026\u0026 editEventDescriptor.equals(e.editEventDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"anthonynmh"},"content":"    public static class EditEventDescriptor {","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"anthonynmh"},"content":"        private String startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"anthonynmh"},"content":"        private String endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"JrmCkh"},"content":"        public EditEventDescriptor() {","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":126,"author":{"gitId":"anthonynmh"},"content":"        public EditEventDescriptor(EditEventDescriptor toCopy) {","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":128,"author":{"gitId":"anthonynmh"},"content":"            setStartTime(toCopy.startTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"anthonynmh"},"content":"            setEndTime(toCopy.endTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"anthonynmh"},"content":"            return CollectionUtil.isAnyNonNull(name, startTime, endTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"JrmCkh"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"JrmCkh"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"anthonynmh"},"content":"        public void setStartTime(String startTime) {","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"anthonynmh"},"content":"            this.startTime \u003d startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"anthonynmh"},"content":"        public Optional\u003cString\u003e getParsedStartTime() {","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"anthonynmh"},"content":"            return Optional.ofNullable(startTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"anthonynmh"},"content":"        public void setEndTime(String endTime) {","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"anthonynmh"},"content":"            this.endTime \u003d endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"anthonynmh"},"content":"        public Optional\u003cString\u003e getParsedEndTime() {","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"anthonynmh"},"content":"            return Optional.ofNullable(endTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":171,"author":{"gitId":"anthonynmh"},"content":"            if (!(other instanceof EditEventDescriptor)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":176,"author":{"gitId":"anthonynmh"},"content":"            EditEventDescriptor e \u003d (EditEventDescriptor) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"anthonynmh"},"content":"                \u0026\u0026 getParsedStartTime().equals(e.getParsedStartTime())","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"anthonynmh"},"content":"                \u0026\u0026 getParsedEndTime().equals(e.getParsedEndTime());","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"JrmCkh":19,"anthonynmh":42,"-":122}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import seedu.address.model.event.EventContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"BigheartSmallbrain"},"content":" * Finds and lists all events in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"BigheartSmallbrain"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds events that contain keyword provided\"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"BigheartSmallbrain"},"content":"            + \"and displays them as a list with index number \\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS] ... \\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"BigheartSmallbrain"},"content":"            + \"Example: \" + COMMAND_WORD + \" booking basketball court\";","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"    private final EventContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"    public FindCommand(EventContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"                String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW, model.getFilteredEventList().size()));","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"JrmCkh":1,"BigheartSmallbrain":5,"anthonynmh":4,"-":33}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all events\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"anthonynmh":3,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static seedu.address.logic.parser.CliEventSyntax.PREFIX_END;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static seedu.address.logic.parser.CliEventSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static seedu.address.logic.parser.CliEventSyntax.PREFIX_START;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"public class AddCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"     * and returns an AddEventCommand object for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_START, PREFIX_END);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_START, PREFIX_END)","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"        String startTime \u003d ParserUtil.parseStartTime(argMultimap.getValue(PREFIX_START).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"        String endTime \u003d ParserUtil.parseEndTime(argMultimap.getValue(PREFIX_END).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"        Event event \u003d new Event(name, startTime, endTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"        return new AddEventCommand(event);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"JrmCkh":11,"anthonynmh":12,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/CliEventSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"public class CliEventSyntax {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"    /* Prefix definitions */","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"    public static final Prefix PREFIX_START \u003d new Prefix(\"start/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"    public static final Prefix PREFIX_END \u003d new Prefix(\"end/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JrmCkh":3,"anthonynmh":9}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"JrmCkh":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static seedu.address.logic.parser.CliEventSyntax.PREFIX_END;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static seedu.address.logic.parser.CliEventSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import static seedu.address.logic.parser.CliEventSyntax.PREFIX_START;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_START, PREFIX_END);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"            editEventDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"        if (argMultimap.getValue(PREFIX_START).isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"            editEventDescriptor.setStartTime(ParserUtil.parseStartTime(argMultimap.getValue(PREFIX_START).get()));","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"        if (argMultimap.getValue(PREFIX_END).isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"            editEventDescriptor.setEndTime(ParserUtil.parseEndTime(argMultimap.getValue(PREFIX_END).get()));","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"        if (!editEventDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"anthonynmh"},"content":"        return new EditCommand(index, editEventDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"JrmCkh":4,"anthonynmh":10,"-":41}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import seedu.address.model.event.EventContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"        return new FindCommand(new EventContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"JrmCkh":1,"anthonynmh":1,"-":31}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"anthonynmh"},"content":"    public static String parseStartTime(String startTime) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"anthonynmh"},"content":"        String trimmedStartTime \u003d startTime.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"anthonynmh"},"content":"        /*","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"anthonynmh"},"content":"        */","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"anthonynmh"},"content":"        return trimmedStartTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"anthonynmh"},"content":"    public static String parseEndTime(String endTime) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(endTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"anthonynmh"},"content":"        String trimmedEndTime \u003d endTime.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"anthonynmh"},"content":"        /*","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"anthonynmh"},"content":"        return trimmedEndTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"JrmCkh":1,"anthonynmh":11,"-":67}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"anthonynmh"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"anthonynmh"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"anthonynmh"},"content":"        return events.contains(event);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"anthonynmh"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"anthonynmh"},"content":"        events.add(e);","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"anthonynmh"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"anthonynmh"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"anthonynmh"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"anthonynmh"},"content":"        events.remove(key);","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"anthonynmh"},"content":"        return events.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"anthonynmh"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"anthonynmh"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"anthonynmh"},"content":"                \u0026\u0026 events.equals(((AddressBook) other).events));","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"anthonynmh"},"content":"        return events.hashCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JrmCkh":1,"anthonynmh":21,"-":98}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"anthonynmh"},"content":"    /** Returns the Scheduler */","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"anthonynmh"},"content":"     * Returns true if a event with the same identity as {@code event} exists in the Scheduler.","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"anthonynmh"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"anthonynmh"},"content":"     * Deletes the given event.","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"anthonynmh"},"content":"     * The event must exist in the scheduler.","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"anthonynmh"},"content":"    void deleteEvent(Event event);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"anthonynmh"},"content":"     * Adds the given event.","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"anthonynmh"},"content":"     * {@code event} must not already exist in the scheduler.","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"anthonynmh"},"content":"    void addEvent(Event event);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"anthonynmh"},"content":"     * Replaces the given person {@code target} with {@code editedEvent}.","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"anthonynmh"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing Event in the scheduler.","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"anthonynmh"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"anthonynmh"},"content":"    /** Returns an unmodifiable view of the filtered event list */","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"anthonynmh"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"anthonynmh"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"anthonynmh"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"anthonynmh":18,"-":69}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.addressBook.getEventList());","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"anthonynmh"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"anthonynmh"},"content":"        return addressBook.hasEvent(event);","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"anthonynmh"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"anthonynmh"},"content":"        addressBook.removeEvent(target);","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"anthonynmh"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"anthonynmh"},"content":"        addressBook.addEvent(event);","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"anthonynmh"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"anthonynmh"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"anthonynmh"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"anthonynmh"},"content":"        addressBook.setEvent(target, editedEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"anthonynmh"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"anthonynmh"},"content":"        return filteredEvents;","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"anthonynmh"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"anthonynmh"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"anthonynmh"},"content":"                \u0026\u0026 filteredEvents.equals(other.filteredEvents);","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"anthonynmh":19,"-":131}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"anthonynmh":2,"-":15}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":" * Represents an Event in the scheduler.","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"public class Event {","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"    private Name name;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"BigheartSmallbrain"},"content":"    private String date; //Can abstract to Date class","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"    private String startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"    private String endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"    public Event(Name name, String startTime, String endTime) {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"BigheartSmallbrain"},"content":"        this.date \u003d \"To be confirmed\";","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"BigheartSmallbrain"},"content":"    ","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"BigheartSmallbrain"},"content":"    public Event(Name name, String date, String startTime, String endTime) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"BigheartSmallbrain"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"BigheartSmallbrain"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"BigheartSmallbrain"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"BigheartSmallbrain"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"    public Name getName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"        return name;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"BigheartSmallbrain"},"content":"    public String getDate() {return date;}","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"    public String getParsedStartTime() {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"        return startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"    public String getParsedEndTime() {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"        return endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"     * Returns true if both events have the same name.","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"anthonynmh"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"anthonynmh"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"anthonynmh"},"content":"            \u0026\u0026 otherEvent.getName().equals(getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"anthonynmh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"anthonynmh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"anthonynmh"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"anthonynmh"},"content":"    ","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"anthonynmh"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"anthonynmh"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"anthonynmh"},"content":"    ","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"anthonynmh"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"anthonynmh"},"content":"        return otherEvent.getName().equals(getName())","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"anthonynmh"},"content":"                \u0026\u0026 otherEvent.getParsedStartTime().equals(getParsedStartTime())","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"anthonynmh"},"content":"                \u0026\u0026 otherEvent.getParsedEndTime().equals(getParsedEndTime());","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"BigheartSmallbrain"},"content":"    ","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"BigheartSmallbrain"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"BigheartSmallbrain"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"BigheartSmallbrain"},"content":"        final StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"BigheartSmallbrain"},"content":"        sb.append(getName())","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"BigheartSmallbrain"},"content":"                .append(\"Date: \")","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"BigheartSmallbrain"},"content":"                .append(getDate())","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"BigheartSmallbrain"},"content":"                .append(\"\\nStart: \")","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"BigheartSmallbrain"},"content":"                .append(getParsedStartTime())","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"BigheartSmallbrain"},"content":"                .append(\"\\nEnd: \")","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"BigheartSmallbrain"},"content":"                .append(getParsedEndTime());","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"BigheartSmallbrain"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JrmCkh":7,"BigheartSmallbrain":23,"anthonynmh":57}},{"path":"src/main/java/seedu/address/model/event/EventContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":" * Tests that a {@code Event}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"public class EventContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"    public EventContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"            .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(event.getName().fullName, keyword));","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"            || (other instanceof EventContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"            \u0026\u0026 keywords.equals(((EventContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JrmCkh":6,"anthonynmh":26}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":" * A event is considered unique by comparing using {@code Event#isSameEvent(Event)}. As such, adding and updating of","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":" * persons uses Event#isSameEvent(Event) for equality so as to ensure that the event being added or updated is","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":" * unique in terms of identity in the UniqueEventList. However, the removal of a event uses Event#equals(Object) so","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":" * as to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":" * as to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":" *","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":" * @see Event#isSameEvent(Event)","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"     * Adds a event to the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"     * The event must not already exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"anthonynmh"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"anthonynmh"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"anthonynmh"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"anthonynmh"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"anthonynmh"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"anthonynmh"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"anthonynmh"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"anthonynmh"},"content":"        if (!target.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"anthonynmh"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"anthonynmh"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"anthonynmh"},"content":"     * The person must exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"anthonynmh"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"anthonynmh"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"JrmCkh"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"anthonynmh"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"anthonynmh"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"anthonynmh"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"anthonynmh"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"anthonynmh"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"anthonynmh"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"anthonynmh"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"JrmCkh"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"anthonynmh"},"content":"        internalList.setAll(events);","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"anthonynmh"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"anthonynmh"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"anthonynmh"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"anthonynmh"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"anthonynmh"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"anthonynmh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"anthonynmh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"anthonynmh"},"content":"            || (other instanceof UniqueEventList // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"anthonynmh"},"content":"            \u0026\u0026 internalList.equals(((UniqueEventList) other).internalList));","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"anthonynmh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"anthonynmh"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"anthonynmh"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"anthonynmh"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"anthonynmh"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"anthonynmh"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"anthonynmh"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"anthonynmh"},"content":"                    return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"anthonynmh"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"anthonynmh"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"anthonynmh"},"content":"        return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JrmCkh":26,"anthonynmh":112}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":" * Signals that the operation will result in duplicate Events (Events are considered duplicates if they have the same","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":" * identity).","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"        super(\"Operation would result in duplicate events\");","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JrmCkh":11}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"public class EventNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JrmCkh":6}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"    private final Remark remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"        return remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"JrmCkh"},"content":"            .append(getAddress())","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"JrmCkh"},"content":"            .append(\" Remark: \")","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"JrmCkh"},"content":"            .append(getRemark());","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JrmCkh":10,"-":120}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"public class Remark {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"    public final String value;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"     * Constructor for Remark","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"     * @param remark Person\u0027s remark","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"        value \u003d remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"        return value;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"JrmCkh":38}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"    public static Event[] getSampleEvents() {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"        return new Event[]{","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"            new Event(new Name(\"Alex Yeoh\"), \"2024-02-01\", \"2024-02-02\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"            new Event(new Name(\"Bernice Yu\"), \"2024-02-01\", \"2024-02-02\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"            new Event(new Name(\"Charlotte Oliveiro\"), \"2024-02-01\", \"2024-02-02\")","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"        for (Event sampleEvent : getSampleEvents()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"            sampleAb.addEvent(sampleEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"JrmCkh":1,"anthonynmh":8,"-":34}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"    private final String name;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"    private final String startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"    private final String endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name, @JsonProperty(\"startTime\") String startTime,","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"                            @JsonProperty(\"endTime\") String endTime) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"        startTime \u003d source.getParsedStartTime();","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"        endTime \u003d source.getParsedEndTime();","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"anthonynmh"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"anthonynmh"},"content":"        final String modelStartTime \u003d startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"anthonynmh"},"content":"        final String modelEndTime \u003d endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"anthonynmh"},"content":"        return new Event(modelName, modelStartTime, modelEndTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JrmCkh":7,"anthonynmh":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"    private final String remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"                             @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"                             @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"JrmCkh"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"JrmCkh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"JrmCkh"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"JrmCkh"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags);","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JrmCkh":15,"-":103}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"        Optional\u003cJsonSerializableScheduler\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"                filePath, JsonSerializableScheduler.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableScheduler(addressBook), filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JrmCkh":3,"-":77}},{"path":"src/main/java/seedu/address/storage/JsonSerializableScheduler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"class JsonSerializableScheduler {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate event(s).\";","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    public JsonSerializableScheduler(@JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"        this.events.addAll(events);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"    public JsonSerializableScheduler(ReadOnlyAddressBook source) {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"anthonynmh"},"content":"            if (addressBook.hasEvent(event)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"anthonynmh"},"content":"            addressBook.addEvent(event);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JrmCkh":3,"anthonynmh":9,"-":48}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":" * A UI component that displays information of a {@code Event}.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"    public final Event event;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"    private Label name;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"    private Label id;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"    private Label startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"    private Label endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"     * Creates a {@code EventCode} with the given {@code Event} and index to display.","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"        name.setText(event.getName().fullName);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"        startTime.setText(event.getParsedStartTime());","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"        endTime.setText(event.getParsedEndTime());","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"anthonynmh"},"content":"        // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"anthonynmh"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"anthonynmh"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"anthonynmh"},"content":"            \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JrmCkh":6,"anthonynmh":53}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":" * Panel containing the list of events.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListPanel.EventListViewCell());","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"anthonynmh"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"                setText(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JrmCkh":5,"anthonynmh":44}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103-w17-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"anthonynmh":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"anthonynmh"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"anthonynmh"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"anthonynmh"},"content":"    public EventListPanel getEventListPanel() {","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"anthonynmh"},"content":"        return eventListPanel;","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"anthonynmh":6,"-":190}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"      \u003cLabel fx:id\u003d\"startTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$startTime\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"      \u003cLabel fx:id\u003d\"endTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$endTime\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JrmCkh":10,"-":27}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"    \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JrmCkh":1,"-":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"                \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"                \u003cVBox fx:id\u003d\"eventList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"                    \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"JrmCkh":9,"-":49}},{"path":"src/test/java/ezschedule/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"public class AppParametersTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":58}},{"path":"src/test/java/ezschedule/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"public class ConfigTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":27}},{"path":"src/test/java/ezschedule/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"public class VersionTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        // boundary at 0","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"        // normal values","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        // big numbers","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"        Version one;","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"        Version another;","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests equality","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests different patch","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests different minor","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests different major","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"lhy-hoyin"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"lhy-hoyin"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"lhy-hoyin"},"content":"        Version one;","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"lhy-hoyin"},"content":"        Version another;","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"lhy-hoyin"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"lhy-hoyin"},"content":"                                              int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":135}},{"path":"src/test/java/ezschedule/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core.index;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"public class IndexTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"        // invalid index","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"        // check equality using the same base","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        // invalid index","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        // check equality using the same base","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    public void equals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":60}},{"path":"src/test/java/ezschedule/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"public class AppUtilTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":36}},{"path":"src/test/java/ezschedule/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"        // no arguments","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"        // any non-empty argument list","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"        // null reference","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"        // null reference","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"        // empty list","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"        // list with all non-null elements","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":108}},{"path":"src/test/java/ezschedule/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Config;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    @TempDir","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    public Path tempDir;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"        return config;","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"        //Try saving when the file exists","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"lhy-hoyin"},"content":"                ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"lhy-hoyin"},"content":"                : null;","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":116}},{"path":"src/test/java/ezschedule/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"public class FileUtilTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    public void isValidPath() {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"        // valid path","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"        // invalid path","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":23}},{"path":"src/test/java/ezschedule/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"public class StringUtilTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"        // EP: empty strings","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"        // EP: not a number","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"        // EP: zero","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        // EP: zero as prefix","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        // EP: signed numbers","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        // EP: numbers with white space","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    /*","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"                -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"                -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"    /*","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"     *   - any word","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"     *   - empty string","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"     *   - one word","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"     *   - multiple words","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"     *   - last word in sentence","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"     *   - middle word in sentence","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"     *   - matches multiple words","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"        // Empty sentence","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"lhy-hoyin"},"content":"        // Matches a partial word only","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"lhy-hoyin"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"lhy-hoyin"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"lhy-hoyin"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"lhy-hoyin"},"content":"    /*","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"lhy-hoyin"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"lhy-hoyin"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"lhy-hoyin"},"content":"                .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"lhy-hoyin"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":143}},{"path":"src/test/java/ezschedule/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.testutil;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"public class Assert {","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"            Executable executable) {","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":34}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"JrmCkh":2,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"import seedu.address.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"anthonynmh"},"content":"    */","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"anthonynmh"},"content":"        /*","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"anthonynmh"},"content":"        */","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"anthonynmh"},"content":"        /*","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"anthonynmh"},"content":"        */","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"anthonynmh":7,"-":172}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"anthonynmh"},"content":"    */","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"anthonynmh":2,"-":82}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"JrmCkh":1,"-":100}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"JrmCkh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"JrmCkh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"JrmCkh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"JrmCkh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"JrmCkh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, invalidTags);","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JrmCkh":14,"-":100}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"        JsonSerializableScheduler dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"                JsonSerializableScheduler.class).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"        JsonSerializableScheduler dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"                JsonSerializableScheduler.class).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"        JsonSerializableScheduler dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"                JsonSerializableScheduler.class).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableScheduler.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JrmCkh":7,"-":40}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"    public static final String DEFAULT_REMARK \u003d \"She likes aardvarks.\";","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    private Remark remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"JrmCkh"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"JrmCkh"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"JrmCkh"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"JrmCkh"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"JrmCkh"},"content":"    public Person build() {","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"JrmCkh"},"content":"        return new Person(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"JrmCkh":14,"-":94}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"            .withPhone(\"94351253\").withRemark(\"She likes aardvarks.\")","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withRemark(\"He can\u0027t take beer!\")","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"JrmCkh":2,"-":74}}]
