[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"# EZ-Schedule","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-W17-3/tp/workflows/Java%20CI/badge.svg)](","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"https://github.com/AY2223S2-CS2103-W17-3/tp/actions)","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"* EZ-Schedule is a desktop application for managing and scheduling of events,","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"  optimized for use via a Command Line Interface (CLI)","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"  while still providing an easy way to visualize all events through a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"* For documentation of this project, you may refer to our [website](https://ay2223s2-cs2103-w17-3.github.io/tp/)","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"## Acknowledgement","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"This project is based on the Scheduler-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"JrmCkh":1,"lhy-hoyin":9,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"mainClassName \u003d \u0027ezschedule.Main\u0027","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"run {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"    dependsOn test","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"    dependsOn checkstyleMain","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"    dependsOn checkstyleTest","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"    archiveFileName \u003d \u0027Ez-Schedule.jar\u0027","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"    doLast {","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"        println \"Generated *.jar can be found at /build/libs/\"","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lhy-hoyin":12,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"You can reach us over [here](https://github.com/AY2223S2-CS2103-W17-3/tp/discussions).","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"## Project Team","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"BigheartSmallbrain"},"content":"### Ho Yin","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"BigheartSmallbrain"},"content":"\u003cimg src\u003d\"images/lhy-hoyin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"BigheartSmallbrain"},"content":"[[github](https://github.com/lhy-hoyin)]","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"BigheartSmallbrain"},"content":"[[portfolio](team/lhy-hoyin.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"* Role: Team Lead","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"* Responsibilities: Code Integration","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"BigheartSmallbrain"},"content":"### Jeremy","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"BigheartSmallbrain"},"content":"\u003cimg src\u003d\"images/jrmckh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"BigheartSmallbrain"},"content":"[[github](http://github.com/JrmCkh)]","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"[[portfolio](team/jrmckh.md)]","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"* Role: Team Assistant","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"BigheartSmallbrain"},"content":"### Yu Quan","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"BigheartSmallbrain"},"content":"\u003cimg src\u003d\"images/bigheartsmallbrain.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"BigheartSmallbrain"},"content":"[[github](http://github.com/BigheartSmallbrain)]","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"BigheartSmallbrain"},"content":"[[portfolio](team/bigheartsmallbrain.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"BigheartSmallbrain"},"content":"### Anthony","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"BigheartSmallbrain"},"content":"\u003cimg src\u003d\"images/anthonynmh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"BigheartSmallbrain"},"content":"[[github](http://github.com/anthonynmh)]","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"BigheartSmallbrain"},"content":"[[portfolio](team/anthonynmh.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JrmCkh":1,"BigheartSmallbrain":15,"lhy-hoyin":5,"-":29}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S2-CS2103-W17-3/tp/blob/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103-W17-3/tp/blob/master/src/main/java/ezschedule/Main.java)","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"and [`MainApp`](https://github.com/AY2223S2-CS2103-W17-3/tp/blob/master/src/main/java/ezschedule/MainApp.java).","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":" It is responsible for,","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103-W17-3/tp/blob/master/src/main/java/ezschedule/ui/Ui.java)","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"[//]: \u003c\u003e (TODO: UiClassDiagram.png need to be updated; \"PersonListPanel\"--\u003e\"EventListPanel\")","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `EventListPanel`, ","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"`StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"The `UI` component uses the JavaFx UI framework. ","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. ","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"For example, the layout of the [`MainWindow`](https://github.com/AY2223S2-CS2103-W17-3/tp/blob/master/src/main/java/ezschedule/ui/MainWindow.java) ","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103-W17-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"* depends on some classes in the `Model` component, as it displays `Event` object residing in the `Model`.","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103-W17-3/tp/blob/master/src/main/java/ezschedule/logic/Logic.java)","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"1. When `Logic` is called upon to execute a command, it uses the `SchedulerParser` class to parse the user command.","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"JrmCkh"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a event).","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"lhy-hoyin"},"content":"* When called upon to parse a user command, the `SchedulerParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"lhy-hoyin"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103-W17-3/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"JrmCkh"},"content":"* stores the scheduler data i.e., all `Event` objects (which are contained in a `uniqueEventList` object).","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"lhy-hoyin"},"content":"* stores the currently \u0027selected\u0027 `Event` objects (e.g., results of a search query) as a separate _filtered_ list ","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"lhy-hoyin"},"content":"  which is exposed to outsiders as an unmodifiable `ObservableList\u003cEvent\u003e` that can be \u0027observed\u0027 e.g. the UI can be ","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"lhy-hoyin"},"content":"  bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"lhy-hoyin"},"content":"* stores a `UserPref` object that represents the user’s preferences. ","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"lhy-hoyin"},"content":"  This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"lhy-hoyin"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, ","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"lhy-hoyin"},"content":"  they should make sense on their own without depending on other components)","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"JrmCkh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `Scheduler`, which `Event` references. This allows `Scheduler` to only require one `Tag` object per unique tag, instead of each `Event` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"lhy-hoyin"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103-W17-3/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"JrmCkh"},"content":"* can save both scheduler data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2023-03-20"},{"lineNumber":156,"author":{"gitId":"lhy-hoyin"},"content":"* inherits from both `SchedulerStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the ","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"lhy-hoyin"},"content":"  functionality of only one is needed).","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"lhy-hoyin"},"content":"Classes used by multiple components are in the `ezschedule.commons` package.","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"lhy-hoyin"},"content":"### Sort events feature","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"lhy-hoyin"},"content":"Sort all events in the scheduler in chronological order by entering `sort` as a command.","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"lhy-hoyin"},"content":"A chronological order can help user to prioritise and focus on the more urgent events.","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"lhy-hoyin"},"content":"#### How it is currently implemented","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"lhy-hoyin"},"content":"A `SortCommand` was added to allow user to initiate the sorting of events.","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"lhy-hoyin"},"content":"The sorting is handled by `FXCollections#sort()`.","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"lhy-hoyin"},"content":"The method calls by `SortCommand` is similar to the other `XXXCommand`.","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"lhy-hoyin"},"content":"#### Proposed enhancement","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"lhy-hoyin"},"content":"Remove `SortCommand`. Instead, automatically sort the events whenever an event is changed","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"lhy-hoyin"},"content":"(for example: added, deleted, edited).","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"lhy-hoyin"},"content":"##### Pros over existing implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"lhy-hoyin"},"content":"- Provide convenience for user","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"lhy-hoyin"},"content":"- Allow smoother implementation for showing the next arbitrary number of upcoming events","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"lhy-hoyin"},"content":"##### Cons over existing implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"lhy-hoyin"},"content":"- Repeated sorting of events whenever events are changed might introduce lag,","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"lhy-hoyin"},"content":"  especially if there is a large number of events","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"lhy-hoyin"},"content":"    - Possible to resolve via threads","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"lhy-hoyin"},"content":"- Implementation may be complicated if completed/old events are still in the schedule","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"lhy-hoyin"},"content":"After reviewing the following pros and cons, we have decided that the pros outweighs the cons,","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"lhy-hoyin"},"content":"and shall implement the enhancement in the future.","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"lhy-hoyin"},"content":"#### Alternatives Considered","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"lhy-hoyin"},"content":"Implement our own insertion sort to use when adding events.\\","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"lhy-hoyin"},"content":"This ensures the chronological order of the events is always correct when adding.","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"lhy-hoyin"},"content":"However, other ways of managing the chronological order is required in case of an event being edited.","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"JrmCkh"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `Scheduler` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-03-20"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"JrmCkh"},"content":"* `VersionedAddressBook#commit()` — Saves the current scheduler state in its history.","lastModifiedDate":"2023-03-20"},{"lineNumber":215,"author":{"gitId":"JrmCkh"},"content":"* `VersionedAddressBook#undo()` — Restores the previous scheduler state from its history.","lastModifiedDate":"2023-03-20"},{"lineNumber":216,"author":{"gitId":"JrmCkh"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone scheduler state from its history.","lastModifiedDate":"2023-03-20"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"JrmCkh"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial scheduler state, and the `currentStatePointer` pointing to that single scheduler state.","lastModifiedDate":"2023-03-20"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"JrmCkh"},"content":"Step 2. The user executes `delete 5` command to delete the 5th event in the scheduler. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the scheduler after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted scheduler state.","lastModifiedDate":"2023-03-20"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"JrmCkh"},"content":"Step 3. The user executes `add n/David …​` to add a new event. The `add` command also calls `Model#commitAddressBook()`, causing another modified scheduler state to be saved into the `addressBookStateList`.","lastModifiedDate":"2023-03-20"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"JrmCkh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the scheduler state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-03-20"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"JrmCkh"},"content":"Step 4. The user now decides that adding the event was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous scheduler state, and restores the scheduler to that state.","lastModifiedDate":"2023-03-20"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"JrmCkh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial Scheduler state, then there are no previous Scheduler states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-03-20"},{"lineNumber":243,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"JrmCkh"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the scheduler to that state.","lastModifiedDate":"2023-03-20"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"JrmCkh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest scheduler state, then there are no undone Scheduler states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-03-20"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"JrmCkh"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the scheduler, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2023-03-20"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"JrmCkh"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all scheduler states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-03-20"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"JrmCkh"},"content":"* **Alternative 1 (current choice):** Saves the entire scheduler.","lastModifiedDate":"2023-03-20"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"JrmCkh"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the event being deleted).","lastModifiedDate":"2023-03-20"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"JrmCkh"},"content":"### \\[Proposed\\] Calendar view feature","lastModifiedDate":"2023-04-03"},{"lineNumber":293,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":294,"author":{"gitId":"JrmCkh"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":295,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":296,"author":{"gitId":"JrmCkh"},"content":"The proposed calendar view user interface implements the following operations:","lastModifiedDate":"2023-04-03"},{"lineNumber":297,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":298,"author":{"gitId":"JrmCkh"},"content":"1. Provides an overview of all saved events in the scheduler to the user","lastModifiedDate":"2023-03-23"},{"lineNumber":299,"author":{"gitId":"JrmCkh"},"content":"2. onClick() of calendar date (boxes) - List all the saved events the user have for that day","lastModifiedDate":"2023-04-03"},{"lineNumber":300,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":301,"author":{"gitId":"JrmCkh"},"content":"The feature is going to be implemented by","lastModifiedDate":"2023-03-23"},{"lineNumber":302,"author":{"gitId":"JrmCkh"},"content":"1. Creating the GUI of a calendar via JavaFX (Calendar.fxml and CalendarBox.fxml)","lastModifiedDate":"2023-04-03"},{"lineNumber":303,"author":{"gitId":"JrmCkh"},"content":"2. When the program starts, it first fetches the existing events","lastModifiedDate":"2023-03-23"},{"lineNumber":304,"author":{"gitId":"JrmCkh"},"content":"3. The calendar will next be \"drawn\" with the events for the current month","lastModifiedDate":"2023-04-03"},{"lineNumber":305,"author":{"gitId":"JrmCkh"},"content":"4. The calendar includes button that allow users to go to either the next or previous month, each time the button is called, the calendar is \"redrawn\" with that particular month\u0027s events","lastModifiedDate":"2023-04-03"},{"lineNumber":306,"author":{"gitId":"JrmCkh"},"content":"5. When a user were to click a date in the calendar (CalendarBox.fxml), it will list all existing events of that day to the user","lastModifiedDate":"2023-04-03"},{"lineNumber":307,"author":{"gitId":"JrmCkh"},"content":"6. When a user were to add, edit or update an event, the calendar will be updated as well","lastModifiedDate":"2023-04-03"},{"lineNumber":308,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":309,"author":{"gitId":"JrmCkh"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-23"},{"lineNumber":310,"author":{"gitId":"JrmCkh"},"content":"* **Alternative 1 (current choice):** Update the Calendar GUI whenever add/edit/delete an event.","lastModifiedDate":"2023-04-03"},{"lineNumber":311,"author":{"gitId":"JrmCkh"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2023-03-23"},{"lineNumber":312,"author":{"gitId":"JrmCkh"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2023-03-23"},{"lineNumber":313,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":314,"author":{"gitId":"JrmCkh"},"content":"* **Alternative 2:** Update the Calendar GUI on if the month of the event is what the Calendar is current showing","lastModifiedDate":"2023-04-03"},{"lineNumber":315,"author":{"gitId":"JrmCkh"},"content":"  itself.","lastModifiedDate":"2023-03-23"},{"lineNumber":316,"author":{"gitId":"JrmCkh"},"content":"    * Pros: Will have better performance (e.g. for `add event`, no need to update the GUI if it is not what I am currently showing, if I were to click next).","lastModifiedDate":"2023-03-23"},{"lineNumber":317,"author":{"gitId":"JrmCkh"},"content":"    * Cons: Implementation will become much more complex.","lastModifiedDate":"2023-03-23"},{"lineNumber":318,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":319,"author":{"gitId":"JrmCkh"},"content":"#### Additional Feature","lastModifiedDate":"2023-03-23"},{"lineNumber":320,"author":{"gitId":"JrmCkh"},"content":"1. onDoubleClick() of a calendar date (boxes) - Shows a popup GUI of user schedule, similar to that of a timetable for either that day or week","lastModifiedDate":"2023-04-03"},{"lineNumber":321,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":326,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":327,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":329,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"anthonynmh"},"content":"* has a need to manage a significant number of events","lastModifiedDate":"2023-02-25"},{"lineNumber":341,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"anthonynmh"},"content":"* prefers visual representation of output","lastModifiedDate":"2023-02-25"},{"lineNumber":343,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"anthonynmh"},"content":"* can type fast","lastModifiedDate":"2023-02-25"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"anthonynmh"},"content":"**Value proposition**: manage events at high-level, provides faster event analysis with graphical outputs.","lastModifiedDate":"2023-02-25"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"| Priority | As a …​          | I want to …​                               | So that I can…​                                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"anthonynmh"},"content":"|----------|------------------|--------------------------------------------|-------------------------------------------------------------------------|","lastModifiedDate":"2023-02-26"},{"lineNumber":355,"author":{"gitId":"-"},"content":"| `* * *`  | new user         | see usage instructions                     | refer to instructions when I forget how to use the App                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"anthonynmh"},"content":"| `* * *`  | user             | easily save events after closing the app   | generate it again when I start the app                                  |","lastModifiedDate":"2023-02-26"},{"lineNumber":357,"author":{"gitId":"JrmCkh"},"content":"| `* * *`  | user             | add a event\u0027s schedule into the app       | see their schedules                                                     |","lastModifiedDate":"2023-03-20"},{"lineNumber":358,"author":{"gitId":"anthonynmh"},"content":"| `* * *`  | user             | delete an event from the app               | remove events that are no longer scheduled                              |","lastModifiedDate":"2023-02-26"},{"lineNumber":359,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | forgetful user   | find my next event                         | see the upcoming event without having to check every events myself      |","lastModifiedDate":"2023-02-25"},{"lineNumber":360,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | user             | undo accidental deletions                  | easily restore accidents in scheduling                                  |","lastModifiedDate":"2023-02-25"},{"lineNumber":361,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | teacher          | find a free timeslot in my schedule        | schedule a timeslot for student consultations                           |","lastModifiedDate":"2023-02-25"},{"lineNumber":362,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | user             | find an event by name                      | locate details of events without having to go through the entire list   |","lastModifiedDate":"2023-02-25"},{"lineNumber":363,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | user             | edit my schedule                           | make last minute changes to events                                      |","lastModifiedDate":"2023-02-25"},{"lineNumber":364,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | user             | be able to schedule many events            | schedule as many events as I want                                       |","lastModifiedDate":"2023-02-25"},{"lineNumber":365,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | user             | be able to have more than one scheduler    | generate different schedules for differnt events                        |","lastModifiedDate":"2023-02-26"},{"lineNumber":366,"author":{"gitId":"anthonynmh"},"content":"| `*`      | unmotivated user | have motivational quotes                   | feel motivated in my day                                                |","lastModifiedDate":"2023-02-25"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"anthonynmh"},"content":"(For all use cases below, the **System** is the `EZ-Schedule` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-02-25"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"anthonynmh"},"content":"**Use case: Add an event**","lastModifiedDate":"2023-02-25"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"anthonynmh"},"content":"1. User requests to add an event","lastModifiedDate":"2023-02-25"},{"lineNumber":379,"author":{"gitId":"anthonynmh"},"content":"2. System adds the event","lastModifiedDate":"2023-02-25"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"anthonynmh"},"content":"* 1a. The event already exist.","lastModifiedDate":"2023-02-25"},{"lineNumber":386,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":387,"author":{"gitId":"anthonynmh"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2023-02-25"},{"lineNumber":388,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":389,"author":{"gitId":"anthonynmh"},"content":"      Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":390,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":391,"author":{"gitId":"anthonynmh"},"content":"* 2a. The given event format invalid.","lastModifiedDate":"2023-02-25"},{"lineNumber":392,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":393,"author":{"gitId":"anthonynmh"},"content":"    * 2a1. System shows an error message.","lastModifiedDate":"2023-02-25"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"anthonynmh"},"content":"**Use case: Delete an event**","lastModifiedDate":"2023-02-25"},{"lineNumber":398,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":399,"author":{"gitId":"anthonynmh"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":400,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":401,"author":{"gitId":"anthonynmh"},"content":"1.  User requests to list events","lastModifiedDate":"2023-02-25"},{"lineNumber":402,"author":{"gitId":"anthonynmh"},"content":"2.  System shows a list of events","lastModifiedDate":"2023-02-25"},{"lineNumber":403,"author":{"gitId":"anthonynmh"},"content":"3.  User requests to delete a specific event in the list","lastModifiedDate":"2023-02-25"},{"lineNumber":404,"author":{"gitId":"anthonynmh"},"content":"4.  System deletes the event","lastModifiedDate":"2023-02-25"},{"lineNumber":405,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":406,"author":{"gitId":"anthonynmh"},"content":"    Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":407,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":408,"author":{"gitId":"anthonynmh"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"anthonynmh"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-25"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":412,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":414,"author":{"gitId":"anthonynmh"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2023-02-25"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":416,"author":{"gitId":"anthonynmh"},"content":"    * 2a1. System shows an error message.","lastModifiedDate":"2023-02-25"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"anthonynmh"},"content":"**Use case: Undo a delete**","lastModifiedDate":"2023-02-25"},{"lineNumber":421,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":422,"author":{"gitId":"anthonynmh"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":423,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":424,"author":{"gitId":"anthonynmh"},"content":"1. User requests to undo the recent delete","lastModifiedDate":"2023-02-25"},{"lineNumber":425,"author":{"gitId":"anthonynmh"},"content":"2. System restores the most recent delete","lastModifiedDate":"2023-02-25"},{"lineNumber":426,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":427,"author":{"gitId":"anthonynmh"},"content":"    Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":428,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":429,"author":{"gitId":"anthonynmh"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":430,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":431,"author":{"gitId":"anthonynmh"},"content":"* 1a. New event added duplicate of recent deleted event.","lastModifiedDate":"2023-02-25"},{"lineNumber":432,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":433,"author":{"gitId":"anthonynmh"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2023-02-25"},{"lineNumber":434,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":435,"author":{"gitId":"anthonynmh"},"content":"      Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":436,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":437,"author":{"gitId":"anthonynmh"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-02-25"},{"lineNumber":438,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":439,"author":{"gitId":"anthonynmh"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":440,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":441,"author":{"gitId":"anthonynmh"},"content":"**Use case: Find event by name**","lastModifiedDate":"2023-02-25"},{"lineNumber":442,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":443,"author":{"gitId":"anthonynmh"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":444,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":445,"author":{"gitId":"anthonynmh"},"content":"1. User requests to find an event by name","lastModifiedDate":"2023-02-25"},{"lineNumber":446,"author":{"gitId":"anthonynmh"},"content":"2. System shows a list of events matching the name","lastModifiedDate":"2023-02-25"},{"lineNumber":447,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":448,"author":{"gitId":"anthonynmh"},"content":"   Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":449,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":450,"author":{"gitId":"anthonynmh"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":451,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":452,"author":{"gitId":"anthonynmh"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-25"},{"lineNumber":453,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":454,"author":{"gitId":"anthonynmh"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":455,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":456,"author":{"gitId":"anthonynmh"},"content":"**Use case: Find next event**","lastModifiedDate":"2023-02-25"},{"lineNumber":457,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":458,"author":{"gitId":"anthonynmh"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":459,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":460,"author":{"gitId":"anthonynmh"},"content":"1. User requests for next upcoming event","lastModifiedDate":"2023-02-25"},{"lineNumber":461,"author":{"gitId":"anthonynmh"},"content":"2. System shows the next upcoming event","lastModifiedDate":"2023-02-25"},{"lineNumber":462,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":463,"author":{"gitId":"anthonynmh"},"content":"   Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":464,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":465,"author":{"gitId":"anthonynmh"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":466,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":467,"author":{"gitId":"anthonynmh"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-25"},{"lineNumber":468,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":469,"author":{"gitId":"anthonynmh"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":470,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":471,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"anthonynmh"},"content":"2. Should be able to hold up to 1000 events without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-25"},{"lineNumber":477,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"anthonynmh"},"content":"4. A user with colour blindness may require a high-contrast setting for graphical outputs.","lastModifiedDate":"2023-02-25"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"anthonynmh"},"content":"* **Event**: A task with a starting time and an ending time","lastModifiedDate":"2023-02-26"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"BigheartSmallbrain"},"content":"   1. Double-click the jar file Expected: Shows the GUI with 3 components (The window size may not be","lastModifiedDate":"2023-03-24"},{"lineNumber":506,"author":{"gitId":"BigheartSmallbrain"},"content":"      optimum):","lastModifiedDate":"2023-03-24"},{"lineNumber":507,"author":{"gitId":"BigheartSmallbrain"},"content":"      1. A calendar of the month of present time ","lastModifiedDate":"2023-03-24"},{"lineNumber":508,"author":{"gitId":"BigheartSmallbrain"},"content":"      2. An input bar for user commands","lastModifiedDate":"2023-03-24"},{"lineNumber":509,"author":{"gitId":"BigheartSmallbrain"},"content":"      3. A container showing the next upcoming event.","lastModifiedDate":"2023-03-24"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"BigheartSmallbrain"},"content":"2. Saving window preferences","lastModifiedDate":"2023-03-24"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"JrmCkh"},"content":"### Deleting a event","lastModifiedDate":"2023-03-20"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"BigheartSmallbrain"},"content":"1. Deleting a event while all events are shown","lastModifiedDate":"2023-03-24"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"BigheartSmallbrain"},"content":"   1. Prerequisites: List all events using the `list` command. Multiple events in the list.","lastModifiedDate":"2023-03-24"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"BigheartSmallbrain"},"content":"      Expected: First event is deleted from the list. Details of the deleted event shown in the status message. ","lastModifiedDate":"2023-03-24"},{"lineNumber":528,"author":{"gitId":"BigheartSmallbrain"},"content":"      Timestamp in the status bar is updated.","lastModifiedDate":"2023-03-24"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"JrmCkh"},"content":"      Expected: No event is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-20"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JrmCkh":46,"BigheartSmallbrain":10,"lhy-hoyin":74,"anthonynmh":97,"-":317}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"   1. Run the `ezschedule.Main` and try a few commands.","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [Scheduler’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"JrmCkh":1,"lhy-hoyin":1,"-":53}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"   e.g. `ezschedule.commons.StringUtilTest`","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"   e.g. `ezschedule.storage.StorageManagerTest`","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"   e.g. `ezschedule.logic.LogicManagerTest`","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"lhy-hoyin":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"_Ez-Schedule_ is a **desktop application for managing and scheduling of events, optimized for use via a Command Line","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"Interface** (CLI) while still providing an easy way to visualize all events through a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"_Ez-Schedule_ will benefit a fast typist who needs to plan and track upcoming events.","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"\u003ch1 id\u003d\"index\"\u003eIndex\u003c/h1\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"-------------------------","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"* [Features](#features)","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"  * [Command Summary](#command-summary)","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    * [Add new event](#add) : `add` command","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    * [Repeat existing event](#recur) : `recur` command","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"    * [Edit event](#edit) : `edit` command","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    * [Delete event](#delete) : `delete` command","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    * [List all events](#list) : `list` command","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    * [Retrieve next event](#next) : `next` command","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"    * [Locate events by keyword](#find) : `find` command","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"    * [Undo previous command](#undo) : `undo` command","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    * [View help](#help) : `help` command","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    * [Exit application](#exit) : `exit` command","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"  * [GUI](#gui)","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"    * [Command Box](#command-box)","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    * [Response Box](#response-box)","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    * [Event List](#event-list)","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    * [Upcoming Events](#upcoming)","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    * [Calendar](#calendar)","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"* [Limitations](#limitations)","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"* [FAQ](#faq)","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"\u003ch1 id\u003d\"quick-start\"\u003eQuick Start\u003c/h1\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"-------------------------------------","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"2. Download the latest `Ez-Schedule.jar` from [here](https://github.com/AY2223S2-CS2103-W17-3/tp/releases).","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your _Ez-Schedule_.","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"4. Open a command line terminal, `cd` into the folder you put the jar file in","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"5. Use the `java -jar Ez-Schedule.jar` command to run the application.","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"\u003ch1 id\u003d\"features\"\u003eFeatures\u003c/h1\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"-------------------------------","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"\u003ch2 id\u003d\"command-summary\"\u003eCommand Summary\u003c/h2\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"| Action | Command Format                                                    |","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"|:-------|:------------------------------------------------------------------|","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":" | Add    | `add n/\u003cevent\u003e d/\u003cdate\u003e s/\u003cstart time\u003e e/\u003cend time\u003e`              |","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"anthonynmh"},"content":"| Repeat | `recur \u003cindex\u003e d/\u003cend date\u003e every/\u003cRECUR FACTOR\u003e`                 |","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"| Edit   | `edit \u003cindex\u003e n/\u003cname\u003e d/\u003cdate\u003e s/\u003cstart time\u003e e/\u003cend time\u003e`      |","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"| Delete | `delete \u003cindex\u003e` or `delete \u003cindex index ... index\u003e`              |","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"| List   | `list`                                                            |","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"| Next   | `next` or `next \u003ccount\u003e`                                          |","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"| Find   | `find n/\u003cname\u003e d/\u003cdate\u003e`                                          |","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"anthonynmh"},"content":"| Undo   | `undo`                                                            |","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"| Help   | `help`                                                            |","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"| Exit   | `exit`                                                            |","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":":exclamation: **Date Format:** Dates should follow a `YYYY-MM-DD` format","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":":exclamation: **Time Format:** Time should be in 24-hour `HH:mm` format,","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"ranging from `00:00` to `23:59`. Leading zero are required. ","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"\u003ch3 id\u003d\"add\"\u003eAdd New Event\u003c/h3\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"Adds an event into the Scheduler.","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"Format: `add n/\u003cevent\u003e d/\u003cdate\u003e s/\u003cstart time\u003e e/\u003cend time\u003e`","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"Parameters:  ","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"`n/`: Name or description of event  ","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"`d/`: Date of the event  ","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"`s/`: Start time of the event  ","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"`e/`: End time of the event","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":":information_source: **Note:**  ","lastModifiedDate":"2023-04-03"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"Name/Description is alphanumeric only.  ","lastModifiedDate":"2023-04-03"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"Start time should come before end time.  ","lastModifiedDate":"2023-04-03"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"Adding of events that overlaps in time is not allowed.","lastModifiedDate":"2023-04-03"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"Example: `add n/booked tennis court d/2023-02-01 s/15:00 e/17:00`","lastModifiedDate":"2023-04-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"\u003ch3 id\u003d\"recur\"\u003eRepeat Existing Event\u003c/h3\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"anthonynmh"},"content":"Recurs an event from the Scheduler until an end date.","lastModifiedDate":"2023-03-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"anthonynmh"},"content":"Format: `recur \u003cindex\u003e d/\u003cend date\u003e every/\u003crecur factor\u003e`","lastModifiedDate":"2023-04-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"anthonynmh"},"content":"Parameters:  ","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"anthonynmh"},"content":"`d/`: Ending date of recurrence for the event in `YYYY-MM-DD` format  ","lastModifiedDate":"2023-04-03"},{"lineNumber":107,"author":{"gitId":"anthonynmh"},"content":"`every/`: Recur factor to recur the event, given by `day/week/month`","lastModifiedDate":"2023-04-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":":information_source: **Note:**  ","lastModifiedDate":"2023-04-03"},{"lineNumber":111,"author":{"gitId":"lhy-hoyin"},"content":"Event must first exist in the scheduler.  ","lastModifiedDate":"2023-04-03"},{"lineNumber":112,"author":{"gitId":"lhy-hoyin"},"content":"Recurring of events not existing in scheduler is not allowed.  ","lastModifiedDate":"2023-04-03"},{"lineNumber":113,"author":{"gitId":"lhy-hoyin"},"content":"End date should come after current event date.  ","lastModifiedDate":"2023-04-03"},{"lineNumber":114,"author":{"gitId":"lhy-hoyin"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":116,"author":{"gitId":"anthonynmh"},"content":"Example: `recur 1 d/2024-01-01 every/month`","lastModifiedDate":"2023-04-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"lhy-hoyin"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"JrmCkh"},"content":"\u003ch3 id\u003d\"edit\"\u003eEdit An Event\u003c/h3\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"JrmCkh"},"content":"Edits an event in the Scheduler.","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"JrmCkh"},"content":"Format: `edit \u003cindex\u003e n/\u003cevent\u003e d/\u003cdate\u003e s/\u003cstart time\u003e e/\u003cend time\u003e`","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"JrmCkh"},"content":"Parameters:  ","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"JrmCkh"},"content":"`n/`: Name or description of event  ","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"lhy-hoyin"},"content":"`d/`: Date of the event  ","lastModifiedDate":"2023-04-04"},{"lineNumber":130,"author":{"gitId":"lhy-hoyin"},"content":"`s/`: Start time of the event  ","lastModifiedDate":"2023-04-04"},{"lineNumber":131,"author":{"gitId":"lhy-hoyin"},"content":"`e/`: End time of the event","lastModifiedDate":"2023-04-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"lhy-hoyin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":134,"author":{"gitId":"lhy-hoyin"},"content":":information_source: **Note:** At least one field must be provided.","lastModifiedDate":"2023-04-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"JrmCkh"},"content":"Example: `edit 1 n/tennis` or `edit 3 d/2023-06-01 s/10:00`","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"JrmCkh"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"lhy-hoyin"},"content":"\u003ch3 id\u003d\"delete\"\u003eDelete Event\u003c/h3\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"JrmCkh"},"content":"Deletes the event(s) in the Scheduler.","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"JrmCkh"},"content":"Format: `delete \u003cindex\u003e` or `delete \u003cindex index ... index\u003e`","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"JrmCkh"},"content":"Example: `delete 1` or `delete 1 4 5`","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"lhy-hoyin"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"lhy-hoyin"},"content":"\u003ch3 id\u003d\"list\"\u003eListing All Events\u003c/h3\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"lhy-hoyin"},"content":"Displays all events currently saved in the Scheduler.","lastModifiedDate":"2023-02-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"lhy-hoyin"},"content":"Format: `list`","lastModifiedDate":"2023-02-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"lhy-hoyin"},"content":"Example: `list`","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"lhy-hoyin"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"lhy-hoyin"},"content":"\u003ch3 id\u003d\"next\"\u003eRetrieve next event\u003c/h3\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"lhy-hoyin"},"content":"Shows the next upcoming event(s).","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"lhy-hoyin"},"content":"Format: `next \u003ccount\u003e`","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"lhy-hoyin"},"content":"Parameter:  ","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"lhy-hoyin"},"content":"`\u003ccount\u003e`: Number of upcoming events to show.","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"lhy-hoyin"},"content":"           Optional - if not indicated, only the next one event is shown.","lastModifiedDate":"2023-04-03"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":174,"author":{"gitId":"lhy-hoyin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":175,"author":{"gitId":"lhy-hoyin"},"content":":information_source: **Note:** If count is larger than the number of existing events, then all events are shown.","lastModifiedDate":"2023-04-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"lhy-hoyin"},"content":"Example: `next` or `next 2`","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"lhy-hoyin"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"JrmCkh"},"content":"\u003ch3 id\u003d\"find\"\u003eLocate events by name and/or date\u003c/h3\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"lhy-hoyin"},"content":"Finds the Scheduler for the task, returns all events containing the relevant keyword.","lastModifiedDate":"2023-02-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"JrmCkh"},"content":"Format:`find n/\u003cname\u003e d/\u003cdate\u003e`","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"JrmCkh"},"content":"Parameters:  ","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"JrmCkh"},"content":"`n/`: Name or description of event  ","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"lhy-hoyin"},"content":"`d/`: Date of the event","lastModifiedDate":"2023-04-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"lhy-hoyin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":194,"author":{"gitId":"lhy-hoyin"},"content":":information_source: **Note:** At least one field must be provided.","lastModifiedDate":"2023-04-03"},{"lineNumber":195,"author":{"gitId":"lhy-hoyin"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"lhy-hoyin"},"content":"Example: `find n/tennis` or `find d/2023-03-01` or `find n/tennis d/2023-03-01`","lastModifiedDate":"2023-04-03"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":199,"author":{"gitId":"JrmCkh"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"anthonynmh"},"content":"\u003ch3 id\u003d\"undo\"\u003eUndo Previous Command\u003c/h3\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"lhy-hoyin"},"content":"Undo previous valid command.","lastModifiedDate":"2023-04-03"},{"lineNumber":205,"author":{"gitId":"lhy-hoyin"},"content":"(Only applicable for `add`, `delete`, `edit` and `recur` commands).","lastModifiedDate":"2023-04-03"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"anthonynmh"},"content":"Format: `undo`","lastModifiedDate":"2023-03-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":209,"author":{"gitId":"anthonynmh"},"content":"Example: `undo`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":211,"author":{"gitId":"lhy-hoyin"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"anthonynmh"},"content":"\u003ch3 id\u003d\"help\"\u003eView Help\u003c/h3\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":216,"author":{"gitId":"anthonynmh"},"content":"Provide a link to access this website.","lastModifiedDate":"2023-03-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":218,"author":{"gitId":"anthonynmh"},"content":"Format: `help`","lastModifiedDate":"2023-03-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":220,"author":{"gitId":"anthonynmh"},"content":"Example: `help`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":222,"author":{"gitId":"BigheartSmallbrain"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":225,"author":{"gitId":"lhy-hoyin"},"content":"\u003ch3 id\u003d\"exit\"\u003eExit Application\u003c/h3\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"lhy-hoyin"},"content":"Exits the application.","lastModifiedDate":"2023-02-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"lhy-hoyin"},"content":"Example: `exit`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"lhy-hoyin"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-31"},{"lineNumber":234,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":235,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":236,"author":{"gitId":"JrmCkh"},"content":"\u003ch2 id\u003d\"gui\"\u003eGUI\u003c/h2\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":237,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":238,"author":{"gitId":"JrmCkh"},"content":"\u003ch3 id\u003d\"command-box\"\u003eCommand Box\u003c/h3\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":239,"author":{"gitId":"lhy-hoyin"},"content":"![command-box.png](images/command-box.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":240,"author":{"gitId":"JrmCkh"},"content":"Allows you to type the command in the command box and press Enter to execute the command. ","lastModifiedDate":"2023-03-30"},{"lineNumber":241,"author":{"gitId":"JrmCkh"},"content":"E.g., typing help and pressing Enter will open the help window","lastModifiedDate":"2023-03-30"},{"lineNumber":242,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":243,"author":{"gitId":"lhy-hoyin"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-31"},{"lineNumber":244,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":246,"author":{"gitId":"lhy-hoyin"},"content":"\u003ch3 id\u003d\"response-box\"\u003eResponse Box\u003c/h3\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":247,"author":{"gitId":"lhy-hoyin"},"content":"![response-box.png](images/response-box.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":248,"author":{"gitId":"JrmCkh"},"content":"Displays to you the feedback of the command you typed into the command box.","lastModifiedDate":"2023-03-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"lhy-hoyin"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":253,"author":{"gitId":"lhy-hoyin"},"content":"\u003ch3 id\u003d\"event-list\"\u003eEvent List\u003c/h3\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":254,"author":{"gitId":"lhy-hoyin"},"content":"![event-list.png](images/event-list.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":255,"author":{"gitId":"JrmCkh"},"content":"Displays to you all the events that you have.","lastModifiedDate":"2023-03-30"},{"lineNumber":256,"author":{"gitId":"JrmCkh"},"content":"Use commands such as `list` and `find` to show you the events you have in your list.","lastModifiedDate":"2023-03-30"},{"lineNumber":257,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":258,"author":{"gitId":"lhy-hoyin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":259,"author":{"gitId":"lhy-hoyin"},"content":":information_source: **Note:**  ","lastModifiedDate":"2023-04-03"},{"lineNumber":260,"author":{"gitId":"lhy-hoyin"},"content":"Events that have past is marked with a completed label and check mark.   ","lastModifiedDate":"2023-04-03"},{"lineNumber":261,"author":{"gitId":"lhy-hoyin"},"content":"Events are orders in chronological order.  ","lastModifiedDate":"2023-04-03"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":264,"author":{"gitId":"lhy-hoyin"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-31"},{"lineNumber":265,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":266,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":267,"author":{"gitId":"lhy-hoyin"},"content":"\u003ch3 id\u003d\"upcoming\"\u003eUpcoming Events\u003c/h3\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":268,"author":{"gitId":"lhy-hoyin"},"content":"![upcoming-events.png](images/upcoming-events.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":269,"author":{"gitId":"JrmCkh"},"content":"Displays to you the upcoming events you have.","lastModifiedDate":"2023-03-30"},{"lineNumber":270,"author":{"gitId":"JrmCkh"},"content":"Use `next` command to change the number of upcoming events you want to show.","lastModifiedDate":"2023-03-30"},{"lineNumber":271,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":272,"author":{"gitId":"lhy-hoyin"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-31"},{"lineNumber":273,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":274,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":275,"author":{"gitId":"lhy-hoyin"},"content":"\u003ch3 id\u003d\"calendar\"\u003eCalendar\u003c/h3\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":276,"author":{"gitId":"lhy-hoyin"},"content":"![calendar.png](images/calendar.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":277,"author":{"gitId":"JrmCkh"},"content":"Provides an overview of all the event that you have.","lastModifiedDate":"2023-03-30"},{"lineNumber":278,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":279,"author":{"gitId":"JrmCkh"},"content":"Functionality:  ","lastModifiedDate":"2023-03-30"},{"lineNumber":280,"author":{"gitId":"lhy-hoyin"},"content":"1. Events that are added will be shown in its respective calendar box.","lastModifiedDate":"2023-03-31"},{"lineNumber":281,"author":{"gitId":"JrmCkh"},"content":"2. On click of `now` button will jump you directly back to the current date.","lastModifiedDate":"2023-03-30"},{"lineNumber":282,"author":{"gitId":"JrmCkh"},"content":"3. On click of any calendar date boxes that have events will display the events in event list.","lastModifiedDate":"2023-03-30"},{"lineNumber":283,"author":{"gitId":"JrmCkh"},"content":"4. `find` command will highlight the calendar boxes that has the event.","lastModifiedDate":"2023-03-30"},{"lineNumber":284,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":285,"author":{"gitId":"lhy-hoyin"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-31"},{"lineNumber":286,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":289,"author":{"gitId":"lhy-hoyin"},"content":"\u003ch1 id\u003d\"limitations\"\u003eLimitations\u003c/h1\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":290,"author":{"gitId":"lhy-hoyin"},"content":"-------------------------------------","lastModifiedDate":"2023-03-29"},{"lineNumber":291,"author":{"gitId":"lhy-hoyin"},"content":"* Currently, we only support same-day events.","lastModifiedDate":"2023-03-29"},{"lineNumber":292,"author":{"gitId":"lhy-hoyin"},"content":"  Events which stretches across multiple days are not supported.","lastModifiedDate":"2023-04-03"},{"lineNumber":293,"author":{"gitId":"lhy-hoyin"},"content":"* `undo` can only undo the most recent valid command.","lastModifiedDate":"2023-04-03"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":295,"author":{"gitId":"lhy-hoyin"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":298,"author":{"gitId":"lhy-hoyin"},"content":"\u003ch1 id\u003d\"faq\"\u003eFAQ :question:\u003c/h1\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":299,"author":{"gitId":"lhy-hoyin"},"content":"---------------------","lastModifiedDate":"2023-03-29"},{"lineNumber":300,"author":{"gitId":"lhy-hoyin"},"content":"**Q:** On a scale of 1 to 10, how awesome is this product?  ","lastModifiedDate":"2023-02-24"},{"lineNumber":301,"author":{"gitId":"lhy-hoyin"},"content":"**A:** 10 :v:","lastModifiedDate":"2023-04-04"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"lhy-hoyin"},"content":"**Q:** What is one example of someone who would use this?  ","lastModifiedDate":"2023-04-03"},{"lineNumber":304,"author":{"gitId":"lhy-hoyin"},"content":"**A:** A secretary who needs to keep track the boss\u0027s meetings,","lastModifiedDate":"2023-04-03"},{"lineNumber":305,"author":{"gitId":"lhy-hoyin"},"content":"and inform the boss of what the next meeting is for.","lastModifiedDate":"2023-04-03"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":307,"author":{"gitId":"lhy-hoyin"},"content":"[[Back to top](#index)]","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"JrmCkh":48,"BigheartSmallbrain":1,"lhy-hoyin":145,"anthonynmh":17,"-":96}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"Scheduler *-right-\u003e \"1\" uniqueEventList","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"Scheduler *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"UniqueTagList -[hidden]down- uniqueEventList","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"UniqueTagList -[hidden]down- uniqueEventList","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"uniqueEventList -right-\u003e Event","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"Event -up-\u003e \"*\" Tag","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"Event *--\u003e Name","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"Event *--\u003e Phone","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"Event *--\u003e Email","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"Event *--\u003e Address","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"JrmCkh":10,"-":11}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"if () then ([command commits Scheduler])","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"    :Save Scheduler to","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    addressBookStateList;","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"JrmCkh":2,"-":13}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"Class Scheduler","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"Class uniqueEventList","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"Class Event","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"Scheduler .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"ModelManager -left-\u003e \"1\" Scheduler","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"Scheduler *--\u003e \"1\" uniqueEventList","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"uniqueEventList --\u003e \"~* all\" Event","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"Event *--\u003e Name","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"Event *--\u003e Phone","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"Event *--\u003e Email","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"Event *--\u003e Address","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"Event *--\u003e \"*\" Tag","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"ModelManager --\u003e\"~* filtered\" Event","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"JrmCkh":13,"-":37}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"package \"Scheduler Storage\" #F4F6F6{","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"JrmCkh":1,"-":42}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: EZ-Schedule","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-W17-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103-W17-3/tp/actions)","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103-W17-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103-W17-3/tp)","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"![Ui.png](images%2FUi.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"**_Ez-Schedule_ is a desktop application for managing and scheduling of events.**","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"While it has a GUI, majority of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"* If you are interested in using Scheduler, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"* If you are interested about developing Scheduler, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"* Libraries used:","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"  [JavaFX](https://openjfx.io/),","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"  [Jackson](https://github.com/FasterXML/jackson),","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"  [JUnit5](https://github.com/junit-team/junit5).","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"JrmCkh":3,"lhy-hoyin":6,"-":14}},{"path":"docs/team/anthonynmh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"layout: page","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"title: Anthony\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"### Project: EZ-Schedule","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"EZ-Schedule is an application that allows for a high-level overview of all events for a particular administrator.","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"Examples:","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"- company manager - employee schedules","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"- badminton court manager - badminton court bookings","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"- teacher - students","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"GUI interactivity may be added in the future.","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"It is written in Java.","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"### Summary of contributions","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"* **New Feature**: to be added","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"* **Code contributed**: [Link to code contributions -- to be added]()","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"* **Project management**:","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"    * to be added","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"    * to be added","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"    * User Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"        * Updated the feature list for v1.2","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"        * Updated the command summary for v1.2","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"        * Updated the user stories for v1.2","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"        * Updated the use cases for v1.2","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"* **Community**:","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"    * to be added","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"* **Tools**:","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"    * to be added","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"anthonynmh":46}},{"path":"docs/team/bigheartsmallbrain.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BigheartSmallbrain"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"BigheartSmallbrain"},"content":"layout: page","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"BigheartSmallbrain"},"content":"title: Zhang Yuquan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"BigheartSmallbrain"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"BigheartSmallbrain"},"content":"### Project: Ez-Schedule","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"BigheartSmallbrain"},"content":"EZ-Schedule is a desktop application used for managing and scheduling of events. The user interacts with it using a","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"BigheartSmallbrain"},"content":"Command Line Interface (CLI), and it has a Graphical User Interface (GUI) created with JavaFX. It is written in Java,","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"BigheartSmallbrain"},"content":"and has about ***to be added soon*** kLoC.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"BigheartSmallbrain"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Code contributed**: [To be added soon](https://github.com/AY2223S2-CS2103-W17-3/tp)","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Project management**:","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"BigheartSmallbrain"},"content":"  * To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"BigheartSmallbrain"},"content":"  * To be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"BigheartSmallbrain"},"content":"  * User Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"BigheartSmallbrain"},"content":"    * Crafted the draft user","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"BigheartSmallbrain"},"content":"      guide [markdown file](https://github.com/AY2223S2-CS2103-W17-3/tp/pull/27/commits/5b329d62e2dbc73966ab2a4e59998c8d0657c246)","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"BigheartSmallbrain"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"BigheartSmallbrain"},"content":"    * To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Community**:","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"BigheartSmallbrain"},"content":"  * PRs reviewed (with non-trivial review comments): To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"BigheartSmallbrain"},"content":"  * Contributed to forum discussions: To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"BigheartSmallbrain"},"content":"  * Reported bugs and suggestions for other teams in the class: To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"BigheartSmallbrain"},"content":"  * Some parts of the history feature I added was adopted by several other class mates: To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Tools**:","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"BigheartSmallbrain"},"content":"  * To be added soon","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"BigheartSmallbrain":41}},{"path":"docs/team/jrmckh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"layout: page","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"title: Chia Jeremy\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"### \u003cspan style\u003d\"color:orange\"\u003e Project: EzSchedule \u003c/span\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"EZ-Schedule is a desktop application used for managing and scheduling of events. The user interacts with it using a","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"Command Line Interface (CLI), and it has a Graphical User Interface (GUI) created with JavaFX. It is written in Java,","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"and has about ***to be added soon*** kLoC.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"### Overview","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"* [Summary of Contributions](#summary-of-contributions-)","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"* [Code contributed](#code-contributed-)","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"* [New Features](#new-features-)","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"* [Enhancements to existing features](#enhancements-to-existing-features-)","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"* [Project management](#project-management-)","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"* [Documentation](#documentation-)","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"* [Community](#community-)","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"* [Tools](#tools-)","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"### Summary of Contributions:","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"* to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"### Code contributed:","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"* [to be added soon](https://github.com/AY2223S2-CS2103-W17-3/tp)","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"### New Features:","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"* to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"### Enhancements to existing features:","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"* to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"### Project management:","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"* to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"### Documentation:","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"* User Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"    * Crafted the draft user","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"      guide [markdown file](https://github.com/AY2223S2-CS2103-W17-3/tp/pull/27/commits/5b329d62e2dbc73966ab2a4e59998c8d0657c246)","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"* Developer Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"    * to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"* Project Portfolio Page:","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"    * Crafted the draft PPP [markdown file]()","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"### Community:","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"* PRs reviewed: [#27](https://github.com/AY2223S2-CS2103-W17-3/tp/pull/27)","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"### Tools:","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"* to be added soon","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"JrmCkh":52}},{"path":"docs/team/lhy-hoyin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"title: Ho Yin\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"## Overview","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"Project: EZ-Schedule","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"EZ-Schedule is a desktop application for managing and scheduling of events,","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"optimized for use via a Command Line Interface (CLI)","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"while still providing an easy way to visualize all events through a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"## Summary of Contributions","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"### Code contributed","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"Check it out [here](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dlhy-hoyin\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"### Enhancements implemented","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"### Contributions to the User Guide","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"to be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"### Contributions to the Developer Guide","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"- Set up the GitHub team org and repository","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"- Create milestones and labels within the team repository","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"- Add corresponding labels to issues and PRs (when missing)","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"### Review/mentoring contributions","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"[pr-reviewed-v1.1]: https://github.com/AY2223S2-CS2103-W17-3/tp/pulls?q\u003dis%3Apr+is%3Amerged+reviewed-by%3Alhy-hoyin+milestone%3Av1.1","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"[pr-reviewed-v1.2]: https://github.com/AY2223S2-CS2103-W17-3/tp/pulls?q\u003dis%3Apr+is%3Amerged+reviewed-by%3Alhy-hoyin+milestone%3Av1.2","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"[pr-reviewed-v1.3]: https://github.com/AY2223S2-CS2103-W17-3/tp/pulls?q\u003dis%3Apr+is%3Amerged+reviewed-by%3Alhy-hoyin+milestone%3Av1.3","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"[pr-reviewed-v1.4]: https://github.com/AY2223S2-CS2103-W17-3/tp/pulls?q\u003dis%3Apr+is%3Amerged+reviewed-by%3Alhy-hoyin+milestone%3Av1.4","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"[pr-reviewed-total]: https://github.com/AY2223S2-CS2103-W17-3/tp/pulls?q\u003dis%3Apr+is%3Amerged+reviewed-by%3Alhy-hoyin","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"| Milestone | PRs reviewed            |","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"|-----------|-------------------------|","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"| v1.1      | [4] [pr-reviewed-v1.1]  |","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"| v1.2      | [0] [pr-reviewed-v1.2]  |","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"| v1.3      | [ ] [pr-reviewed-v1.3]  |","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"| v1.4      | [ ] [pr-reviewed-v1.4]  |","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"| Total:    | [4] [pr-reviewed-total] |","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"PR Highlights","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"* Milestone 1","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"  * [Updated AboutUs and UserGuide](https://github.com/AY2223S2-CS2103-W17-3/tp/pull/9)","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"  * [Branch user story Developer Guide](https://github.com/AY2223S2-CS2103-W17-3/tp/pull/31)","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"### Contributions beyond the project team","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"## Contribution Highlights","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"to be added soon","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"lhy-hoyin":57}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"This command allows users of the Scheduler application to add optional remarks to people in their scheduler and edit it if required. The command should have the following format:","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":" * Changes the remark of an existing event in the scheduler.","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"            + \": Edits the remark of the event identified \"","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"            + \"by the index number used in the last event listing. \"","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"JrmCkh"},"content":"     * @param index of the event in the filtered event list to edit the remark","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"JrmCkh"},"content":"     * @param remark of the event to be updated to","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"JrmCkh"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of event data. We achieve that by working with the `Event` model. Each field in a Event is implemented as a separate class (e.g. a `Name` object represents the event’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a event.","lastModifiedDate":"2023-03-20"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"JrmCkh"},"content":"Create a new `Remark` in `seedu.address.model.event`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-03-20"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"JrmCkh"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each event.","lastModifiedDate":"2023-03-20"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"JrmCkh"},"content":"## Modify `Event` to support a `Remark` field","lastModifiedDate":"2023-03-20"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"JrmCkh"},"content":"Since `PersonCard` displays data from a `Event`, we need to update `Event` to get our `Remark` displayed!","lastModifiedDate":"2023-03-20"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"JrmCkh"},"content":"### Modify `Event`","lastModifiedDate":"2023-03-20"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"JrmCkh"},"content":"We change the constructor of `Event` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2023-03-20"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"JrmCkh"},"content":"### Update other usages of `Event`","lastModifiedDate":"2023-03-20"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"JrmCkh"},"content":"Unfortunately, a change to `Event` will cause other commands to break, you will have to modify these commands to use the updated `Event`!","lastModifiedDate":"2023-03-20"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"JrmCkh"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Event` class to find these commands.","lastModifiedDate":"2023-03-20"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"JrmCkh"},"content":"Scheduler stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Event`!","lastModifiedDate":"2023-03-20"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"JrmCkh"},"content":":exclamation: You must delete Scheduler’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause Scheduler to default to an empty scheduler!","lastModifiedDate":"2023-03-20"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"JrmCkh"},"content":"Now that we have finalized the `Event` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2023-03-20"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"JrmCkh"},"content":"public PersonCard(Event event, int displayedIndex) {","lastModifiedDate":"2023-03-20"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"JrmCkh"},"content":"    remark.setText(event.getRemark().value);","lastModifiedDate":"2023-03-20"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"JrmCkh"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Event`. Since all fields in a `Event` are immutable, we create a new instance of a `Event` with the values that we want and","lastModifiedDate":"2023-03-20"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"JrmCkh"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Event: %1$s\";","lastModifiedDate":"2023-03-20"},{"lineNumber":336,"author":{"gitId":"JrmCkh"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Event: %1$s\";","lastModifiedDate":"2023-03-20"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"JrmCkh"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-20"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"JrmCkh"},"content":"        Event personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":347,"author":{"gitId":"JrmCkh"},"content":"        Event editedPerson \u003d new Event(","lastModifiedDate":"2023-03-20"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"JrmCkh"},"content":"    private String generateSuccessMessage(Event personToEdit) {","lastModifiedDate":"2023-03-20"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"JrmCkh"},"content":"This concludes the tutorial for adding a new `Command` to Scheduler.","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"JrmCkh":29,"lhy-hoyin":3,"-":369}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Event` class.","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"The `address` field in `Event` is actually an instance of the `ezschedule.model.event.Address` class.","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Event` class will require you to modify its constructor.","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"JrmCkh"},"content":"    \"name\": \"Event with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JrmCkh":4,"lhy-hoyin":1,"-":108}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method ","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"that belongs to the `Logic` component yields a promising candidate in `ezschedule.logic.Logic`.","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"A quick look at the `ezschedule.logic.Logic` (an extract given below) confirms that","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"this indeed might be what we’re looking for.","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"JrmCkh"},"content":"       Event personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":196,"author":{"gitId":"JrmCkh"},"content":"       Event editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2023-03-20"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"JrmCkh"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the event data.","lastModifiedDate":"2023-03-20"},{"lineNumber":208,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"JrmCkh"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited event along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"JrmCkh"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Event` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2023-03-20"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"JrmCkh"},"content":"    3.  Save the scheduler in the CSV format instead","lastModifiedDate":"2023-03-20"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"JrmCkh"},"content":"    5.  Add a new field to `Event`","lastModifiedDate":"2023-03-20"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"JrmCkh"},"content":"    6.  Add a new entity to the scheduler","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"JrmCkh":8,"lhy-hoyin":5,"-":291}},{"path":"src/main/java/ezschedule/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.LogsCenter;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.FileUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"lhy-hoyin":3,"-":61}},{"path":"src/main/java/ezschedule/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"JrmCkh":4,"lhy-hoyin":1,"-":20}},{"path":"src/main/java/ezschedule/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Config;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.LogsCenter;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Version;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.StringUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.Logic;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.LogicManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ModelManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyScheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Scheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.storage.JsonSchedulerStorage;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.storage.SchedulerStorage;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.storage.Storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.storage.StorageManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.ui.Ui;","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.ui.UiManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Scheduler ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        SchedulerStorage schedulerStorage \u003d new JsonSchedulerStorage(userPrefs.getSchedulerFilePath());","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"        storage \u003d new StorageManager(schedulerStorage, userPrefsStorage);","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s scheduler and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"     * The data from the sample scheduler will be used instead if {@code storage}\u0027s scheduler is not found,","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"     * or an empty scheduler will be used instead if errors occur when reading {@code storage}\u0027s scheduler.","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"        Optional\u003cReadOnlyScheduler\u003e schedulerOptional;","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"        ReadOnlyScheduler initialData;","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"            schedulerOptional \u003d storage.readScheduler();","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"            if (!schedulerOptional.isPresent()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Scheduler\");","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"            initialData \u003d schedulerOptional.orElseGet(SampleDataUtil::getSampleScheduler);","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Scheduler\");","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"            initialData \u003d new Scheduler();","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Scheduler\");","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"            initialData \u003d new Scheduler();","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"lhy-hoyin"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Scheduler\");","lastModifiedDate":"2023-03-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"lhy-hoyin"},"content":"        logger.info(\"Starting Scheduler \" + ezschedule.MainApp.VERSION);","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"JrmCkh"},"content":"        primaryStage.setMaximized(true);","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"lhy-hoyin"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Scheduler ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JrmCkh":1,"lhy-hoyin":43,"-":138}},{"path":"src/main/java/ezschedule/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":1,"-":62}},{"path":"src/main/java/ezschedule/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":1,"-":78}},{"path":"src/main/java/ezschedule/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    private static final String LOG_FILE \u003d \"scheduler.log\";","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lhy-hoyin":2,"-":110}},{"path":"src/main/java/ezschedule/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index %1$s provided is invalid\";","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_EVENTS_LISTED_OVERVIEW \u003d \"%1$d events listed!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JrmCkh":1,"lhy-hoyin":1,"anthonynmh":1,"-":9}},{"path":"src/main/java/ezschedule/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"    public int getMajor() {","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"        return major;","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"    public int getMinor() {","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"        return minor;","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"    public int getPatch() {","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"        return patch;","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"        return isEarlyAccess;","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lhy-hoyin":18,"-":99}},{"path":"src/main/java/ezschedule/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core.index;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"public class Index implements Comparable\u003cIndex\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"    public int compareTo(Index o) {","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"        return this.zeroBasedIndex - o.zeroBasedIndex;","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"JrmCkh":6,"lhy-hoyin":1,"-":52}},{"path":"src/main/java/ezschedule/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":1,"-":10}},{"path":"src/main/java/ezschedule/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":1,"-":20}},{"path":"src/main/java/ezschedule/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.MainApp;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":2,"-":40}},{"path":"src/main/java/ezschedule/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":1,"-":34}},{"path":"src/main/java/ezschedule/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Config;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":3,"-":20}},{"path":"src/main/java/ezschedule/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lhy-hoyin":3,"-":81}},{"path":"src/main/java/ezschedule/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.LogsCenter;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath                   cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e      The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lhy-hoyin":7,"-":138}},{"path":"src/main/java/ezschedule/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"     * Ignores case, full word match is not required.","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"        String preppedWord \u003d word.toLowerCase().trim();","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        AppUtil.checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"        return sentence.toLowerCase().contains(preppedWord);","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"        return t.getMessage() + \"\\n\" + sw;","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JrmCkh":7,"lhy-hoyin":2,"-":53}},{"path":"src/main/java/ezschedule/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.GuiSettings;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyScheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"     * Returns the Scheduler.","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"     * @see Model#getScheduler()","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"    ReadOnlyScheduler getScheduler();","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"     * Returns an unmodifiable view of the list of events","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"     * Returns an unmodifiable view of the filtered list of events","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"     * Returns an unmodifiable view of the upcoming list of events","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"    ObservableList\u003cEvent\u003e getUpcomingEventList();","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"     * Returns an unmodifiable view of the find command list of events","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"    ObservableList\u003cEvent\u003e getFindEventList();","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"     * Updates the filtered list of events","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"     * Returns the user prefs\u0027 scheduler file path.","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"    Path getSchedulerFilePath();","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"JrmCkh":29,"lhy-hoyin":10,"anthonynmh":2,"-":34}},{"path":"src/main/java/ezschedule/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.GuiSettings;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.LogsCenter;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.parser.SchedulerParser;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyScheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.storage.Storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    private final SchedulerParser schedulerParser;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"        schedulerParser \u003d new SchedulerParser();","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"        Command command \u003d schedulerParser.parseCommand(commandText);","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"            storage.saveScheduler(model.getScheduler());","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"    public ReadOnlyScheduler getScheduler() {","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"        return model.getScheduler();","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"        return model.getEventList();","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"anthonynmh"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"anthonynmh"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"    public ObservableList\u003cEvent\u003e getUpcomingEventList() {","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"        return model.getUpcomingEventList();","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"JrmCkh"},"content":"    public ObservableList\u003cEvent\u003e getFindEventList() {","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"        return model.getFindEventList();","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"JrmCkh"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"JrmCkh"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"JrmCkh"},"content":"    public Path getSchedulerFilePath() {","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"JrmCkh"},"content":"        return model.getSchedulerFilePath();","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"JrmCkh":29,"lhy-hoyin":13,"anthonynmh":5,"-":55}},{"path":"src/main/java/ezschedule/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":" * Adds an event to the scheduler.","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to the scheduler.\"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"            + \"\\nParameters: \"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"            + PREFIX_START + \"START TIME \"","lastModifiedDate":"2023-04-03"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"            + PREFIX_END + \"END TIME \"","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"            + PREFIX_NAME + \"Tennis \"","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"            + PREFIX_DATE + \"2023-12-20 \"","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"            + PREFIX_START + \"18:00 \"","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"            + PREFIX_END + \"20:00\";","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the scheduler\";","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"    public static final String MESSAGE_EVENT_EXIST_AT_TIME \u003d \"Another event already exists at the chosen time\";","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"    public static final String MESSAGE_EVENT_END_TIME_EARLIER_THAN_START_TIME \u003d","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"            \"Event\u0027s end time needs to be later than start time\";","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"    private final Event toAdd;","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"     * Creates an AddEventCommand to add the specified {@code Event}.","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"    public AddCommand(Event event) {","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"        toAdd \u003d event;","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"BigheartSmallbrain"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"BigheartSmallbrain"},"content":"    public String commandWord() {","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"BigheartSmallbrain"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"        if (model.hasEvent(toAdd)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"        } else if (model.hasEventAtTime(toAdd)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"            throw new CommandException(MESSAGE_EVENT_EXIST_AT_TIME);","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"BigheartSmallbrain"},"content":"        model.clearRecent();","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"BigheartSmallbrain"},"content":"        model.recentCommand().add(this);","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"BigheartSmallbrain"},"content":"        model.recentEvent().add(toAdd);","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JrmCkh":32,"BigheartSmallbrain":7,"lhy-hoyin":4,"anthonynmh":2,"-":31}},{"path":"src/main/java/ezschedule/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Scheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":" * Clears the scheduler.","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Scheduler has been cleared!\";","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"        model.setScheduler(new Scheduler());","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"BigheartSmallbrain"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"BigheartSmallbrain"},"content":"    public String commandWord() {","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"BigheartSmallbrain"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JrmCkh":3,"BigheartSmallbrain":4,"lhy-hoyin":3,"-":16}},{"path":"src/main/java/ezschedule/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"BigheartSmallbrain"},"content":"    public abstract String commandWord();","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BigheartSmallbrain":1,"lhy-hoyin":3,"-":16}},{"path":"src/main/java/ezschedule/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lhy-hoyin":1,"-":69}},{"path":"src/main/java/ezschedule/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":" * Deletes an event identified using it\u0027s displayed index from the scheduler.","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"            + \": Deletes the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted Event: \";","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    private final List\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    public DeleteCommand(List\u003cIndex\u003e targetIndexes) {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"BigheartSmallbrain"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"BigheartSmallbrain"},"content":"    public String commandWord() {","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"BigheartSmallbrain"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"anthonynmh"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"        StringBuilder feedback \u003d new StringBuilder(MESSAGE_DELETE_EVENT_SUCCESS);","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"        Collections.sort(targetIndexes); // sort index in order","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"        Collections.reverse(targetIndexes); // reverse index order to prevent exception when deleting","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"BigheartSmallbrain"},"content":"        model.clearRecent();","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"BigheartSmallbrain"},"content":"        model.recentCommand().add(this);","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"                throw new CommandException(","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"                        String.format(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX, targetIndex.getZeroBased() + 1));","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"anthonynmh"},"content":"            Event eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"anthonynmh"},"content":"            model.deleteEvent(eventToDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"BigheartSmallbrain"},"content":"            model.addRecentEvent(eventToDelete);","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"            feedback.append(eventToDelete.toString());","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"        return new CommandResult(feedback.toString());","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 targetIndexes.equals(((DeleteCommand) other).targetIndexes)); // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JrmCkh":16,"BigheartSmallbrain":8,"lhy-hoyin":6,"anthonynmh":4,"-":32}},{"path":"src/main/java/ezschedule/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Date;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Name;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Time;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":" * Edits the details of an existing event in the scheduler.","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the event identified \"","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"            + \"by the index number used in the displayed event list. \"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"            + \"\\nExisting values will be overwritten by the input values.\"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"            + \"\\nParameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"            + PREFIX_START + \"START TIME \"","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"            + PREFIX_END + \"END TIME \"","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"            + PREFIX_NAME + \"TENNIS \"","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"            + PREFIX_DATE + \"2023-20-12 \"","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"            + PREFIX_START + \"18:00 \"","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"            + PREFIX_END + \"20:00\";","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_EDIT_EVENT_SUCCESS \u003d \"Edited Event: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the scheduler.\";","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"    public static final String MESSAGE_EVENT_END_TIME_EARLIER_THAN_START_TIME \u003d","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"            \"Event\u0027s end time needs to be later than start time\";","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"    private final EditEventDescriptor editEventDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"     * @param index               of the event in the filtered event list to edit","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"anthonynmh"},"content":"     * @param editEventDescriptor details to edit the event with","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"anthonynmh"},"content":"    public EditCommand(Index index, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(editEventDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"anthonynmh"},"content":"        this.editEventDescriptor \u003d new EditEventDescriptor(editEventDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"     * Creates and returns a {@code Event} with the details of {@code eventToEdit}","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"     * edited with {@code editEventDescriptor}.","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"    private static Event createEditedEvent(Event eventToEdit, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"        assert eventToEdit !\u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"        Name updatedName \u003d editEventDescriptor.getName().orElse(eventToEdit.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"        Date updatedDate \u003d editEventDescriptor.getDate().orElse(eventToEdit.getDate());","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"        Time updatedStartTime \u003d editEventDescriptor.getStartTime().orElse(eventToEdit.getStartTime());","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"        Time updatedEndTime \u003d editEventDescriptor.getEndTime().orElse(eventToEdit.getEndTime());","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"        return new Event(updatedName, updatedDate, updatedStartTime, updatedEndTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":79,"author":{"gitId":"BigheartSmallbrain"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"BigheartSmallbrain"},"content":"    public String commandWord() {","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"BigheartSmallbrain"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"anthonynmh"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"JrmCkh"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2023-04-03"},{"lineNumber":90,"author":{"gitId":"JrmCkh"},"content":"                    Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX, index.getZeroBased() + 1));","lastModifiedDate":"2023-04-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"anthonynmh"},"content":"        Event eventToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"anthonynmh"},"content":"        Event editedEvent \u003d createEditedEvent(eventToEdit, editEventDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"JrmCkh"},"content":"        if (!eventToEdit.equals(editedEvent) \u0026\u0026 model.hasEvent(editedEvent)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":97,"author":{"gitId":"anthonynmh"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"JrmCkh"},"content":"        } else if (editedEvent.getEndTime().isBefore(editedEvent.getStartTime())) {","lastModifiedDate":"2023-04-03"},{"lineNumber":99,"author":{"gitId":"JrmCkh"},"content":"            throw new CommandException(MESSAGE_EVENT_END_TIME_EARLIER_THAN_START_TIME);","lastModifiedDate":"2023-04-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"anthonynmh"},"content":"        model.setEvent(eventToEdit, editedEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"        model.updateFilteredEventList(Model.PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"BigheartSmallbrain"},"content":"        model.clearRecent();","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"BigheartSmallbrain"},"content":"        model.recentCommand().add(this);","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"BigheartSmallbrain"},"content":"        model.addRecentEvent(eventToEdit);","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"BigheartSmallbrain"},"content":"        model.addRecentEvent(editedEvent);","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"anthonynmh"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_EVENT_SUCCESS, editedEvent));","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"anthonynmh"},"content":"                \u0026\u0026 editEventDescriptor.equals(e.editEventDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"JrmCkh"},"content":"     * Stores the details to edit the event with.","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"JrmCkh"},"content":"     * Each non-empty field value will replace the corresponding field value of the event.","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"anthonynmh"},"content":"    public static class EditEventDescriptor {","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"JrmCkh"},"content":"        private Date date;","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"JrmCkh"},"content":"        private Time startTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"JrmCkh"},"content":"        private Time endTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"JrmCkh"},"content":"        public EditEventDescriptor() {}","lastModifiedDate":"2023-03-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"anthonynmh"},"content":"        public EditEventDescriptor(EditEventDescriptor toCopy) {","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"JrmCkh"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"anthonynmh"},"content":"            setStartTime(toCopy.startTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"anthonynmh"},"content":"            setEndTime(toCopy.endTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"JrmCkh"},"content":"            return CollectionUtil.isAnyNonNull(name, date, startTime, endTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"JrmCkh"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"JrmCkh"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"JrmCkh"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2023-03-16"},{"lineNumber":168,"author":{"gitId":"JrmCkh"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2023-03-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"JrmCkh"},"content":"        public void setDate(Date date) {","lastModifiedDate":"2023-03-16"},{"lineNumber":172,"author":{"gitId":"JrmCkh"},"content":"            this.date \u003d date;","lastModifiedDate":"2023-03-16"},{"lineNumber":173,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":174,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":175,"author":{"gitId":"JrmCkh"},"content":"        public Optional\u003cTime\u003e getStartTime() {","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"anthonynmh"},"content":"            return Optional.ofNullable(startTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"JrmCkh"},"content":"        public void setStartTime(Time startTime) {","lastModifiedDate":"2023-03-16"},{"lineNumber":180,"author":{"gitId":"JrmCkh"},"content":"            this.startTime \u003d startTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"JrmCkh"},"content":"        public Optional\u003cTime\u003e getEndTime() {","lastModifiedDate":"2023-03-16"},{"lineNumber":184,"author":{"gitId":"anthonynmh"},"content":"            return Optional.ofNullable(endTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":187,"author":{"gitId":"JrmCkh"},"content":"        public void setEndTime(Time endTime) {","lastModifiedDate":"2023-03-16"},{"lineNumber":188,"author":{"gitId":"JrmCkh"},"content":"            this.endTime \u003d endTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":189,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":190,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":199,"author":{"gitId":"anthonynmh"},"content":"            if (!(other instanceof EditEventDescriptor)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"anthonynmh"},"content":"            EditEventDescriptor e \u003d (EditEventDescriptor) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"JrmCkh"},"content":"                    \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2023-03-16"},{"lineNumber":208,"author":{"gitId":"JrmCkh"},"content":"                    \u0026\u0026 getStartTime().equals(e.getStartTime())","lastModifiedDate":"2023-03-16"},{"lineNumber":209,"author":{"gitId":"JrmCkh"},"content":"                    \u0026\u0026 getEndTime().equals(e.getEndTime());","lastModifiedDate":"2023-03-16"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"JrmCkh":68,"BigheartSmallbrain":9,"lhy-hoyin":11,"anthonynmh":25,"-":99}},{"path":"src/main/java/ezschedule/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Scheduler as requested ...\";","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"BigheartSmallbrain"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"BigheartSmallbrain"},"content":"    public String commandWord() {","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"BigheartSmallbrain"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"JrmCkh":1,"BigheartSmallbrain":4,"lhy-hoyin":2,"-":15}},{"path":"src/main/java/ezschedule/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Date;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.EventContainsKeywordsPredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.EventMatchesDatePredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.EventMatchesKeywordsAndDatePredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":" * Finds and lists all events in scheduler whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"BigheartSmallbrain"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds events that contain keyword provided \"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"BigheartSmallbrain"},"content":"            + \"and displays them as a list with index number \\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"            + CliSyntax.PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"            + CliSyntax.PREFIX_DATE + \"DATE \"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"            + CliSyntax.PREFIX_NAME + \"basketball court \"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"            + CliSyntax.PREFIX_DATE + \"2023-01-01 \";","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"    private final FindEventDescriptor findEventDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"    public FindCommand(FindEventDescriptor findEventDescriptor) {","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"        this.findEventDescriptor \u003d findEventDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"        if (findEventDescriptor.getName().isPresent() \u0026\u0026 findEventDescriptor.getDate().isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"            String[] nameKeywords \u003d findEventDescriptor.getName().get().toString().split(\"\\\\s+\");","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"            Date date \u003d findEventDescriptor.getDate().get();","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"            EventMatchesKeywordsAndDatePredicate predicate \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"                    new EventMatchesKeywordsAndDatePredicate(Arrays.asList(nameKeywords), date);","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"            model.updateFilteredEventList(predicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"            model.updateFindEventList(predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"        } else if (findEventDescriptor.getName().isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"            String[] nameKeywords \u003d findEventDescriptor.getName().get().toString().split(\"\\\\s+\");","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"            EventContainsKeywordsPredicate predicate \u003d new EventContainsKeywordsPredicate(Arrays.asList(nameKeywords));","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"anthonynmh"},"content":"            model.updateFilteredEventList(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"            model.updateFindEventList(predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"            Date date \u003d findEventDescriptor.getDate().get();","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"            EventMatchesDatePredicate predicate \u003d new EventMatchesDatePredicate(date);","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"anthonynmh"},"content":"            model.updateFilteredEventList(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"            model.updateFindEventList(predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":66,"author":{"gitId":"anthonynmh"},"content":"                String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW, model.getFilteredEventList().size()));","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"BigheartSmallbrain"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"BigheartSmallbrain"},"content":"    public String commandWord() {","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"BigheartSmallbrain"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"            \u0026\u0026 findEventDescriptor.equals(((FindCommand) other).findEventDescriptor)); // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"     * Stores the details to find the event with.","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"     * Each non-empty field value will replace the corresponding field value of the event.","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"JrmCkh"},"content":"    public static class FindEventDescriptor {","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"JrmCkh"},"content":"        private Name name;","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"JrmCkh"},"content":"        private Date date;","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"JrmCkh"},"content":"        public FindEventDescriptor() {}","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"JrmCkh"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"JrmCkh"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"JrmCkh"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"        public FindEventDescriptor(FindEventDescriptor toCopy) {","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"JrmCkh"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"JrmCkh"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"JrmCkh"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"JrmCkh"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"JrmCkh"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"JrmCkh"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"JrmCkh"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"JrmCkh"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"JrmCkh"},"content":"        public void setDate(Date date) {","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"JrmCkh"},"content":"            this.date \u003d date;","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"JrmCkh"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"JrmCkh"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"JrmCkh"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"JrmCkh"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"JrmCkh"},"content":"                return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"JrmCkh"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"JrmCkh"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"JrmCkh"},"content":"            if (!(other instanceof FindEventDescriptor)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"JrmCkh"},"content":"                return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"JrmCkh"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"JrmCkh"},"content":"            // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"JrmCkh"},"content":"            FindEventDescriptor e \u003d (FindEventDescriptor) other;","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"JrmCkh"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"JrmCkh"},"content":"                    \u0026\u0026 getDate().equals(e.getDate());","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"JrmCkh":94,"BigheartSmallbrain":6,"lhy-hoyin":4,"anthonynmh":3,"-":26}},{"path":"src/main/java/ezschedule/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"BigheartSmallbrain"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"BigheartSmallbrain"},"content":"    public String commandWord() {","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"BigheartSmallbrain"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BigheartSmallbrain":4,"lhy-hoyin":2,"-":19}},{"path":"src/main/java/ezschedule/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":" * Lists all events in the scheduler to the user.","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all events\";","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        model.updateFilteredEventList(Model.PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"        model.updateFindEventList(Model.PREDICATE_SHOW_NO_EVENTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"BigheartSmallbrain"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"BigheartSmallbrain"},"content":"    public String commandWord() {","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"BigheartSmallbrain"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JrmCkh":2,"BigheartSmallbrain":4,"lhy-hoyin":3,"anthonynmh":1,"-":18}},{"path":"src/main/java/ezschedule/logic/commands/RecurCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_EVERY;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"import ezschedule.commons.core.Messages;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"import ezschedule.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"import ezschedule.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"import ezschedule.model.event.Date;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"import ezschedule.model.event.RecurFactor;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":" * Recurs an existing event in the scheduler.","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"public class RecurCommand extends Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"    public static final String COMMAND_WORD \u003d \"recur\";","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Recurs event in the scheduler by \"","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"            + \"the index number used in the displayed event list. \"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"            + \"\\nParameters: INDEX (must exist)\\n \"","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"            + PREFIX_DATE + \"ending date\\n \"","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"            + PREFIX_EVERY + \"{day, week, month} \"","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"            + \"\\nExample: \\n\" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"            + PREFIX_DATE + \"2024-02-20 \"","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"            + PREFIX_EVERY + \"month \";","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Recurring event added: %1$s\";","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_RECUR_FACTOR_CAP \u003d \"Recur factor is not appropriate for \"","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"            + \"number of recurring events.\";","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"    private final Index index;","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"    private final Date endDate;","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"    private final RecurFactor factor;","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"     * Creates an AddEventCommand to add the specified {@code Event}","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"    public RecurCommand(Index index, Date endDate, RecurFactor factor) {","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(endDate);","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(factor);","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"        this.factor \u003d factor;","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"BigheartSmallbrain"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"BigheartSmallbrain"},"content":"    public String commandWord() {","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"BigheartSmallbrain"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"anthonynmh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"anthonynmh"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"anthonynmh"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"anthonynmh"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX,","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"anthonynmh"},"content":"                    index.getZeroBased() + 1));","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"anthonynmh"},"content":"        Event eventToRecur \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"BigheartSmallbrain"},"content":"        model.clearRecent();","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"anthonynmh"},"content":"        switch (factor.toString()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"anthonynmh"},"content":"        case \"day\":","lastModifiedDate":"2023-04-03"},{"lineNumber":73,"author":{"gitId":"anthonynmh"},"content":"            addEventPerDay(model, eventToRecur);","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"anthonynmh"},"content":"            break;","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"anthonynmh"},"content":"        case \"week\":","lastModifiedDate":"2023-04-03"},{"lineNumber":77,"author":{"gitId":"anthonynmh"},"content":"            addEventPerWeek(model, eventToRecur);","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"anthonynmh"},"content":"            break;","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"anthonynmh"},"content":"        case \"month\":","lastModifiedDate":"2023-04-03"},{"lineNumber":81,"author":{"gitId":"anthonynmh"},"content":"            addEventPerMonth(model, eventToRecur);","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"anthonynmh"},"content":"            break;","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"anthonynmh"},"content":"        default:","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"anthonynmh"},"content":"            break;","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"BigheartSmallbrain"},"content":"        model.recentCommand().add(this);","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"anthonynmh"},"content":"        model.updateFilteredEventList(Model.PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"anthonynmh"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, eventToRecur));","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"anthonynmh"},"content":"     * Adds new events to every day until endDate.","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"anthonynmh"},"content":"     * @param model model to add","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"anthonynmh"},"content":"     * @param eventToRecur event to recur in the model","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"anthonynmh"},"content":"    public void addEventPerDay(Model model, Event eventToRecur) throws CommandException {","lastModifiedDate":"2023-04-03"},{"lineNumber":99,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":100,"author":{"gitId":"anthonynmh"},"content":"        int maxDaysInMonth \u003d 30;","lastModifiedDate":"2023-04-03"},{"lineNumber":101,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":102,"author":{"gitId":"anthonynmh"},"content":"        Date baseDate \u003d eventToRecur.getDate();","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"anthonynmh"},"content":"        int daysDiff \u003d (int) baseDate.getDaysBetween(endDate.date);","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":105,"author":{"gitId":"anthonynmh"},"content":"        if (daysDiff \u003e maxDaysInMonth) {","lastModifiedDate":"2023-04-03"},{"lineNumber":106,"author":{"gitId":"anthonynmh"},"content":"            throw new CommandException(String.format(MESSAGE_RECUR_FACTOR_CAP));","lastModifiedDate":"2023-04-03"},{"lineNumber":107,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":108,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":109,"author":{"gitId":"anthonynmh"},"content":"        Date newDate \u003d new Date(eventToRecur.getDate().date.plusDays(1).toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"anthonynmh"},"content":"        Event nextEventToRecur \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"anthonynmh"},"content":"                new Event(eventToRecur.getName(), newDate,","lastModifiedDate":"2023-03-25"},{"lineNumber":112,"author":{"gitId":"anthonynmh"},"content":"                        eventToRecur.getStartTime(), eventToRecur.getEndTime());","lastModifiedDate":"2023-03-25"},{"lineNumber":113,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"anthonynmh"},"content":"        for (int i \u003d 0; i \u003c daysDiff; i++) {","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"anthonynmh"},"content":"            model.addEvent(nextEventToRecur);","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"BigheartSmallbrain"},"content":"            model.addRecentEvent(nextEventToRecur);","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"anthonynmh"},"content":"            newDate \u003d new Date(nextEventToRecur.getDate().date.plusDays(1).toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"anthonynmh"},"content":"            nextEventToRecur \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"anthonynmh"},"content":"                    new Event(eventToRecur.getName(), newDate,","lastModifiedDate":"2023-03-25"},{"lineNumber":120,"author":{"gitId":"anthonynmh"},"content":"                            eventToRecur.getStartTime(), eventToRecur.getEndTime());","lastModifiedDate":"2023-03-25"},{"lineNumber":121,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"anthonynmh"},"content":"     * Adds new events to every week until endDate.","lastModifiedDate":"2023-03-26"},{"lineNumber":126,"author":{"gitId":"anthonynmh"},"content":"     * @param model model to add","lastModifiedDate":"2023-03-26"},{"lineNumber":127,"author":{"gitId":"anthonynmh"},"content":"     * @param eventToRecur event to recur in the model","lastModifiedDate":"2023-03-26"},{"lineNumber":128,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":129,"author":{"gitId":"anthonynmh"},"content":"    public void addEventPerWeek(Model model, Event eventToRecur) throws CommandException {","lastModifiedDate":"2023-04-03"},{"lineNumber":130,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":131,"author":{"gitId":"anthonynmh"},"content":"        int daysPerWeek \u003d 7;","lastModifiedDate":"2023-03-26"},{"lineNumber":132,"author":{"gitId":"anthonynmh"},"content":"        int maxWeeksInYear \u003d 52;","lastModifiedDate":"2023-04-03"},{"lineNumber":133,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"anthonynmh"},"content":"        Date baseDate \u003d eventToRecur.getDate();","lastModifiedDate":"2023-03-26"},{"lineNumber":135,"author":{"gitId":"anthonynmh"},"content":"        int weeksDiff \u003d (int) baseDate.getDaysBetween(endDate.date) / daysPerWeek;","lastModifiedDate":"2023-03-26"},{"lineNumber":136,"author":{"gitId":"anthonynmh"},"content":"        Date newDate \u003d new Date(eventToRecur.getDate().date.plusWeeks(1).toString());","lastModifiedDate":"2023-03-26"},{"lineNumber":137,"author":{"gitId":"anthonynmh"},"content":"        Event nextEventToRecur \u003d","lastModifiedDate":"2023-03-26"},{"lineNumber":138,"author":{"gitId":"anthonynmh"},"content":"                new Event(eventToRecur.getName(), newDate,","lastModifiedDate":"2023-03-26"},{"lineNumber":139,"author":{"gitId":"anthonynmh"},"content":"                        eventToRecur.getStartTime(), eventToRecur.getEndTime());","lastModifiedDate":"2023-03-26"},{"lineNumber":140,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":141,"author":{"gitId":"anthonynmh"},"content":"        if (weeksDiff \u003e maxWeeksInYear) {","lastModifiedDate":"2023-04-03"},{"lineNumber":142,"author":{"gitId":"anthonynmh"},"content":"            throw new CommandException(String.format(MESSAGE_RECUR_FACTOR_CAP));","lastModifiedDate":"2023-04-03"},{"lineNumber":143,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":144,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":145,"author":{"gitId":"anthonynmh"},"content":"        for (int i \u003d 0; i \u003c weeksDiff; i++) {","lastModifiedDate":"2023-03-26"},{"lineNumber":146,"author":{"gitId":"anthonynmh"},"content":"            model.addEvent(nextEventToRecur);","lastModifiedDate":"2023-03-26"},{"lineNumber":147,"author":{"gitId":"BigheartSmallbrain"},"content":"            model.addRecentEvent(nextEventToRecur);","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"anthonynmh"},"content":"            newDate \u003d new Date(nextEventToRecur.getDate().date.plusWeeks(1).toString());","lastModifiedDate":"2023-03-26"},{"lineNumber":149,"author":{"gitId":"anthonynmh"},"content":"            nextEventToRecur \u003d","lastModifiedDate":"2023-03-26"},{"lineNumber":150,"author":{"gitId":"anthonynmh"},"content":"                    new Event(eventToRecur.getName(), newDate,","lastModifiedDate":"2023-03-26"},{"lineNumber":151,"author":{"gitId":"anthonynmh"},"content":"                            eventToRecur.getStartTime(), eventToRecur.getEndTime());","lastModifiedDate":"2023-03-26"},{"lineNumber":152,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":153,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":154,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":155,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"anthonynmh"},"content":"     * Adds new events to every month until endDate.","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"anthonynmh"},"content":"     * @param model model to add","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"anthonynmh"},"content":"     * @param eventToRecur event to recur in the model","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"anthonynmh"},"content":"    public void addEventPerMonth(Model model, Event eventToRecur) throws CommandException {","lastModifiedDate":"2023-04-03"},{"lineNumber":161,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":162,"author":{"gitId":"anthonynmh"},"content":"        int maxMonthInYear \u003d 12;","lastModifiedDate":"2023-04-03"},{"lineNumber":163,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":164,"author":{"gitId":"anthonynmh"},"content":"        Date baseDate \u003d eventToRecur.getDate();","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"anthonynmh"},"content":"        int monthsDiff \u003d (int) baseDate.getMonthsBetween(endDate.date);","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"anthonynmh"},"content":"        Date newDate \u003d new Date(eventToRecur.getDate().date.plusMonths(1).toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"anthonynmh"},"content":"        Event nextEventToRecur \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"anthonynmh"},"content":"                new Event(eventToRecur.getName(), newDate,","lastModifiedDate":"2023-03-25"},{"lineNumber":169,"author":{"gitId":"anthonynmh"},"content":"                        eventToRecur.getStartTime(), eventToRecur.getEndTime());","lastModifiedDate":"2023-03-25"},{"lineNumber":170,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"anthonynmh"},"content":"        if (monthsDiff \u003e maxMonthInYear) {","lastModifiedDate":"2023-04-03"},{"lineNumber":172,"author":{"gitId":"anthonynmh"},"content":"            throw new CommandException(String.format(MESSAGE_RECUR_FACTOR_CAP));","lastModifiedDate":"2023-04-03"},{"lineNumber":173,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":174,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":175,"author":{"gitId":"anthonynmh"},"content":"        for (int i \u003d 0; i \u003c monthsDiff; i++) {","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"anthonynmh"},"content":"            model.addEvent(nextEventToRecur);","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"BigheartSmallbrain"},"content":"            model.addRecentEvent(nextEventToRecur);","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"anthonynmh"},"content":"            newDate \u003d new Date(nextEventToRecur.getDate().date.plusMonths(1).toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"anthonynmh"},"content":"            nextEventToRecur \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"anthonynmh"},"content":"                    new Event(eventToRecur.getName(), newDate,","lastModifiedDate":"2023-03-25"},{"lineNumber":181,"author":{"gitId":"anthonynmh"},"content":"                            eventToRecur.getStartTime(), eventToRecur.getEndTime());","lastModifiedDate":"2023-03-25"},{"lineNumber":182,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"anthonynmh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"anthonynmh"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"anthonynmh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"anthonynmh"},"content":"            return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"anthonynmh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"anthonynmh"},"content":"        if (!(other instanceof RecurCommand)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"anthonynmh"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"anthonynmh"},"content":"        // state check","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"anthonynmh"},"content":"        RecurCommand e \u003d (RecurCommand) other;","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"anthonynmh"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"anthonynmh"},"content":"                \u0026\u0026 endDate.equals(e.endDate)","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"anthonynmh"},"content":"                \u0026\u0026 factor.equals(e.factor);","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"BigheartSmallbrain":11,"anthonynmh":192}},{"path":"src/main/java/ezschedule/logic/commands/ShowNextCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.UpcomingEventPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":" * List the next (or next few) upcoming events.","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":" * Completed events are not considered upcoming.","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"public class ShowNextCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    public static final String COMMAND_WORD \u003d \"next\";","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"    public static final int SHOW_UPCOMING_COUNT_ONE \u003d 1;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Display upcoming events.\"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"            + \"\\nCan be used without any parameters.\"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"            + \"\\nParameter: COUNT (must be a positive integer)\"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 3\";","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    private final UpcomingEventPredicate predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    public ShowNextCommand(UpcomingEventPredicate predicate) {","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"BigheartSmallbrain"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"BigheartSmallbrain"},"content":"    public String commandWord() {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"BigheartSmallbrain"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"        model.updateUpcomingEventList(predicate);","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"                String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW, model.getUpcomingEventList().size()));","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"                || (other instanceof ShowNextCommand // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"                \u0026\u0026 predicate.equals(((ShowNextCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"JrmCkh":3,"BigheartSmallbrain":4,"lhy-hoyin":40}},{"path":"src/main/java/ezschedule/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BigheartSmallbrain"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"BigheartSmallbrain"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"BigheartSmallbrain"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"BigheartSmallbrain"},"content":"import ezschedule.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"BigheartSmallbrain"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"BigheartSmallbrain"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"BigheartSmallbrain"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"BigheartSmallbrain"},"content":" * Deletes an event identified using it\u0027s displayed index from the scheduler.","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"BigheartSmallbrain"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"BigheartSmallbrain"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"BigheartSmallbrain"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"BigheartSmallbrain"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"BigheartSmallbrain"},"content":"            + \": Undo the most recently deleted event and adds to the scheduler \\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"BigheartSmallbrain"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"BigheartSmallbrain"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Retrieved most recent deleted event: %1$s\";","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"BigheartSmallbrain"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"BigheartSmallbrain"},"content":"    public String commandWord() {","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"BigheartSmallbrain"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"BigheartSmallbrain"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"BigheartSmallbrain"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"BigheartSmallbrain"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"BigheartSmallbrain"},"content":"        Command prevCommand \u003d model.recentCommand().get(0);","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"BigheartSmallbrain"},"content":"        switch (prevCommand.commandWord()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"BigheartSmallbrain"},"content":"        case \"add\":","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"BigheartSmallbrain"},"content":"            Event preEvent \u003d model.recentEvent().get(0);","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"BigheartSmallbrain"},"content":"            model.deleteEvent(preEvent);","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"BigheartSmallbrain"},"content":"            break;","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"BigheartSmallbrain"},"content":"        case \"edit\":","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"BigheartSmallbrain"},"content":"            Event toEditEvent \u003d model.recentEvent().get(0);","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"BigheartSmallbrain"},"content":"            Event editedEvent \u003d model.recentEvent().get(1);","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"BigheartSmallbrain"},"content":"            model.setEvent(editedEvent, toEditEvent);","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"BigheartSmallbrain"},"content":"            break;","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"BigheartSmallbrain"},"content":"        case \"delete\":","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"            ArrayList\u003cEvent\u003e deletedEventList \u003d model.recentEvent();","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"            for (Event event : deletedEventList) {","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"                model.addEvent(event);","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"BigheartSmallbrain"},"content":"            break;","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"BigheartSmallbrain"},"content":"        case \"recur\":","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"BigheartSmallbrain"},"content":"            ArrayList\u003cEvent\u003e recurEventList \u003d model.recentEvent();","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"BigheartSmallbrain"},"content":"            for (Event event : recurEventList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"BigheartSmallbrain"},"content":"                model.deleteEvent(event);","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"BigheartSmallbrain"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"BigheartSmallbrain"},"content":"            break;","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"BigheartSmallbrain"},"content":"        default:","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"BigheartSmallbrain"},"content":"            break;","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"BigheartSmallbrain"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"BigheartSmallbrain"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, \"Empty string for Undo action now\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"BigheartSmallbrain"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"JrmCkh":4,"BigheartSmallbrain":51}},{"path":"src/main/java/ezschedule/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands.exceptions;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"lhy-hoyin":1,"-":16}},{"path":"src/main/java/ezschedule/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.AddCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Date;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Name;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Time;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":" * Parses input arguments and creates a new AddCommand object.","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"     * in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATE, PREFIX_START, PREFIX_END);","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DATE, PREFIX_START, PREFIX_END)","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).orElse(null));","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).orElse(null));","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"        Time startTime \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_START).orElse(null));","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"        Time endTime \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_END).orElse(null));","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"        if (endTime.isBefore(startTime)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"            throw new ParseException(AddCommand.MESSAGE_EVENT_END_TIME_EARLIER_THAN_START_TIME);","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"        Event event \u003d new Event(name, date, startTime, endTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"        return new AddCommand(event);","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"JrmCkh":30,"lhy-hoyin":9,"-":20}},{"path":"src/main/java/ezschedule/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"     **/","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"JrmCkh":3,"lhy-hoyin":1,"-":58}},{"path":"src/main/java/ezschedule/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"JrmCkh"},"content":"        private int startPosition;","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"JrmCkh":2,"lhy-hoyin":1,"-":144}},{"path":"src/main/java/ezschedule/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands.","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"    public static final Prefix PREFIX_START \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"    public static final Prefix PREFIX_END \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"    public static final Prefix PREFIX_EVERY \u003d new Prefix(\"every/\");","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"JrmCkh":4,"lhy-hoyin":1,"anthonynmh":1,"-":8}},{"path":"src/main/java/ezschedule/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"            List\u003cIndex\u003e indexes \u003d ParserUtil.parseMultipleIndex(args);","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"            return new DeleteCommand(indexes);","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"JrmCkh":4,"lhy-hoyin":6,"-":20}},{"path":"src/main/java/ezschedule/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.EditCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":" * Parses input arguments and creates a new EditCommand object.","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATE, PREFIX_START, PREFIX_END);","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"            editEventDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"            editEventDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"        if (argMultimap.getValue(PREFIX_START).isPresent()) {","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"            editEventDescriptor.setStartTime(ParserUtil.parseTime(argMultimap.getValue(PREFIX_START).get()));","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"        if (argMultimap.getValue(PREFIX_END).isPresent()) {","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"            editEventDescriptor.setEndTime(ParserUtil.parseTime(argMultimap.getValue(PREFIX_END).get()));","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"anthonynmh"},"content":"        if (!editEventDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"anthonynmh"},"content":"        return new EditCommand(index, editEventDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"JrmCkh":17,"lhy-hoyin":7,"anthonynmh":3,"-":33}},{"path":"src/main/java/ezschedule/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.FindCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.commands.FindCommand.FindEventDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"     * Returns true if any of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"     * in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"    private static boolean areAnyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"                ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_DATE);","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"        if (!areAnyPrefixesPresent(argMultimap, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_DATE)","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"        FindEventDescriptor findEventDescriptor \u003d new FindEventDescriptor();","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"            findEventDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get()));","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_DATE).isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"            findEventDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(CliSyntax.PREFIX_DATE).get()));","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"        return new FindCommand(findEventDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"JrmCkh":25,"lhy-hoyin":4,"-":20}},{"path":"src/main/java/ezschedule/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"JrmCkh":1,"lhy-hoyin":3,"-":13}},{"path":"src/main/java/ezschedule/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.StringUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Date;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Name;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"import ezschedule.model.event.RecurFactor;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Time;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it.","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"     * Parses {@code oneBasedIndexes} into an {@code List\u003cIndex\u003e} and returns it.","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"    public static List\u003cIndex\u003e parseMultipleIndex(String oneBasedIndexes) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"        String trimmedIndexes \u003d oneBasedIndexes.trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"        String[] indexes \u003d trimmedIndexes.split(\" \");","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"        List\u003cIndex\u003e indexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"        for (String index : indexes) {","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"            if (!StringUtil.isNonZeroUnsignedInteger(index)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"                throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"            indexList.add(Index.fromOneBased(Integer.parseInt(index)));","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"        return indexList;","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"     * Parses a {@code String date} into a {@code Date}.","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"JrmCkh"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"JrmCkh"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"JrmCkh"},"content":"     * Parses a {@code String time} into a {@code Time}.","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"JrmCkh"},"content":"     * @throws ParseException if the given {@code time} is invalid.","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"JrmCkh"},"content":"    public static Time parseTime(String time) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"JrmCkh"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"JrmCkh"},"content":"        if (!Time.isValidTime(trimmedTime)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"JrmCkh"},"content":"            throw new ParseException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"JrmCkh"},"content":"        return new Time(trimmedTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"anthonynmh"},"content":"     * Parses a {@code String date} into a {@code String}.","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"anthonynmh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"anthonynmh"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"anthonynmh"},"content":"     * @throws ParseException if the given {@code recurFactor} is invalid.","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"anthonynmh"},"content":"    public static RecurFactor parseRecurFactor(String recurFactor) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(recurFactor);","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"anthonynmh"},"content":"        String trimmedRecurFactor \u003d recurFactor.trim();","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"anthonynmh"},"content":"        if (!RecurFactor.isValidRecurFactor(trimmedRecurFactor)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"anthonynmh"},"content":"            throw new ParseException(RecurFactor.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"anthonynmh"},"content":"        return new RecurFactor(trimmedRecurFactor);","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"JrmCkh":41,"lhy-hoyin":7,"anthonynmh":16,"-":51}},{"path":"src/main/java/ezschedule/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"lhy-hoyin":1,"-":38}},{"path":"src/main/java/ezschedule/logic/parser/RecurCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"import ezschedule.commons.core.Messages;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"import ezschedule.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"import ezschedule.logic.commands.RecurCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"import ezschedule.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"import ezschedule.model.event.Date;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"import ezschedule.model.event.RecurFactor;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":" * Parses input arguments and creates a new RecurCommand object.","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"public class RecurCommandParser implements Parser\u003cRecurCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"     * in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"     * Parses the given {@code String} of arguments in the context of the RecurCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"     * and returns a RecurCommand object for execution.","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"    public RecurCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"                ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_DATE, CliSyntax.PREFIX_EVERY);","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"        Index index;","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"        Date endDate;","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"        RecurFactor recurFactor;","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_DATE, CliSyntax.PREFIX_EVERY)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"                    RecurCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"        endDate \u003d ParserUtil.parseDate(argMultimap.getValue(CliSyntax.PREFIX_DATE).get());","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"        recurFactor \u003d ParserUtil.parseRecurFactor(argMultimap.getValue(CliSyntax.PREFIX_EVERY).get());","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"        return new RecurCommand(index, endDate, recurFactor);","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"anthonynmh":53}},{"path":"src/main/java/ezschedule/logic/parser/SchedulerParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.AddCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.EditCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.FindCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.ListCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"import ezschedule.logic.commands.RecurCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.ShowNextCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"BigheartSmallbrain"},"content":"import ezschedule.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"public class SchedulerParser {","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"        case ShowNextCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"            return new ShowNextCommandParser().parse(arguments);","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"BigheartSmallbrain"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"BigheartSmallbrain"},"content":"            return new UndoCommand();","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":77,"author":{"gitId":"anthonynmh"},"content":"        case RecurCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"anthonynmh"},"content":"            return new RecurCommandParser().parse(arguments);","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JrmCkh":1,"BigheartSmallbrain":3,"lhy-hoyin":18,"anthonynmh":3,"-":59}},{"path":"src/main/java/ezschedule/logic/parser/ShowNextCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.ShowNextCommand.SHOW_UPCOMING_COUNT_ONE;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.ShowNextCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.UpcomingEventPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":" * Parses input arguments and creates a new ShowNextCommandParser object","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"public class ShowNextCommandParser implements Parser\u003cShowNextCommand\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"     * Parses the given {@code String} of arguments in the context of the ShowNextCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"     * and returns an ShowNextCommand object for execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"    public ShowNextCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        // No argument provided, just show the next one","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"        if (userInput.isBlank()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"            return new ShowNextCommand(new UpcomingEventPredicate(SHOW_UPCOMING_COUNT_ONE));","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"            int count \u003d Integer.parseInt(userInput.trim());","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"            if (count \u003e 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"                return new ShowNextCommand(new UpcomingEventPredicate(count));","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"            // Empty here; another exception is throw outside.","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        throw new ParseException(","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ShowNextCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"JrmCkh":3,"lhy-hoyin":37}},{"path":"src/main/java/ezschedule/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser.exceptions;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"lhy-hoyin":2,"-":15}},{"path":"src/main/java/ezschedule/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"BigheartSmallbrain"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.GuiSettings;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"BigheartSmallbrain"},"content":"import ezschedule.logic.commands.Command;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"     * {@code Predicate} that always evaluate to false","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_NO_EVENTS \u003d unused -\u003e false;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"     * Returns the user prefs\u0027 scheduler file path.","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"    Path getSchedulerFilePath();","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"     * Sets the user prefs\u0027 scheduler file path.","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"    void setSchedulerFilePath(Path schedulerFilePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"     * Returns the Scheduler.","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"    ReadOnlyScheduler getScheduler();","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"     * Replaces scheduler data with the data in {@code scheduler}.","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"    void setScheduler(ReadOnlyScheduler scheduler);","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the scheduler.","lastModifiedDate":"2023-04-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"anthonynmh"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"     * Returns true if another event exists at the same time as {@code event} in the scheduler.","lastModifiedDate":"2023-04-03"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"    boolean hasEventAtTime(Event event);","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"anthonynmh"},"content":"     * Adds the given event.","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"anthonynmh"},"content":"     * {@code event} must not already exist in the scheduler.","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"anthonynmh"},"content":"    void addEvent(Event event);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":83,"author":{"gitId":"JrmCkh"},"content":"     * Deletes the given event.","lastModifiedDate":"2023-04-03"},{"lineNumber":84,"author":{"gitId":"JrmCkh"},"content":"     * {@code event} must exist in the scheduler.","lastModifiedDate":"2023-04-03"},{"lineNumber":85,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":86,"author":{"gitId":"JrmCkh"},"content":"    void deleteEvent(Event event);","lastModifiedDate":"2023-04-03"},{"lineNumber":87,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"JrmCkh"},"content":"     * Replaces the given event {@code target} with {@code editedEvent}.","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"JrmCkh"},"content":"     * {@code target} must exist in the scheduler.","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"anthonynmh"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing Event in the scheduler.","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"anthonynmh"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":95,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":96,"author":{"gitId":"JrmCkh"},"content":"     * Adds the given event as recent event.","lastModifiedDate":"2023-04-03"},{"lineNumber":97,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":98,"author":{"gitId":"BigheartSmallbrain"},"content":"    void addRecentEvent(Event event);","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":100,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":101,"author":{"gitId":"JrmCkh"},"content":"     * Clears the recent event.","lastModifiedDate":"2023-04-03"},{"lineNumber":102,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":103,"author":{"gitId":"BigheartSmallbrain"},"content":"    void clearRecent();","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":105,"author":{"gitId":"JrmCkh"},"content":"    ArrayList\u003cCommand\u003e recentCommand();","lastModifiedDate":"2023-04-03"},{"lineNumber":106,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":107,"author":{"gitId":"JrmCkh"},"content":"    ArrayList\u003cEvent\u003e recentEvent();","lastModifiedDate":"2023-04-03"},{"lineNumber":108,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":109,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"JrmCkh"},"content":"     * Returns an unmodifiable view of the event list","lastModifiedDate":"2023-03-26"},{"lineNumber":111,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":112,"author":{"gitId":"JrmCkh"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2023-03-26"},{"lineNumber":113,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"JrmCkh"},"content":"     * Returns an unmodifiable view of the filtered event list","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"anthonynmh"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"JrmCkh"},"content":"     * Returns an unmodifiable view of the upcoming event list","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"JrmCkh"},"content":"    ObservableList\u003cEvent\u003e getUpcomingEventList();","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"JrmCkh"},"content":"     * Returns an unmodifiable view of the find command event list","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"JrmCkh"},"content":"    ObservableList\u003cEvent\u003e getFindEventList();","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"anthonynmh"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"anthonynmh"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"JrmCkh"},"content":"     * Updates the filter of the upcoming event list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"JrmCkh"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"JrmCkh"},"content":"    void updateUpcomingEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"JrmCkh"},"content":"     * Updates the filter of the find event list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"JrmCkh"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"JrmCkh"},"content":"    void updateFindEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"JrmCkh":82,"BigheartSmallbrain":4,"lhy-hoyin":4,"anthonynmh":9,"-":50}},{"path":"src/main/java/ezschedule/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.ShowNextCommand.SHOW_UPCOMING_COUNT_ONE;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"BigheartSmallbrain"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.GuiSettings;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.LogsCenter;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"BigheartSmallbrain"},"content":"import ezschedule.logic.commands.Command;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.UpcomingEventPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":" * Represents the in-memory model of the scheduler data.","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"    private final Scheduler scheduler;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    private final FilteredList\u003cEvent\u003e upcomingEvents;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"    private final FilteredList\u003cEvent\u003e findEvents;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"    private ArrayList\u003cCommand\u003e recentCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"    private ArrayList\u003cEvent\u003e recentEvent;","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"     * Initializes a ModelManager with the given scheduler and userPrefs.","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"    public ModelManager(ReadOnlyScheduler scheduler, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"        requireAllNonNull(scheduler, userPrefs);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"        logger.fine(\"Initializing with scheduler: \" + scheduler + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"        this.scheduler \u003d new Scheduler(scheduler);","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.scheduler.getEventList());","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"        upcomingEvents \u003d new FilteredList\u003c\u003e(this.scheduler.getEventList());","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"        findEvents \u003d new FilteredList\u003c\u003e(this.scheduler.getEventList());","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"        recentCommand \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"        recentEvent \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"        updateUpcomingEventList(new UpcomingEventPredicate(SHOW_UPCOMING_COUNT_ONE));","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"        updateFindEventList(PREDICATE_SHOW_NO_EVENTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"        this(new Scheduler(), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"BigheartSmallbrain"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"     * Constructs a ModelManager.","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"BigheartSmallbrain"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"BigheartSmallbrain"},"content":"    public ModelManager(ArrayList\u003cCommand\u003e command, ArrayList\u003cEvent\u003e event) {","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"BigheartSmallbrain"},"content":"        this(new Scheduler(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"BigheartSmallbrain"},"content":"        this.recentCommand \u003d command;","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"BigheartSmallbrain"},"content":"        this.recentEvent \u003d event;","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"        return userPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"JrmCkh"},"content":"    public Path getSchedulerFilePath() {","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"JrmCkh"},"content":"        return userPrefs.getSchedulerFilePath();","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"JrmCkh"},"content":"    public void setSchedulerFilePath(Path schedulerFilePath) {","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"JrmCkh"},"content":"        requireNonNull(schedulerFilePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"JrmCkh"},"content":"        userPrefs.setSchedulerFilePath(schedulerFilePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"JrmCkh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Scheduler \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"JrmCkh"},"content":"    public ReadOnlyScheduler getScheduler() {","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"JrmCkh"},"content":"        return scheduler;","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"JrmCkh"},"content":"    public void setScheduler(ReadOnlyScheduler scheduler) {","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"JrmCkh"},"content":"        this.scheduler.resetData(scheduler);","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"anthonynmh"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"JrmCkh"},"content":"        return scheduler.hasEvent(event);","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"JrmCkh"},"content":"    public boolean hasEventAtTime(Event event) {","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"JrmCkh"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"JrmCkh"},"content":"        return scheduler.hasEventAtTime(event);","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":125,"author":{"gitId":"anthonynmh"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"JrmCkh"},"content":"        scheduler.removeEvent(target);","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"JrmCkh"},"content":"        updateUpcomingEventList(new UpcomingEventPredicate());","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"JrmCkh"},"content":"        updateFindEventList(PREDICATE_SHOW_NO_EVENTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"anthonynmh"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"JrmCkh"},"content":"        scheduler.addEvent(event);","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"anthonynmh"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"JrmCkh"},"content":"        updateUpcomingEventList(new UpcomingEventPredicate());","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"JrmCkh"},"content":"        updateFindEventList(PREDICATE_SHOW_NO_EVENTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":140,"author":{"gitId":"anthonynmh"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"anthonynmh"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"JrmCkh"},"content":"        scheduler.setEvent(target, editedEvent);","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"JrmCkh"},"content":"        updateUpcomingEventList(new UpcomingEventPredicate());","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"JrmCkh"},"content":"        updateFindEventList(PREDICATE_SHOW_NO_EVENTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":146,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":147,"author":{"gitId":"BigheartSmallbrain"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"BigheartSmallbrain"},"content":"    public ArrayList\u003cCommand\u003e recentCommand() {","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"BigheartSmallbrain"},"content":"        return this.recentCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":152,"author":{"gitId":"BigheartSmallbrain"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"BigheartSmallbrain"},"content":"    public ArrayList\u003cEvent\u003e recentEvent() {","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"BigheartSmallbrain"},"content":"        return this.recentEvent;","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":157,"author":{"gitId":"BigheartSmallbrain"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"BigheartSmallbrain"},"content":"    public void addRecentEvent(Event event) {","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"BigheartSmallbrain"},"content":"        this.recentEvent.add(event);","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":162,"author":{"gitId":"BigheartSmallbrain"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"BigheartSmallbrain"},"content":"    public void clearRecent() {","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"BigheartSmallbrain"},"content":"        this.recentCommand.clear();","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"BigheartSmallbrain"},"content":"        this.recentEvent.clear();","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"BigheartSmallbrain"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"JrmCkh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Event List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":171,"author":{"gitId":"JrmCkh"},"content":"     * Returns an unmodifiable view of the list of {@code Event} backed by the internal list of {@code scheduler}.","lastModifiedDate":"2023-04-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":173,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":174,"author":{"gitId":"JrmCkh"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-03-26"},{"lineNumber":175,"author":{"gitId":"JrmCkh"},"content":"        return scheduler.getEventList();","lastModifiedDate":"2023-03-26"},{"lineNumber":176,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":179,"author":{"gitId":"anthonynmh"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"JrmCkh"},"content":"        return filteredEvents;","lastModifiedDate":"2023-03-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":183,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"JrmCkh"},"content":"    public ObservableList\u003cEvent\u003e getUpcomingEventList() {","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"JrmCkh"},"content":"        return upcomingEvents;","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":188,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"JrmCkh"},"content":"    public ObservableList\u003cEvent\u003e getFindEventList() {","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"JrmCkh"},"content":"        return findEvents;","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":194,"author":{"gitId":"anthonynmh"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":196,"author":{"gitId":"JrmCkh"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2023-03-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":199,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":200,"author":{"gitId":"JrmCkh"},"content":"    public void updateUpcomingEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"JrmCkh"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"JrmCkh"},"content":"        upcomingEvents.setPredicate(predicate);","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":205,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"JrmCkh"},"content":"    public void updateFindEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"JrmCkh"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"JrmCkh"},"content":"        findEvents.setPredicate(predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":210,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"JrmCkh"},"content":"        return scheduler.equals(other.scheduler)","lastModifiedDate":"2023-03-18"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":227,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 filteredEvents.equals(other.filteredEvents);","lastModifiedDate":"2023-03-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JrmCkh":89,"BigheartSmallbrain":28,"lhy-hoyin":6,"anthonynmh":9,"-":97}},{"path":"src/main/java/ezschedule/model/ReadOnlyScheduler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":" * Unmodifiable view of the scheduler","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"public interface ReadOnlyScheduler {","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JrmCkh":4,"lhy-hoyin":3,"anthonynmh":1,"-":8}},{"path":"src/main/java/ezschedule/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.GuiSettings;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"    Path getSchedulerFilePath();","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"JrmCkh":1,"lhy-hoyin":2,"-":12}},{"path":"src/main/java/ezschedule/model/Scheduler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.UniqueEventList;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":" * Wraps all data at the scheduler level","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":" * Duplicates are not allowed (by .isSameEvent comparison)","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"public class Scheduler implements ReadOnlyScheduler {","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"    {","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"     * Construct an instance of Scheduler object.","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"     * Listeners are attached in here.","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    public Scheduler() {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        // Attach a listener to auto-sort events in chronological order","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        events.addListChangeListener(c -\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"            while (c.next()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"                if (!c.wasPermutated()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"                    events.sortByChronologicalOrder();","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"                }","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        });","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"     * Creates a Scheduler using the Events in the {@code toBeCopied}","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"    public Scheduler(ReadOnlyScheduler toBeCopied) {","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"anthonynmh"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"anthonynmh"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"     * Resets the existing data of this {@code Scheduler} with {@code newData}.","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"    public void resetData(ReadOnlyScheduler newData) {","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"anthonynmh"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"    //// event-level operations","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the scheduler.","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"anthonynmh"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"anthonynmh"},"content":"        return events.contains(event);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"JrmCkh"},"content":"     * Returns true if another event exists at the given date and time in the Scheduler.","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"JrmCkh"},"content":"    public boolean hasEventAtTime(Event event) {","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"JrmCkh"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"JrmCkh"},"content":"        return events.existsAtTime(event);","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"JrmCkh"},"content":"     * Adds an event to the scheduler.","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"JrmCkh"},"content":"     * The event must not already exist in the scheduler.","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"anthonynmh"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"anthonynmh"},"content":"        events.add(e);","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"JrmCkh"},"content":"     * Replaces the given event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"JrmCkh"},"content":"     * {@code target} must exist in the scheduler.","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"JrmCkh"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the scheduler.","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"anthonynmh"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"anthonynmh"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"JrmCkh"},"content":"     * Removes {@code key} from this {@code Scheduler}.","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"JrmCkh"},"content":"     * {@code key} must exist in the scheduler","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"anthonynmh"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"anthonynmh"},"content":"        events.remove(key);","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"JrmCkh"},"content":"        return events.asUnmodifiableObservableList().size() + \" events\";","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"anthonynmh"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"anthonynmh"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"JrmCkh"},"content":"                || (other instanceof Scheduler // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 events.equals(((Scheduler) other).events));","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"anthonynmh"},"content":"        return events.hashCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JrmCkh":31,"lhy-hoyin":19,"anthonynmh":18,"-":71}},{"path":"src/main/java/ezschedule/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.GuiSettings;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"    private Path schedulerFilePath \u003d Paths.get(\"data\", \"scheduler.json\");","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"        setSchedulerFilePath(newUserPrefs.getSchedulerFilePath());","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"    public Path getSchedulerFilePath() {","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"        return schedulerFilePath;","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"    public void setSchedulerFilePath(Path schedulerFilePath) {","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"        requireNonNull(schedulerFilePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"        this.schedulerFilePath \u003d schedulerFilePath;","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 schedulerFilePath.equals(o.schedulerFilePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"        return Objects.hash(guiSettings, schedulerFilePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"JrmCkh"},"content":"        sb.append(\"\\nLocal data file location : \" + schedulerFilePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JrmCkh":10,"lhy-hoyin":2,"-":74}},{"path":"src/main/java/ezschedule/model/event/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model.event;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"import static java.time.temporal.ChronoUnit.DAYS;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"import static java.time.temporal.ChronoUnit.MONTHS;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"import static java.time.temporal.ChronoUnit.YEARS;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.AppUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":" * Represents an Event\u0027s date in the scheduler.","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"public class Date implements Comparable\u003cDate\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"            \"Date should only contain numeric characters, follows the format yyyy-MM-dd, and it should not be blank\";","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\";","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"    public final LocalDate date;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"     * @param date A valid date.","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"    public Date(String date) {","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        AppUtil.checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"        this.date \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"    public long getDaysBetween(LocalDate comparingDate) {","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"        return DAYS.between(date, comparingDate);","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"    public long getMonthsBetween(LocalDate comparingDate) {","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"        return MONTHS.between(date, comparingDate);","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"anthonynmh"},"content":"    public long getYearsBetween(LocalDate comparingDate) {","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"anthonynmh"},"content":"        return YEARS.between(date, comparingDate);","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"anthonynmh"},"content":"    public boolean isPastDate() {","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"anthonynmh"},"content":"        return date.isBefore(LocalDate.now());","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"anthonynmh"},"content":"    public boolean isFutureDate() {","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"anthonynmh"},"content":"        return date.isAfter(LocalDate.now());","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"     * Returns the year value of date.","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"    public int getYear() {","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"        return date.getYear();","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"     * Returns the month value of date.","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"    public int getMonth() {","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"        return date.getMonthValue();","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"     * Returns the day value of date.","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"    public int getDay() {","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"JrmCkh"},"content":"        return date.getDayOfMonth();","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"    public int compareTo(Date otherDate) {","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"        return date.compareTo(otherDate.date);","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"JrmCkh"},"content":"    public String toString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"        return date.toString();","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"JrmCkh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"JrmCkh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"JrmCkh"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 date.equals(((Date) other).date)); // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"JrmCkh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"JrmCkh"},"content":"        return date.hashCode();","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"JrmCkh":74,"lhy-hoyin":10,"anthonynmh":23}},{"path":"src/main/java/ezschedule/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model.event;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":" * Represents an Event in the scheduler.","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"public class Event implements Comparable\u003cEvent\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"    private final Name name;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"    private final Date date;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"    private final Time startTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"    private final Time endTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"    public Event(Name name, Date date, Time startTime, Time endTime) {","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"    public Name getName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"        return name;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    public Date getDate() {","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"        return date;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"    public Time getStartTime() {","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"        return startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"    public Time getEndTime() {","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"        return endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns true if the event has been completed/is over.","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"     * @return true if event is completed.","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"        if (date.isPastDate()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"            return true; // Event is before today","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        } else if (date.isFutureDate()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"            return false; // Event is after today","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"            // Event is sometime today","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"            // Is current time passed the event end time?","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"            return endTime.isPastTime();","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"     * Returns true if otherEvent\u0027s date and time overlaps this event.","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"     * @param otherEvent the other event to compare to.","lastModifiedDate":"2023-04-03"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"     * @return true if event is overlap; otherwise, false.","lastModifiedDate":"2023-04-03"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"    public boolean isEventOverlap(Event otherEvent) {","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"        return isSameDate(otherEvent) \u0026\u0026 isTimeOverlap(otherEvent);","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"    public int compareTo(Event otherEvent) {","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"            return 0;","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"        int result \u003d getDate().compareTo(otherEvent.getDate());","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"        if (result !\u003d 0) {","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"            return result;","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"        return getStartTime().compareTo(otherEvent.getStartTime());","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"anthonynmh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"anthonynmh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"anthonynmh"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"anthonynmh"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"anthonynmh"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"anthonynmh"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"anthonynmh"},"content":"        return otherEvent.getName().equals(getName())","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 otherEvent.getDate().equals(getDate())","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 otherEvent.getStartTime().equals(getStartTime())","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 otherEvent.getEndTime().equals(getEndTime());","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"JrmCkh"},"content":"    public String toString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"JrmCkh"},"content":"        final StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"JrmCkh"},"content":"        sb.append(\"\\nName: \")","lastModifiedDate":"2023-04-03"},{"lineNumber":102,"author":{"gitId":"JrmCkh"},"content":"                .append(getName())","lastModifiedDate":"2023-04-03"},{"lineNumber":103,"author":{"gitId":"JrmCkh"},"content":"                .append(\"\\nDate: \")","lastModifiedDate":"2023-04-03"},{"lineNumber":104,"author":{"gitId":"JrmCkh"},"content":"                .append(getDate())","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"JrmCkh"},"content":"                .append(\"\\nStart time: \")","lastModifiedDate":"2023-04-03"},{"lineNumber":106,"author":{"gitId":"JrmCkh"},"content":"                .append(getStartTime())","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"JrmCkh"},"content":"                .append(\"\\nEnd time: \")","lastModifiedDate":"2023-04-03"},{"lineNumber":108,"author":{"gitId":"JrmCkh"},"content":"                .append(getEndTime());","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"JrmCkh"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":112,"author":{"gitId":"JrmCkh"},"content":"    private boolean isSameDate(Event otherEvent) {","lastModifiedDate":"2023-04-03"},{"lineNumber":113,"author":{"gitId":"JrmCkh"},"content":"        return this.getDate().equals(otherEvent.getDate());","lastModifiedDate":"2023-04-03"},{"lineNumber":114,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":115,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":116,"author":{"gitId":"JrmCkh"},"content":"    private boolean isTimeOverlap(Event otherEvent) {","lastModifiedDate":"2023-04-03"},{"lineNumber":117,"author":{"gitId":"JrmCkh"},"content":"        return isTimeIsEqual(otherEvent)","lastModifiedDate":"2023-04-03"},{"lineNumber":118,"author":{"gitId":"JrmCkh"},"content":"                || isTimeInBetween(otherEvent)","lastModifiedDate":"2023-04-03"},{"lineNumber":119,"author":{"gitId":"JrmCkh"},"content":"                || isStartTimeOverlap(otherEvent)","lastModifiedDate":"2023-04-03"},{"lineNumber":120,"author":{"gitId":"JrmCkh"},"content":"                || isEndTimeOverlap(otherEvent);","lastModifiedDate":"2023-04-03"},{"lineNumber":121,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":122,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":123,"author":{"gitId":"JrmCkh"},"content":"    private boolean isTimeIsEqual(Event otherEvent) {","lastModifiedDate":"2023-04-03"},{"lineNumber":124,"author":{"gitId":"JrmCkh"},"content":"        return otherEvent.getStartTime().equals(getStartTime())","lastModifiedDate":"2023-04-03"},{"lineNumber":125,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 otherEvent.getEndTime().equals(getEndTime());","lastModifiedDate":"2023-04-03"},{"lineNumber":126,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":127,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":128,"author":{"gitId":"JrmCkh"},"content":"    private boolean isTimeInBetween(Event otherEvent) {","lastModifiedDate":"2023-04-03"},{"lineNumber":129,"author":{"gitId":"JrmCkh"},"content":"        return otherEvent.getStartTime().isAfter(getStartTime())","lastModifiedDate":"2023-04-03"},{"lineNumber":130,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 otherEvent.getEndTime().isBefore(getEndTime());","lastModifiedDate":"2023-04-03"},{"lineNumber":131,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":132,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":133,"author":{"gitId":"JrmCkh"},"content":"    private boolean isStartTimeOverlap(Event otherEvent) {","lastModifiedDate":"2023-04-03"},{"lineNumber":134,"author":{"gitId":"JrmCkh"},"content":"        return (otherEvent.getStartTime().isBefore(getStartTime())","lastModifiedDate":"2023-04-03"},{"lineNumber":135,"author":{"gitId":"JrmCkh"},"content":"                || otherEvent.getStartTime().equals(getStartTime()))","lastModifiedDate":"2023-04-03"},{"lineNumber":136,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 otherEvent.getEndTime().isAfter(getStartTime());","lastModifiedDate":"2023-04-03"},{"lineNumber":137,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":138,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":139,"author":{"gitId":"JrmCkh"},"content":"    private boolean isEndTimeOverlap(Event otherEvent) {","lastModifiedDate":"2023-04-03"},{"lineNumber":140,"author":{"gitId":"JrmCkh"},"content":"        return otherEvent.getStartTime().isBefore(getEndTime())","lastModifiedDate":"2023-04-03"},{"lineNumber":141,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 (otherEvent.getEndTime().isAfter(getEndTime())","lastModifiedDate":"2023-04-03"},{"lineNumber":142,"author":{"gitId":"JrmCkh"},"content":"                || otherEvent.getEndTime().equals(getEndTime()));","lastModifiedDate":"2023-04-03"},{"lineNumber":143,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":144,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JrmCkh":80,"lhy-hoyin":31,"anthonynmh":33}},{"path":"src/main/java/ezschedule/model/event/EventContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model.event;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.StringUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":" * Tests that an {@code Event}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"public class EventContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"    public EventContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"            .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(event.getName().fullName, keyword));","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"            || (other instanceof EventContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"            \u0026\u0026 keywords.equals(((EventContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JrmCkh":3,"lhy-hoyin":3,"anthonynmh":25}},{"path":"src/main/java/ezschedule/model/event/EventMatchesDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":" * Tests that a {@code Event}\u0027s {@code Date} matches the date given.","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"public class EventMatchesDatePredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"    private final Date date;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"    public EventMatchesDatePredicate(Date date) {","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"        return date.equals(event.getDate());","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"                || (other instanceof EventMatchesDatePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 date.equals(((EventMatchesDatePredicate) other).date)); // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"JrmCkh":27}},{"path":"src/main/java/ezschedule/model/event/EventMatchesKeywordsAndDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.commons.util.StringUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":" * Tests that a {@code Event}\u0027s {@code Name} matches any of the keywords and {@code Date} matches the date given.","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"public class EventMatchesKeywordsAndDatePredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"    private final Date date;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"     * Constructor for EventMatchesKeywordsAndDatePredicate.","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"    public EventMatchesKeywordsAndDatePredicate(List\u003cString\u003e keywords, Date date) {","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(event.getName().fullName, keyword)","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"                        \u0026\u0026 date.equals(event.getDate()));","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"                || (other instanceof EventMatchesKeywordsAndDatePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 keywords.equals(((EventMatchesKeywordsAndDatePredicate) other).keywords) // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 date.equals(((EventMatchesKeywordsAndDatePredicate) other).date)); // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"JrmCkh":38}},{"path":"src/main/java/ezschedule/model/event/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model.event;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.AppUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":" * Represents an Event\u0027s name in the scheduler.","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"        \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        AppUtil.checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"            || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"            \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"JrmCkh":5,"lhy-hoyin":4,"-":49}},{"path":"src/main/java/ezschedule/model/event/RecurFactor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"package ezschedule.model.event;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"import ezschedule.commons.util.AppUtil;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":" * Represents the factor {day, week, month} to recur and event.","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"public class RecurFactor {","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"            \"RecurFactor should only be {day, week, month}\";","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"    public static final String VALIDATION_REGEX_DAY \u003d \"day\";","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"    public static final String VALIDATION_REGEX_WEEK \u003d \"week\";","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"    public static final String VALIDATION_REGEX_MONTH \u003d \"month\";","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"    private final String factor;","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"     * Constructs a {@code RecurFactor}.","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"     * @param factor A valid factor.","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"    public RecurFactor(String factor) {","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(factor);","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"        AppUtil.checkArgument(isValidRecurFactor(factor), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"        this.factor \u003d factor;","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"     * Tests for valid recur factor strictly in {day, week, month}.","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"     * @param test the string to test","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"     * @return boolean result of validity","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"    public static boolean isValidRecurFactor(String test) {","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"        return (test.matches(VALIDATION_REGEX_DAY)","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"                | test.matches(VALIDATION_REGEX_WEEK)","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"                | test.matches(VALIDATION_REGEX_MONTH));","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"    public String toString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"        return factor;","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"                || (other instanceof RecurFactor // instanceof handles nulls","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"anthonynmh"},"content":"                \u0026\u0026 factor.equals(((RecurFactor) other).factor)); // state check","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"anthonynmh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"anthonynmh"},"content":"        return factor.hashCode();","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"anthonynmh":59}},{"path":"src/main/java/ezschedule/model/event/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model.event;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.AppUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":" * Represents an Event\u0027s time in the scheduler.","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTime(String)}","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"public class Time implements Comparable\u003cTime\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"            \"Time should only contain numeric characters, follows the format HH:mm, and it should not be blank\";","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{2}:\\\\d{2}$\";","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"    public final LocalTime time;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"     * Constructs a {@code Time}.","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"     * @param time A valid time.","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    public Time(String time) {","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        AppUtil.checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"        this.time \u003d LocalTime.parse(time, formatter);","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"     * Returns true if a given string is a valid time.","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"     * Returns true if this time has past current present time.","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"    public boolean isPastTime() {","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"        return time.isBefore(LocalTime.now());","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"     * Returns true if time is before given time.","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"    public boolean isBefore(Time other) {","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"        return this.time.isBefore(other.time);","lastModifiedDate":"2023-04-03"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"     * Returns true if time is after given time.","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"    public boolean isAfter(Time other) {","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"        return this.time.isAfter(other.time);","lastModifiedDate":"2023-04-03"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"    public int compareTo(Time otherTime) {","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"        return time.compareTo(otherTime.time);","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"                || (other instanceof Time // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 time.equals(((Time) other).time)); // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"    public String toString() {","lastModifiedDate":"2023-04-03"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"        return time.toString();","lastModifiedDate":"2023-04-03"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-04-03"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-04-03"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"        return time.hashCode();","lastModifiedDate":"2023-04-03"},{"lineNumber":83,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"JrmCkh":70,"lhy-hoyin":7,"anthonynmh":7}},{"path":"src/main/java/ezschedule/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model.event;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":" * A event is considered unique by comparing using {@code Event#isSameEvent(Event)}. As such, adding and updating of","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":" * events uses Event#isSameEvent(Event) for equality so as to ensure that the event being added or updated is","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":" * unique in terms of identity in the UniqueEventList. However, the removal of a event uses Event#equals(Object) so","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":" * as to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":" * as to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"     * Returns true if the list contains an event at the given date and time.","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"    public boolean existsAtTime(Event toCheck) {","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"        return internalList.stream().anyMatch(toCheck::isEventOverlap);","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"     * Attach {@code listener}, which is called whenever internalList is changed.","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"     * @param listener A ListChangeListener to be called.","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"    public void addListChangeListener(ListChangeListener\u003cEvent\u003e listener) {","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"        internalList.addListener(listener);","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"     * Sorts all events in chronological order.","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"    public void sortByChronologicalOrder() {","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"        FXCollections.sort(internalList);","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"     * Adds an event to the list.","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"     * The event must not already exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"anthonynmh"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"anthonynmh"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"anthonynmh"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"     * Replaces the event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"anthonynmh"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the list.","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"anthonynmh"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"        CollectionUtil.requireAllNonNull(target, editedEvent);","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"anthonynmh"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"anthonynmh"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"JrmCkh"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"JrmCkh"},"content":"        if (!target.equals(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":89,"author":{"gitId":"JrmCkh"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"anthonynmh"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"JrmCkh"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"JrmCkh"},"content":"     * The event must exist in the list.","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"anthonynmh"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"anthonynmh"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"JrmCkh"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"anthonynmh"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"anthonynmh"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"anthonynmh"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"JrmCkh"},"content":"     * Replaces the contents of this list with {@code events}.","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"JrmCkh"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"anthonynmh"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"lhy-hoyin"},"content":"        CollectionUtil.requireAllNonNull(events);","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"anthonynmh"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"JrmCkh"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"anthonynmh"},"content":"        internalList.setAll(events);","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"anthonynmh"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"anthonynmh"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"anthonynmh"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"anthonynmh"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"anthonynmh"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"anthonynmh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"anthonynmh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"anthonynmh"},"content":"                || (other instanceof UniqueEventList // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"anthonynmh"},"content":"                \u0026\u0026 internalList.equals(((UniqueEventList) other).internalList));","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"anthonynmh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"anthonynmh"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"JrmCkh"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2023-03-21"},{"lineNumber":148,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"anthonynmh"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"anthonynmh"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"anthonynmh"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"JrmCkh"},"content":"                if (events.get(i).equals(events.get(j))) {","lastModifiedDate":"2023-04-03"},{"lineNumber":153,"author":{"gitId":"anthonynmh"},"content":"                    return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"anthonynmh"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"anthonynmh"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"anthonynmh"},"content":"        return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JrmCkh":38,"lhy-hoyin":23,"anthonynmh":98}},{"path":"src/main/java/ezschedule/model/event/UpcomingEventPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":" * Tests that an {@code Event} is one of the upcoming events.","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":" * Only the first {@code count} number of upcoming events are considered.","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"public class UpcomingEventPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"    private static int upcomingCount;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"    private int count;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"     * Constructor for UpcomingEventPredicate to reuse the given count.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"    public UpcomingEventPredicate() {","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"        count \u003d upcomingCount;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"     * Constructor for UpcomingEventPredicate with given count.","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    public UpcomingEventPredicate(int count) {","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"        upcomingCount \u003d count;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"        this.count \u003d count;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    // Events should be in chronological order","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        if (event.isCompleted()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"            return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"        return count-- \u003e 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"                || (other instanceof UpcomingEventPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 count \u003d\u003d ((UpcomingEventPredicate) other).count); // state check","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"JrmCkh":15,"lhy-hoyin":30}},{"path":"src/main/java/ezschedule/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model.event.exceptions;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":" * Signals that the operation will result in duplicate Events","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":" * (Events are considered duplicates if they have the same identity).","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"        super(\"Operation would result in duplicate events\");","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JrmCkh":10,"lhy-hoyin":1}},{"path":"src/main/java/ezschedule/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model.event.exceptions;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"public class EventNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"JrmCkh":5,"lhy-hoyin":1}},{"path":"src/main/java/ezschedule/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model.tag;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.AppUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":" * Represents a Tag in the scheduler.","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"        AppUtil.checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JrmCkh":1,"lhy-hoyin":4,"-":50}},{"path":"src/main/java/ezschedule/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model.util;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyScheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Scheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Date;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Name;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Time;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.tag.Tag;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":" * Contains utility methods for populating {@code Scheduler} with sample data.","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"    public static Event[] getSampleEvents() {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"        return new Event[]{","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"            new Event(new Name(\"Tennis\"), new Date(\"2024-01-01\"), new Time(\"18:00\"), new Time(\"20:00\")),","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"            new Event(new Name(\"Basketball\"), new Date(\"2024-02-02\"), new Time(\"18:00\"), new Time(\"20:00\")),","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"            new Event(new Name(\"Bowling\"), new Date(\"2024-03-03\"), new Time(\"18:00\"), new Time(\"20:00\"))","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    public static ReadOnlyScheduler getSampleScheduler() {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"        Scheduler sampleSc \u003d new Scheduler();","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"        for (Event sampleEvent : getSampleEvents()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"            sampleSc.addEvent(sampleEvent);","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"        return sampleSc;","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"JrmCkh":9,"lhy-hoyin":8,"anthonynmh":3,"-":24}},{"path":"src/main/java/ezschedule/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Date;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Name;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Time;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"    private final String name;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"    private final String date;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"    private final String startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"    private final String endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given event details.","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name, @JsonProperty(\"date\") String date,","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"                            @JsonProperty(\"startTime\") String startTime, @JsonProperty(\"endTime\") String endTime) {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"        date \u003d source.getDate().date.toString();","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"        startTime \u003d source.getStartTime().time.toString();","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"        endTime \u003d source.getEndTime().time.toString();","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s {@code Event} object.","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"anthonynmh"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"anthonynmh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"anthonynmh"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"anthonynmh"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"        if (startTime \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName()));","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"        if (!Time.isValidTime(startTime)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"            throw new IllegalValueException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"        final Time modelStartTime \u003d new Time(startTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"        if (endTime \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName()));","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"        if (!Time.isValidTime(endTime)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"            throw new IllegalValueException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"JrmCkh"},"content":"        final Time modelEndTime \u003d new Time(endTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"JrmCkh"},"content":"        return new Event(modelName, modelDate, modelStartTime, modelEndTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JrmCkh":43,"lhy-hoyin":6,"anthonynmh":38}},{"path":"src/main/java/ezschedule/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.tag.Tag;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lhy-hoyin":3,"-":45}},{"path":"src/main/java/ezschedule/storage/JsonSchedulerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.LogsCenter;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.FileUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.JsonUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyScheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":" * A class to access Scheduler data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"public class JsonSchedulerStorage implements SchedulerStorage {","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonSchedulerStorage.class);","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"    private final Path filePath;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"    public JsonSchedulerStorage(Path filePath) {","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    public Path getSchedulerFilePath() {","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"    public Optional\u003cReadOnlyScheduler\u003e readScheduler() throws DataConversionException {","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"        return readScheduler(filePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"     * Similar to {@link #readScheduler()}.","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"    public Optional\u003cReadOnlyScheduler\u003e readScheduler(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"        Optional\u003cJsonSerializableScheduler\u003e jsonScheduler \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"            filePath, JsonSerializableScheduler.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"        if (!jsonScheduler.isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"            return Optional.of(jsonScheduler.get().toModelType());","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"    public void saveScheduler(ReadOnlyScheduler scheduler) throws IOException {","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"        saveScheduler(scheduler, filePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"     * Similar to {@link #saveScheduler(ReadOnlyScheduler)}.","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"    public void saveScheduler(ReadOnlyScheduler scheduler, Path filePath) throws IOException {","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"        requireNonNull(scheduler);","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableScheduler(scheduler), filePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JrmCkh":20,"lhy-hoyin":7,"-":52}},{"path":"src/main/java/ezschedule/storage/JsonSerializableScheduler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyScheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Scheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":" * An Immutable Scheduler that is serializable to JSON format.","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"@JsonRootName(value \u003d \"scheduler\")","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"class JsonSerializableScheduler {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Events list contains duplicate event(s).\";","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"     * Constructs a {@code JsonSerializableScheduler} with the given persons.","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    public JsonSerializableScheduler(@JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"        this.events.addAll(events);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"     * Converts a given {@code ReadOnlyScheduler} into this class for Jackson use.","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableScheduler}.","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"    public JsonSerializableScheduler(ReadOnlyScheduler source) {","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"     * Converts this scheduler into the model\u0027s {@code Scheduler} object.","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"    public Scheduler toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"        Scheduler scheduler \u003d new Scheduler();","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"            if (scheduler.hasEvent(event)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"            scheduler.addEvent(event);","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"        return scheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JrmCkh":16,"lhy-hoyin":5,"anthonynmh":5,"-":33}},{"path":"src/main/java/ezschedule/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.JsonUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"    private final Path filePath;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JrmCkh":2,"lhy-hoyin":5,"-":40}},{"path":"src/main/java/ezschedule/storage/SchedulerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyScheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Scheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":" * Represents a storage for {@link Scheduler}.","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"public interface SchedulerStorage {","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"    Path getSchedulerFilePath();","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"     * Returns Scheduler data as a {@link ReadOnlyScheduler}.","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    Optional\u003cReadOnlyScheduler\u003e readScheduler() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"     * @see #getSchedulerFilePath() ()","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"    Optional\u003cReadOnlyScheduler\u003e readScheduler(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"     * Saves the given {@link ReadOnlyScheduler} to the storage.","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"     * @param scheduler cannot be null.","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"    void saveScheduler(ReadOnlyScheduler scheduler) throws IOException;","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"     * @see #saveScheduler(ReadOnlyScheduler, Path) (ReadOnlyScheduler)","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"    void saveScheduler(ReadOnlyScheduler scheduler, Path filePath) throws IOException;","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"JrmCkh":43,"lhy-hoyin":4}},{"path":"src/main/java/ezschedule/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyScheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"public interface Storage extends SchedulerStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"    Path getSchedulerFilePath();","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"    Optional\u003cReadOnlyScheduler\u003e readScheduler() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    void saveScheduler(ReadOnlyScheduler scheduler) throws IOException;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"JrmCkh":4,"lhy-hoyin":5,"-":23}},{"path":"src/main/java/ezschedule/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.LogsCenter;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyScheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":" * Manages storage of Scheduler data in local storage.","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"    private SchedulerStorage schedulerStorage;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"     * Creates a {@code StorageManager} with the given {@code SchedulerStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"    public StorageManager(SchedulerStorage schedulerStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"        this.schedulerStorage \u003d schedulerStorage;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Scheduler methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"    public Path getSchedulerFilePath() {","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"        return schedulerStorage.getSchedulerFilePath();","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"    public Optional\u003cReadOnlyScheduler\u003e readScheduler() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"        return readScheduler(schedulerStorage.getSchedulerFilePath());","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"    public Optional\u003cReadOnlyScheduler\u003e readScheduler(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"        return schedulerStorage.readScheduler(filePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"    public void saveScheduler(ReadOnlyScheduler scheduler) throws IOException {","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"        saveScheduler(scheduler, schedulerStorage.getSchedulerFilePath());","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"    public void saveScheduler(ReadOnlyScheduler scheduler, Path filePath) throws IOException {","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"        schedulerStorage.saveScheduler(scheduler, filePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JrmCkh":16,"lhy-hoyin":6,"-":55}},{"path":"src/main/java/ezschedule/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JrmCkh":2,"lhy-hoyin":6,"-":29}},{"path":"src/main/java/ezschedule/ui/Calendar.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.ui;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import java.time.ZonedDateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":" * A {@code Calendar} UI that displays information of {@code Event}.","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"public class Calendar extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"    private static final String FXML \u003d \"Calendar.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"    private final ObservableList\u003cEvent\u003e eventList;","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"    private final ObservableList\u003cEvent\u003e findEventList;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"    private final FilterExecutor filterExecutor;","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    private final ZonedDateTime today;","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    private ZonedDateTime date;","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"    private int monthMaxDate;","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"    private FlowPane calendar;","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"    private Text year;","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"    private Text month;","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"     * Creates a {@code Calendar} with the given {@code ObservableList} amd {@code FilterExecutor}.","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"    public Calendar(ObservableList\u003cEvent\u003e eventList, ObservableList\u003cEvent\u003e findEventList,","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"                    FilterExecutor filterExecutor) {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"        super(FXML);","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"        this.eventList \u003d eventList;","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"        this.findEventList \u003d findEventList;","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"        this.filterExecutor \u003d filterExecutor;","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"        date \u003d ZonedDateTime.now();","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"        today \u003d ZonedDateTime.now();","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"        monthMaxDate \u003d date.getMonth().maxLength();","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"        eventList.addListener((ListChangeListener\u003cEvent\u003e) c -\u003e refreshCalendar());","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"        findEventList.addListener((ListChangeListener\u003cEvent\u003e) c -\u003e refreshCalendar());","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"        drawCalendar();","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"    void backOneMonth() {","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"        date \u003d date.minusMonths(1);","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"        monthMaxDate \u003d date.getMonth().maxLength();","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"        calendar.getChildren().clear();","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"        drawCalendar();","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"    void forwardOneMonth() {","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"        date \u003d date.plusMonths(1);","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"        monthMaxDate \u003d date.getMonth().maxLength();","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"        calendar.getChildren().clear();","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"        drawCalendar();","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"    void jumpToNow() {","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"        date \u003d ZonedDateTime.now();","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"        monthMaxDate \u003d date.getMonth().maxLength();","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"        calendar.getChildren().clear();","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"        drawCalendar();","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"    private void refreshCalendar() {","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"        calendar.getChildren().clear();","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"JrmCkh"},"content":"        drawCalendar();","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"JrmCkh"},"content":"    private void drawCalendar() {","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"JrmCkh"},"content":"        year.setText(String.valueOf(date.getYear()));","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"JrmCkh"},"content":"        month.setText(String.valueOf(date.getMonth()));","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"JrmCkh"},"content":"        // List of activities for a given month","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"JrmCkh"},"content":"        Map\u003cInteger, List\u003cEvent\u003e\u003e eventsForCurrentMonthMap \u003d getEventsForCurrentMonth();","lastModifiedDate":"2023-04-03"},{"lineNumber":92,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"        // Check for non leap year and if it\u0027s february","lastModifiedDate":"2023-04-03"},{"lineNumber":94,"author":{"gitId":"JrmCkh"},"content":"        if (!isLeapYear() \u0026\u0026 monthMaxDate \u003d\u003d 29) {","lastModifiedDate":"2023-04-03"},{"lineNumber":95,"author":{"gitId":"JrmCkh"},"content":"            monthMaxDate \u003d 28;","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"JrmCkh"},"content":"        drawCalendarBoxes(eventsForCurrentMonthMap);","lastModifiedDate":"2023-04-03"},{"lineNumber":98,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":99,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":100,"author":{"gitId":"JrmCkh"},"content":"    private Map\u003cInteger, List\u003cEvent\u003e\u003e getEventsForCurrentMonth() {","lastModifiedDate":"2023-04-03"},{"lineNumber":101,"author":{"gitId":"JrmCkh"},"content":"        List\u003cEvent\u003e eventsForCurrentMonth \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-03"},{"lineNumber":102,"author":{"gitId":"JrmCkh"},"content":"        eventList.forEach(e -\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"JrmCkh"},"content":"            if (isInCurrentMonth(e)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":104,"author":{"gitId":"JrmCkh"},"content":"                eventsForCurrentMonth.add(e);","lastModifiedDate":"2023-04-03"},{"lineNumber":105,"author":{"gitId":"JrmCkh"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"JrmCkh"},"content":"        });","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"JrmCkh"},"content":"        return getDateToEventMap(eventsForCurrentMonth);","lastModifiedDate":"2023-04-03"},{"lineNumber":108,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"JrmCkh"},"content":"    private Map\u003cInteger, List\u003cEvent\u003e\u003e getDateToEventMap(List\u003cEvent\u003e eventsForCurrentMonth) {","lastModifiedDate":"2023-04-03"},{"lineNumber":111,"author":{"gitId":"JrmCkh"},"content":"        Map\u003cInteger, List\u003cEvent\u003e\u003e dateToEventMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-04-03"},{"lineNumber":112,"author":{"gitId":"JrmCkh"},"content":"        for (Event e : eventsForCurrentMonth) {","lastModifiedDate":"2023-04-03"},{"lineNumber":113,"author":{"gitId":"JrmCkh"},"content":"            int date \u003d e.getDate().getDay();","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"JrmCkh"},"content":"            if (!dateToEventMap.containsKey(date)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":115,"author":{"gitId":"JrmCkh"},"content":"                dateToEventMap.put(date, List.of(e));","lastModifiedDate":"2023-04-03"},{"lineNumber":116,"author":{"gitId":"JrmCkh"},"content":"            } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"JrmCkh"},"content":"                List\u003cEvent\u003e oldList \u003d dateToEventMap.get(date);","lastModifiedDate":"2023-04-03"},{"lineNumber":118,"author":{"gitId":"JrmCkh"},"content":"                List\u003cEvent\u003e newList \u003d new ArrayList\u003c\u003e(oldList);","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"JrmCkh"},"content":"                newList.add(e);","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"JrmCkh"},"content":"                dateToEventMap.put(date, newList);","lastModifiedDate":"2023-04-03"},{"lineNumber":121,"author":{"gitId":"JrmCkh"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":122,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"JrmCkh"},"content":"        return dateToEventMap;","lastModifiedDate":"2023-04-03"},{"lineNumber":124,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":126,"author":{"gitId":"JrmCkh"},"content":"    private void drawCalendarBoxes(Map\u003cInteger, List\u003cEvent\u003e\u003e eventsForMonthMap) {","lastModifiedDate":"2023-04-03"},{"lineNumber":127,"author":{"gitId":"JrmCkh"},"content":"        int dateOffset \u003d ZonedDateTime.of(date.getYear(), date.getMonthValue(), 1, 0,","lastModifiedDate":"2023-03-26"},{"lineNumber":128,"author":{"gitId":"JrmCkh"},"content":"                0, 0, 0, date.getZone()).getDayOfWeek().getValue() % 7;","lastModifiedDate":"2023-03-26"},{"lineNumber":129,"author":{"gitId":"JrmCkh"},"content":"        int rows \u003d 6;","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"JrmCkh"},"content":"        int columns \u003d 7;","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"JrmCkh"},"content":"        // Draw 6 rows and 7 columns of boxes","lastModifiedDate":"2023-04-03"},{"lineNumber":133,"author":{"gitId":"JrmCkh"},"content":"        for (int i \u003d 0; i \u003c rows; i++) {","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"JrmCkh"},"content":"            for (int j \u003d 0; j \u003c columns; j++) {","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"JrmCkh"},"content":"                int calculatedDate \u003d (j + 1) + (7 * i);","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"JrmCkh"},"content":"                if (calculatedDate \u003e dateOffset) {","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"JrmCkh"},"content":"                    int currentDate \u003d calculatedDate - dateOffset;","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"JrmCkh"},"content":"                    if (currentDate \u003c\u003d monthMaxDate) {","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"JrmCkh"},"content":"                        List\u003cEvent\u003e eventsForCurrentDate \u003d eventsForMonthMap.get(currentDate);","lastModifiedDate":"2023-03-26"},{"lineNumber":140,"author":{"gitId":"JrmCkh"},"content":"                        drawOneFilledCalendarBox(currentDate, eventsForCurrentDate);","lastModifiedDate":"2023-04-03"},{"lineNumber":141,"author":{"gitId":"JrmCkh"},"content":"                    }","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"JrmCkh"},"content":"                } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":143,"author":{"gitId":"JrmCkh"},"content":"                    drawOneEmptyCalendarBox();","lastModifiedDate":"2023-04-03"},{"lineNumber":144,"author":{"gitId":"JrmCkh"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"JrmCkh"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"JrmCkh"},"content":"    private void drawOneFilledCalendarBox(int currentDate, List\u003cEvent\u003e eventsForCurrentDate) {","lastModifiedDate":"2023-04-03"},{"lineNumber":150,"author":{"gitId":"JrmCkh"},"content":"        String date \u003d String.valueOf(currentDate);","lastModifiedDate":"2023-04-03"},{"lineNumber":151,"author":{"gitId":"JrmCkh"},"content":"        boolean isFindCommand \u003d isFindCommand(eventsForCurrentDate);","lastModifiedDate":"2023-04-03"},{"lineNumber":152,"author":{"gitId":"JrmCkh"},"content":"        calendar.getChildren().add(new CalendarBox(isFindCommand, isToday(currentDate),","lastModifiedDate":"2023-04-03"},{"lineNumber":153,"author":{"gitId":"JrmCkh"},"content":"                date, eventsForCurrentDate, filterExecutor).getRoot());","lastModifiedDate":"2023-04-03"},{"lineNumber":154,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":155,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":156,"author":{"gitId":"JrmCkh"},"content":"    private void drawOneEmptyCalendarBox() {","lastModifiedDate":"2023-04-03"},{"lineNumber":157,"author":{"gitId":"JrmCkh"},"content":"        calendar.getChildren().add(new CalendarBox().getRoot());","lastModifiedDate":"2023-04-03"},{"lineNumber":158,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":159,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":160,"author":{"gitId":"JrmCkh"},"content":"    private boolean isInCurrentMonth(Event event) {","lastModifiedDate":"2023-04-03"},{"lineNumber":161,"author":{"gitId":"JrmCkh"},"content":"        int year \u003d date.getYear();","lastModifiedDate":"2023-03-26"},{"lineNumber":162,"author":{"gitId":"JrmCkh"},"content":"        int month \u003d date.getMonth().getValue();","lastModifiedDate":"2023-03-26"},{"lineNumber":163,"author":{"gitId":"JrmCkh"},"content":"        return event.getDate().getYear() \u003d\u003d year \u0026\u0026 event.getDate().getMonth() \u003d\u003d month;","lastModifiedDate":"2023-03-26"},{"lineNumber":164,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"JrmCkh"},"content":"    private boolean isToday(int currentDate) {","lastModifiedDate":"2023-03-26"},{"lineNumber":167,"author":{"gitId":"JrmCkh"},"content":"        return today.getYear() \u003d\u003d date.getYear()","lastModifiedDate":"2023-03-26"},{"lineNumber":168,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 today.getMonth() \u003d\u003d date.getMonth()","lastModifiedDate":"2023-03-26"},{"lineNumber":169,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 today.getDayOfMonth() \u003d\u003d currentDate;","lastModifiedDate":"2023-03-26"},{"lineNumber":170,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":171,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":172,"author":{"gitId":"JrmCkh"},"content":"    private boolean isLeapYear() {","lastModifiedDate":"2023-04-03"},{"lineNumber":173,"author":{"gitId":"JrmCkh"},"content":"        // Centuries year that are leap year are divisible by 400","lastModifiedDate":"2023-04-03"},{"lineNumber":174,"author":{"gitId":"JrmCkh"},"content":"        boolean isCenturyYear \u003d date.getYear() % 100 \u003d\u003d 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"JrmCkh"},"content":"        if (isCenturyYear) {","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"JrmCkh"},"content":"            return date.getYear() % 400 \u003d\u003d 0;","lastModifiedDate":"2023-04-03"},{"lineNumber":177,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":178,"author":{"gitId":"JrmCkh"},"content":"        // Leap years are years that are divisible by 4","lastModifiedDate":"2023-04-03"},{"lineNumber":179,"author":{"gitId":"JrmCkh"},"content":"        return date.getYear() % 4 \u003d\u003d 0;","lastModifiedDate":"2023-04-03"},{"lineNumber":180,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":182,"author":{"gitId":"JrmCkh"},"content":"    private boolean isFindCommand(List\u003cEvent\u003e eventsForCurrentDate) {","lastModifiedDate":"2023-04-03"},{"lineNumber":183,"author":{"gitId":"JrmCkh"},"content":"        return eventsForCurrentDate !\u003d null","lastModifiedDate":"2023-04-03"},{"lineNumber":184,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 eventsForCurrentDate.stream().anyMatch(findEventList::contains);","lastModifiedDate":"2023-04-03"},{"lineNumber":185,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":186,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":187,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":188,"author":{"gitId":"JrmCkh"},"content":"     * Represents a function that updates the filtered event list.","lastModifiedDate":"2023-04-03"},{"lineNumber":189,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":190,"author":{"gitId":"JrmCkh"},"content":"    @FunctionalInterface","lastModifiedDate":"2023-03-26"},{"lineNumber":191,"author":{"gitId":"JrmCkh"},"content":"    public interface FilterExecutor {","lastModifiedDate":"2023-03-26"},{"lineNumber":192,"author":{"gitId":"JrmCkh"},"content":"        /**","lastModifiedDate":"2023-03-26"},{"lineNumber":193,"author":{"gitId":"JrmCkh"},"content":"         * Executes the filtering of event list.","lastModifiedDate":"2023-03-26"},{"lineNumber":194,"author":{"gitId":"JrmCkh"},"content":"         */","lastModifiedDate":"2023-03-26"},{"lineNumber":195,"author":{"gitId":"JrmCkh"},"content":"        void updateFilteredEventList(Predicate\u003cEvent\u003e e);","lastModifiedDate":"2023-03-26"},{"lineNumber":196,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"JrmCkh":197}},{"path":"src/main/java/ezschedule/ui/CalendarBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.ui;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Date;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.EventMatchesDatePredicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.ui.Calendar.FilterExecutor;","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":" * A UI component for the {@code Calendar}.","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"public class CalendarBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"    private static final String FXML \u003d \"CalendarBox.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"    private List\u003cEvent\u003e events;","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"    private FilterExecutor filterExecutor;","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"    private StackPane calendarBoxPane;","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"    private Text calendarDate;","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"    private VBox calendarEvents;","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"    private Rectangle calendarHighlight;","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"    private Label now;","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"     * Creates an empty {@code CalendarBox}.","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"    public CalendarBox() {","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"        super(FXML);","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"     * Creates a filled {@code CalendarBox} with the given {@code List\u003cEvent\u003e} and date to display.","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"    public CalendarBox(boolean isFind, boolean isToday, String date,","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"                       List\u003cEvent\u003e events, FilterExecutor filterExecutor) {","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"        super(FXML);","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"        this.events \u003d events;","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"        this.filterExecutor \u003d filterExecutor;","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"        setHighlight(isFind);","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"        setToday(isToday);","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"        setDate(date);","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"        setEvents();","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"     * List all events for the clicked date.","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"    public void handleListEvents() {","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"        if (events \u003d\u003d null) {","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"            return;","lastModifiedDate":"2023-04-03"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"        int firstEventIndex \u003d 0;","lastModifiedDate":"2023-04-03"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"        Date date \u003d events.get(firstEventIndex).getDate();","lastModifiedDate":"2023-04-03"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"        filterExecutor.updateFilteredEventList(new EventMatchesDatePredicate(date));","lastModifiedDate":"2023-04-03"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"    private void setHighlight(boolean isFind) {","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"        if (isFind) {","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"            calendarHighlight.setStroke(Color.DARKORANGE);","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"    private void setToday(boolean isToday) {","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"        if (isToday) {","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"            now.setText(\"now\");","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"JrmCkh"},"content":"            now.setStyle(\"-fx-text-fill: white; \"","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"JrmCkh"},"content":"                    + \"-fx-background-color: #4c837a; \"","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"JrmCkh"},"content":"                    + \"-fx-background-radius: 5;\");","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"JrmCkh"},"content":"    private void setDate(String date) {","lastModifiedDate":"2023-04-03"},{"lineNumber":90,"author":{"gitId":"JrmCkh"},"content":"        calendarDate.setText(date);","lastModifiedDate":"2023-04-03"},{"lineNumber":91,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":92,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"    private void setEvents() {","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"JrmCkh"},"content":"        if (events \u003d\u003d null) {","lastModifiedDate":"2023-04-03"},{"lineNumber":95,"author":{"gitId":"JrmCkh"},"content":"            return;","lastModifiedDate":"2023-04-03"},{"lineNumber":96,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":97,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":98,"author":{"gitId":"JrmCkh"},"content":"        int firstEventIndex \u003d 0;","lastModifiedDate":"2023-04-03"},{"lineNumber":99,"author":{"gitId":"JrmCkh"},"content":"        Event firstEvent \u003d events.get(firstEventIndex);","lastModifiedDate":"2023-04-03"},{"lineNumber":100,"author":{"gitId":"JrmCkh"},"content":"        String firstEventName \u003d getEventName(firstEvent);","lastModifiedDate":"2023-04-03"},{"lineNumber":101,"author":{"gitId":"JrmCkh"},"content":"        setEventLabel(firstEventName);","lastModifiedDate":"2023-04-03"},{"lineNumber":102,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"JrmCkh"},"content":"        if (events.size() \u003d\u003d 2) {","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"JrmCkh"},"content":"            int secondEventIndex \u003d 1;","lastModifiedDate":"2023-04-03"},{"lineNumber":105,"author":{"gitId":"JrmCkh"},"content":"            Event secondEvent \u003d events.get(secondEventIndex);","lastModifiedDate":"2023-04-03"},{"lineNumber":106,"author":{"gitId":"JrmCkh"},"content":"            String secondEventName \u003d getEventName(secondEvent);","lastModifiedDate":"2023-04-03"},{"lineNumber":107,"author":{"gitId":"JrmCkh"},"content":"            setEventLabel(secondEventName);","lastModifiedDate":"2023-04-03"},{"lineNumber":108,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":109,"author":{"gitId":"JrmCkh"},"content":"        } else if (events.size() \u003e 2) {","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"JrmCkh"},"content":"            String moreEvents \u003d \"...\";","lastModifiedDate":"2023-04-03"},{"lineNumber":111,"author":{"gitId":"JrmCkh"},"content":"            setEventLabel(moreEvents);","lastModifiedDate":"2023-04-03"},{"lineNumber":112,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":113,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"JrmCkh"},"content":"    private String getEventName(Event event) {","lastModifiedDate":"2023-03-26"},{"lineNumber":116,"author":{"gitId":"JrmCkh"},"content":"        String name \u003d event.getName().toString();","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"JrmCkh"},"content":"        if (isNameTooLong(name)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"JrmCkh"},"content":"            name \u003d refactorName(name);","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"JrmCkh"},"content":"        return name;","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"JrmCkh"},"content":"    private boolean isNameTooLong(String name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"JrmCkh"},"content":"        return name.length() \u003e 5;","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"JrmCkh"},"content":"    private String refactorName(String name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"JrmCkh"},"content":"        return name.substring(0, 5) + \"...\";","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"JrmCkh"},"content":"    private void setEventLabel(String name) {","lastModifiedDate":"2023-04-03"},{"lineNumber":132,"author":{"gitId":"JrmCkh"},"content":"        Label label \u003d new Label(name);","lastModifiedDate":"2023-04-03"},{"lineNumber":133,"author":{"gitId":"JrmCkh"},"content":"        label.setStyle(\"-fx-text-fill: white; \"","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"JrmCkh"},"content":"                + \"-fx-background-color: #4c837a; \"","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"JrmCkh"},"content":"                + \"-fx-background-radius: 5; \"","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"JrmCkh"},"content":"                + \"-fx-font-size: 11; \"","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"JrmCkh"},"content":"                + \"-fx-padding: 0 10 0 10;\");","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"JrmCkh"},"content":"        calendarEvents.getChildren().add(label);","lastModifiedDate":"2023-04-03"},{"lineNumber":139,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"JrmCkh":140}},{"path":"src/main/java/ezschedule/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.ui;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.Logic;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"lhy-hoyin":6,"-":79}},{"path":"src/main/java/ezschedule/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.ui;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":" * A UI component that displays information of a {@code Event}.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"    private static final Image CHECK_MARK_IMAGE \u003d new Image(\"/images/check-mark.png\");","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"    public final Event event;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"    private StackPane cardPane;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"    private Label id;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    private Label name;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    private Label date;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"    private Label startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"    private Label endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"    private Label completed;","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"    private ImageView checkMark;","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"     * Creates a {@code EventCode} with the given {@code Event} and index to display.","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"    public EventCard(Event event, String displayedIndex) {","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"        name.setText(event.getName().fullName);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM, yyyy\");","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"        date.setText(dateTimeFormatter.format(event.getDate().date));","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"        startTime.setText(event.getStartTime().toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"        endTime.setText(event.getEndTime().toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"        setCompleted(event.isCompleted());","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"    private void setCompleted(boolean isCompleted) {","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"        if (isCompleted) {","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"            completed.setText(\"Completed\");","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"            completed.setStyle(\"-fx-background-color: #3e7b91; -fx-background-radius: 10;\");","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"            checkMark.setImage(CHECK_MARK_IMAGE);","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"anthonynmh"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"anthonynmh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"anthonynmh"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"anthonynmh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"anthonynmh"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"anthonynmh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"anthonynmh"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"anthonynmh"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"anthonynmh"},"content":"        // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"anthonynmh"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"anthonynmh"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"anthonynmh"},"content":"                \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JrmCkh":35,"lhy-hoyin":2,"anthonynmh":44}},{"path":"src/main/java/ezschedule/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.ui;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.LogsCenter;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":" * Panel containing the list of events.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListPanel.EventListViewCell());","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code EventCard}.","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"anthonynmh"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"                setText(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"                String displayNumber \u003d String.format(\"%02d\", getIndex() + 1);","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"                setGraphic(new EventCard(event, displayNumber).getRoot());","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"JrmCkh":9,"lhy-hoyin":3,"anthonynmh":38}},{"path":"src/main/java/ezschedule/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.ui;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.LogsCenter;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103-w17-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lhy-hoyin":2,"anthonynmh":1,"-":98}},{"path":"src/main/java/ezschedule/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.ui;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.GuiSettings;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.LogsCenter;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.Logic;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"    private final Logic logic;","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"    private ShowNextPanel showNextPanel;","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"    private StackPane showNextPlaceholder;","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"    private StackPane calendarPlaceholder;","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"anthonynmh"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"anthonynmh"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"JrmCkh"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getSchedulerFilePath());","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"JrmCkh"},"content":"        showNextPanel \u003d new ShowNextPanel(logic.getUpcomingEventList());","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"JrmCkh"},"content":"        showNextPlaceholder.getChildren().add(showNextPanel.getRoot());","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"JrmCkh"},"content":"        Calendar calendar \u003d new Calendar(logic.getEventList(),","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"JrmCkh"},"content":"                logic.getFindEventList(), logic::updateFilteredEventList);","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"JrmCkh"},"content":"        calendarPlaceholder.getChildren().add(calendar.getRoot());","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"anthonynmh"},"content":"    public EventListPanel getEventListPanel() {","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"anthonynmh"},"content":"        return eventListPanel;","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"JrmCkh"},"content":"    public ShowNextPanel getShowPanel() {","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"JrmCkh"},"content":"        return showNextPanel;","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"lhy-hoyin"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2023-03-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JrmCkh":19,"lhy-hoyin":8,"anthonynmh":6,"-":176}},{"path":"src/main/java/ezschedule/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.ui;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lhy-hoyin":1,"-":26}},{"path":"src/main/java/ezschedule/ui/ShowNextCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":" * A UI component that displays information of a {@code Event}.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"public class ShowNextCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"    private static final String FXML \u003d \"ShowNextCard.fxml\";","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"    public final Event event;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"    private Label id;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"    private Label name;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"    private Label date;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"    private Label startTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"    private Label endTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"     * Creates a {@code EventCode} with the given {@code Event} and index to display.","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"    public ShowNextCard(Event event, String displayedIndex) {","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"        super(FXML);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"        name.setText(event.getName().fullName);","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM, yyyy\");","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"        date.setText(dateTimeFormatter.format(event.getDate().date));","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"        startTime.setText(event.getStartTime().toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"        endTime.setText(event.getEndTime().toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"            return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"        if (!(other instanceof ShowNextCard)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"            return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"        // state check","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"        ShowNextCard card \u003d (ShowNextCard) other;","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"                \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"JrmCkh":65}},{"path":"src/main/java/ezschedule/ui/ShowNextPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.commons.core.LogsCenter;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":" * Panel containing the list of upcoming events.","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"public class ShowNextPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"    private static final String FXML \u003d \"ShowNextPanel.fxml\";","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ShowNextPanel.class);","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"    private Label showNextLabel;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"    private ListView\u003cEvent\u003e showNextListView;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"    public ShowNextPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"        super(FXML);","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"        setUpcomingEvent(eventList);","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"        eventList.addListener((ListChangeListener\u003cEvent\u003e) c -\u003e setUpcomingEvent(eventList));","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"        showNextListView.setItems(eventList);","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"        showNextListView.setCellFactory(listView -\u003e new ShowNextPanel.ShowNextViewCell());","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code EventCard}.","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"    class ShowNextViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"                setText(null);","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"            } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"                String displayNumber \u003d String.format(\"%02d\", getIndex() + 1);","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"                setGraphic(new ShowNextCard(event, displayNumber).getRoot());","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"    private void setUpcomingEvent(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"        showNextLabel.setText(\"Upcoming \" + eventList.size() + \" Events\");","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"JrmCkh":60}},{"path":"src/main/java/ezschedule/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.ui;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lhy-hoyin":1,"-":26}},{"path":"src/main/java/ezschedule/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.ui;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"     * Starts the UI (and the App).","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"JrmCkh":3,"lhy-hoyin":1,"-":10}},{"path":"src/main/java/ezschedule/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.ui;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.MainApp;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.LogsCenter;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.StringUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.Logic;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/scheduler.png\";","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"    private final Logic logic;","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"        // Set the application icon","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); // This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkGreenTheme.css\");","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JrmCkh":3,"lhy-hoyin":6,"-":78}},{"path":"src/main/java/ezschedule/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.ui;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.MainApp;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lhy-hoyin":2,"-":85}},{"path":"src/main/resources/view/Calendar.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"\u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" maxHeight\u003d\"500.0\" minHeight\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"   \u003ccontent\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"             \u003cHBox alignment\u003d\"CENTER\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"                 \u003cchildren\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"                     \u003cButton onAction\u003d\"#backOneMonth\" text\u003d\"\u0026lt;\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"                         \u003cfont\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"                             \u003cFont size\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"                         \u003c/font\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"                     \u003c/Button\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"                     \u003cText fx:id\u003d\"year\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"####\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"            \u003c/Text\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"                     \u003cText fx:id\u003d\"month\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"####\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"            \u003c/Text\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"                     \u003cButton onAction\u003d\"#forwardOneMonth\" text\u003d\"\u0026gt;\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"                         \u003cfont\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"                             \u003cFont name\u003d\"System Bold\" size\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"                         \u003c/font\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"                     \u003c/Button\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"                 \u003c/children\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"                  \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"             \u003c/HBox\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"             \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"                 \u003cchildren\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"                     \u003cText strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Sun\" textAlignment\u003d\"CENTER\" wrappingWidth\u003d\"60.0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"                         \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"                             \u003cInsets /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"                         \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"                     \u003c/Text\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"                     \u003cText layoutX\u003d\"213.0\" layoutY\u003d\"37.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Mon\" textAlignment\u003d\"CENTER\" wrappingWidth\u003d\"65.0\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"                         \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"                             \u003cInsets /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"                         \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"                     \u003c/Text\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"                     \u003cText layoutX\u003d\"222.0\" layoutY\u003d\"37.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Tue\" textAlignment\u003d\"CENTER\" wrappingWidth\u003d\"65.0\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"                     \u003cText layoutX\u003d\"232.0\" layoutY\u003d\"37.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Wed\" textAlignment\u003d\"CENTER\" wrappingWidth\u003d\"65.0\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"                     \u003cText layoutX\u003d\"241.0\" layoutY\u003d\"37.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Thu\" textAlignment\u003d\"CENTER\" wrappingWidth\u003d\"65.0\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"                     \u003cText layoutX\u003d\"251.0\" layoutY\u003d\"37.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Fri\" textAlignment\u003d\"CENTER\" wrappingWidth\u003d\"65.0\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"                     \u003cText layoutX\u003d\"266.0\" layoutY\u003d\"37.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Sat\" textAlignment\u003d\"CENTER\" wrappingWidth\u003d\"60.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"                 \u003c/children\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"                  \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"             \u003c/HBox\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"             \u003cFlowPane fx:id\u003d\"calendar\" columnHalignment\u003d\"CENTER\" hgap\u003d\"5.0\" prefWidth\u003d\"460.0\" vgap\u003d\"5.0\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"                  \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"            \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"                  \u003cLabel text\u003d\"Jump to\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"                     \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"                        \u003cInsets /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"                     \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"                        \u003cInsets /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"                        \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"JrmCkh"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"                  \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#jumpToNow\" text\u003d\"now\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"JrmCkh"},"content":"                        \u003cFont size\u003d\"11.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"JrmCkh"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"JrmCkh"},"content":"                  \u003c/Button\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"JrmCkh"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"JrmCkh"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"JrmCkh"},"content":"                  \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"JrmCkh"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"JrmCkh"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":91,"author":{"gitId":"JrmCkh"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":92,"author":{"gitId":"JrmCkh"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"JrmCkh"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"JrmCkh"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"JrmCkh"},"content":"   \u003c/content\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"JrmCkh"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"JrmCkh":97}},{"path":"src/main/resources/view/CalendarBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"\u003cStackPane fx:id\u003d\"calendarBoxPane\" onMouseClicked\u003d\"#handleListEvents\" styleClass\u003d\"round-corners\" stylesheets\u003d\"@DarkGreenTheme.css\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"      \u003cRectangle fx:id\u003d\"calendarHighlight\" arcHeight\u003d\"25.0\" arcWidth\u003d\"25.0\" fill\u003d\"#ffffff00\" height\u003d\"60.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"2.0\" width\u003d\"60.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"      \u003cText fx:id\u003d\"calendarDate\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" translateY\u003d\"-20.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"      \u003cVBox fx:id\u003d\"calendarEvents\" alignment\u003d\"CENTER\" maxHeight\u003d\"35.0\" maxWidth\u003d\"50.0\" style\u003d\"-fx-background-radius: 2; -fx-border-radius: 2;\" translateY\u003d\"7.5\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"      \u003cLabel fx:id\u003d\"now\" textFill\u003d\"WHITE\" translateX\u003d\"17.0\" translateY\u003d\"25.0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"            \u003cInsets left\u003d\"2.0\" right\u003d\"2.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"            \u003cFont size\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"JrmCkh":25}},{"path":"src/main/resources/view/DarkGreenTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: #30534d;","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"    background-color: #30534d; /* Used in the default.html file */","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"    -fx-base: #30534d;","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"    -fx-control-inner-background: #30534d;","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: #30534d;","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: derive(#30534d, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: derive(#30534d, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: derive(#30534d, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"JrmCkh"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: derive(#30534d, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: #4c837a;","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: #70aca2;","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"JrmCkh"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"JrmCkh"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":130,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: derive(#30534d, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":134,"author":{"gitId":"JrmCkh"},"content":"     -fx-background-color: derive(#30534d, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"JrmCkh"},"content":"     -fx-border-color: derive(#30534d, 10%);","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: derive(#30534d, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: derive(#30534d, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"JrmCkh"},"content":"    -fx-border-color: derive(#30534d, 25%);","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: derive(#30534d, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"JrmCkh"},"content":"    -fx-border-color: derive(#30534d, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":178,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: derive(#30534d, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: derive(#30534d, 50%);","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: derive(#30534d, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"JrmCkh"},"content":"  -fx-text-fill: #30534d;","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: #30534d;","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: #30534d;","lastModifiedDate":"2023-03-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: #30534d;","lastModifiedDate":"2023-03-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: derive(#30534d, 25%);","lastModifiedDate":"2023-03-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":258,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: derive(#30534d, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":261,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: derive(#30534d, 50%);","lastModifiedDate":"2023-03-30"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":275,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":283,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":309,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: #30534d;","lastModifiedDate":"2023-03-30"},{"lineNumber":310,"author":{"gitId":"JrmCkh"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2023-03-30"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":326,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":327,"author":{"gitId":"JrmCkh"},"content":".vbox {","lastModifiedDate":"2023-03-30"},{"lineNumber":328,"author":{"gitId":"JrmCkh"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-30"},{"lineNumber":329,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-30"},{"lineNumber":330,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":331,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":332,"author":{"gitId":"JrmCkh"},"content":".scroll-pane {","lastModifiedDate":"2023-03-30"},{"lineNumber":333,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: derive(#30534d, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":334,"author":{"gitId":"JrmCkh"},"content":"    -fx-border-color: derive(#30534d, 30%);","lastModifiedDate":"2023-03-30"},{"lineNumber":335,"author":{"gitId":"JrmCkh"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":336,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"JrmCkh":48,"-":288}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"\u003cStackPane fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"       \u003cGridPane\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"           \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"               \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"           \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"           \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"                   \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"               \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"                   \u003cLabel fx:id\u003d\"id\" minWidth\u003d\"30.0\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"                   \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"               \u003cRegion HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"                  \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"                  \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"                     \u003cLabel fx:id\u003d\"startTime\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$startTime\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"                  \u003cLabel styleClass\u003d\"cell_big_label\" text\u003d\"to\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"                     \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"                        \u003cInsets /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"                     \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"                        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"                     \u003cLabel fx:id\u003d\"endTime\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$endTime\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"                  \u003cRegion HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"                     \u003cLabel fx:id\u003d\"completed\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"                        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"                  \u003cImageView fx:id\u003d\"checkMark\" fitHeight\u003d\"25.0\" fitWidth\u003d\"25.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"                        \u003cInsets left\u003d\"5.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"                  \u003c/ImageView\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"                  \u003cInsets left\u003d\"30.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"           \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"           \u003crowConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"               \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"           \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"       \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"JrmCkh":49,"-":19}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"\u003cVBox maxHeight\u003d\"500.0\" minHeight\u003d\"500.0\" minWidth\u003d\"300.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"    \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JrmCkh":2,"-":6}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"    -fx-background-color: derive(#30534d, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"JrmCkh":1,"-":18}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"            \u003cHBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"JrmCkh":2,"-":42}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"\u003cfx:root minHeight\u003d\"770.0\" minWidth\u003d\"900.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"EZ-Schedule\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"        \u003cImage url\u003d\"@/images/scheduler.png\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"                \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"            \u003cBorderPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"               \u003cright\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"                  \u003cVBox styleClass\u003d\"pane-with-border\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"                        \u003cStackPane fx:id\u003d\"showNextPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"                              \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"                        \u003cStackPane fx:id\u003d\"calendarPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"                              \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"               \u003c/right\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"               \u003ccenter\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"                      \u003cVBox styleClass\u003d\"pane-with-border\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"                               \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                             \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"                                 \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                             \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"                         \u003c/StackPane\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"                          \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"                           \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"                        \u003c/padding\u003e\u003c/StackPane\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                      \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"               \u003c/center\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"            \u003c/BorderPane\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"         \u003cstylesheets\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"            \u003cURL value\u003d\"@DarkGreenTheme.css\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"            \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"         \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"JrmCkh":39,"-":38}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" minHeight\u003d\"105.0\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"JrmCkh":2,"-":6}},{"path":"src/main/resources/view/ShowNextCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"80.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"            \u003cLabel fx:id\u003d\"id\" minWidth\u003d\"30.0\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"                  \u003cFont name\u003d\"System Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"            \u003cRegion HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"               \u003cLabel fx:id\u003d\"date\" alignment\u003d\"CENTER_RIGHT\" contentDisplay\u003d\"RIGHT\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$date\" textAlignment\u003d\"RIGHT\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"               \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"               \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"               \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"         \u003cHBox\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"                  \u003cLabel fx:id\u003d\"startTime\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$startTime\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"               \u003cLabel styleClass\u003d\"cell_big_label\" text\u003d\"to\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"                  \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"                     \u003cInsets /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"                  \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"                     \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"                  \u003cLabel fx:id\u003d\"endTime\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$endTime\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"               \u003cInsets left\u003d\"30.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"JrmCkh":64}},{"path":"src/main/resources/view/ShowNextPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"\u003cVBox minHeight\u003d\"105.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"   \u003cLabel fx:id\u003d\"showNextLabel\" styleClass\u003d\"cell_big_label\" stylesheets\u003d\"@DarkGreenTheme.css\" text\u003d\"Upcoming Events\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"    \u003cListView fx:id\u003d\"showNextListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"JrmCkh":10}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"\u003cGridPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cLabel fx:id\u003d\"saveLocationStatus\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"JrmCkh":1,"-":11}},{"path":"src/test/java/ezschedule/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":1,"-":57}},{"path":"src/test/java/ezschedule/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":1,"-":26}},{"path":"src/test/java/ezschedule/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                                              int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JrmCkh":1,"lhy-hoyin":1,"-":133}},{"path":"src/test/java/ezschedule/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core.index;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"JrmCkh":1,"lhy-hoyin":1,"-":58}},{"path":"src/test/java/ezschedule/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"        assertNotNull(AppUtil.getImage(\"/images/scheduler.png\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"JrmCkh":1,"lhy-hoyin":2,"-":33}},{"path":"src/test/java/ezschedule/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"lhy-hoyin":3,"-":105}},{"path":"src/test/java/ezschedule/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Config;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JrmCkh":1,"lhy-hoyin":3,"-":110}},{"path":"src/test/java/ezschedule/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JrmCkh":1,"lhy-hoyin":1,"-":20}},{"path":"src/test/java/ezschedule/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.testutil.TestUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lhy-hoyin":3,"-":42}},{"path":"src/test/java/ezschedule/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"JrmCkh"},"content":"        // Matches a partial word only, still return true","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"JrmCkh":3,"lhy-hoyin":1,"-":132}},{"path":"src/test/java/ezschedule/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.DATE_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.END_TIME_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.NAME_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.START_TIME_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.EVENT_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.AddCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.CommandResult;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.ListCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ModelManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyScheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.storage.JsonSchedulerStorage;","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.storage.StorageManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.EventBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"        JsonSchedulerStorage schedulerStorage \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"                new JsonSchedulerStorage(temporaryFolder.resolve(\"scheduler.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        StorageManager storage \u003d new StorageManager(schedulerStorage, userPrefsStorage);","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"        assertParseException(invalidCommand, Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"        assertCommandException(deleteCommand, String.format(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX, 9));","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"        // Setup LogicManager with JsonSchedulerIoExceptionThrowingStub","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"        JsonSchedulerStorage schedulerStorage \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"                new JsonSchedulerIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionSchedule.json\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"        StorageManager storage \u003d new StorageManager(schedulerStorage, userPrefsStorage);","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_A + DATE_DESC_A + START_TIME_DESC_A + END_TIME_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"        Event expectedEvent \u003d new EventBuilder(EVENT_A).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"JrmCkh"},"content":"        expectedModel.addEvent(expectedEvent);","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"JrmCkh"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredEventList().remove(0));","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"JrmCkh"},"content":"        Model expectedModel \u003d new ModelManager(model.getScheduler(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"JrmCkh"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"JrmCkh"},"content":"    private static class JsonSchedulerIoExceptionThrowingStub extends JsonSchedulerStorage {","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"JrmCkh"},"content":"        private JsonSchedulerIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"lhy-hoyin"},"content":"        public void saveScheduler(ReadOnlyScheduler scheduler, Path filePath) throws IOException {","lastModifiedDate":"2023-03-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"JrmCkh":25,"lhy-hoyin":20,"-":120}},{"path":"src/test/java/ezschedule/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.getTypicalScheduler;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ModelManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.EventBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"        model \u003d new ModelManager(getTypicalScheduler(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    public void execute_newEvent_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"        Model expectedModel \u003d new ModelManager(model.getScheduler(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"        expectedModel.addEvent(validEvent);","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"        assertCommandSuccess(new AddCommand(validEvent), model,","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validEvent), expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"        Event eventInList \u003d model.getScheduler().getEventList().get(0);","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"        CommandTestUtil.assertCommandFailure(new AddCommand(eventInList), model, AddCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"JrmCkh":13,"lhy-hoyin":5,"-":25}},{"path":"src/test/java/ezschedule/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.GuiSettings;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyScheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.Scheduler;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.EventBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"    public void execute_eventAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        ModelStubAcceptingEventAdded modelStub \u003d new ModelStubAcceptingEventAdded();","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"        CommandResult commandResult \u003d new AddCommand(validEvent).execute(modelStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validEvent), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(Arrays.asList(validEvent), modelStub.eventsAdded);","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"        AddCommand addCommand \u003d new AddCommand(validEvent);","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"        ModelStub modelStub \u003d new ModelStubWithEvent(validEvent);","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_EVENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"        Event a \u003d new EventBuilder().withName(\"Event A\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"        Event b \u003d new EventBuilder().withName(\"Event B\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"        AddCommand addEventACommand \u003d new AddCommand(a);","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"        AddCommand addEventBCommand \u003d new AddCommand(b);","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(addEventACommand.equals(addEventACommand));","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"        AddCommand addEventACommandCopy \u003d new AddCommand(a);","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(addEventACommand.equals(addEventACommandCopy));","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(addEventACommand.equals(1));","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(addEventACommand.equals(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(addEventACommand.equals(addEventBCommand));","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"JrmCkh"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"        public Path getSchedulerFilePath() {","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"JrmCkh"},"content":"        public void setSchedulerFilePath(Path schedulerFilePath) {","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"lhy-hoyin"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"JrmCkh"},"content":"        public ReadOnlyScheduler getScheduler() {","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"JrmCkh"},"content":"        public void setScheduler(ReadOnlyScheduler newData) {","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"lhy-hoyin"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"JrmCkh"},"content":"        @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"JrmCkh"},"content":"        public boolean hasEventAtTime(Event event) {","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"JrmCkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"lhy-hoyin"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"JrmCkh"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"BigheartSmallbrain"},"content":"        @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":146,"author":{"gitId":"BigheartSmallbrain"},"content":"        public ArrayList\u003cCommand\u003e recentCommand() {","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"JrmCkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":148,"author":{"gitId":"BigheartSmallbrain"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":149,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":150,"author":{"gitId":"BigheartSmallbrain"},"content":"        @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":151,"author":{"gitId":"BigheartSmallbrain"},"content":"        public ArrayList\u003cEvent\u003e recentEvent() {","lastModifiedDate":"2023-03-31"},{"lineNumber":152,"author":{"gitId":"JrmCkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":153,"author":{"gitId":"BigheartSmallbrain"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":154,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":155,"author":{"gitId":"BigheartSmallbrain"},"content":"        @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":156,"author":{"gitId":"BigheartSmallbrain"},"content":"        public void addRecentEvent(Event event) {","lastModifiedDate":"2023-03-31"},{"lineNumber":157,"author":{"gitId":"JrmCkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":158,"author":{"gitId":"BigheartSmallbrain"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":159,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":160,"author":{"gitId":"BigheartSmallbrain"},"content":"        @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":161,"author":{"gitId":"BigheartSmallbrain"},"content":"        public void clearRecent() {","lastModifiedDate":"2023-03-31"},{"lineNumber":162,"author":{"gitId":"JrmCkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":163,"author":{"gitId":"BigheartSmallbrain"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":164,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":165,"author":{"gitId":"lhy-hoyin"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"JrmCkh"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"lhy-hoyin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"JrmCkh"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":171,"author":{"gitId":"JrmCkh"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"JrmCkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":173,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":174,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"JrmCkh"},"content":"        public ObservableList\u003cEvent\u003e getUpcomingEventList() {","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"JrmCkh"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"JrmCkh"},"content":"        public ObservableList\u003cEvent\u003e getFindEventList() {","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"JrmCkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"lhy-hoyin"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-03-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"JrmCkh"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"JrmCkh"},"content":"        public void updateUpcomingEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"JrmCkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"JrmCkh"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"JrmCkh"},"content":"        public void updateFindEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"JrmCkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"JrmCkh"},"content":"     * A Model stub that contains a single event.","lastModifiedDate":"2023-03-20"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"lhy-hoyin"},"content":"    private class ModelStubWithEvent extends ModelStub {","lastModifiedDate":"2023-03-19"},{"lineNumber":205,"author":{"gitId":"lhy-hoyin"},"content":"        private final Event event;","lastModifiedDate":"2023-03-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"lhy-hoyin"},"content":"        ModelStubWithEvent(Event event) {","lastModifiedDate":"2023-03-19"},{"lineNumber":208,"author":{"gitId":"lhy-hoyin"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-03-19"},{"lineNumber":209,"author":{"gitId":"lhy-hoyin"},"content":"            this.event \u003d event;","lastModifiedDate":"2023-03-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"lhy-hoyin"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-19"},{"lineNumber":214,"author":{"gitId":"lhy-hoyin"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-03-19"},{"lineNumber":215,"author":{"gitId":"JrmCkh"},"content":"            return this.event.equals(event);","lastModifiedDate":"2023-04-03"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"JrmCkh"},"content":"     * A Model stub that always accept the event being added.","lastModifiedDate":"2023-03-20"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"lhy-hoyin"},"content":"    private class ModelStubAcceptingEventAdded extends ModelStub {","lastModifiedDate":"2023-03-19"},{"lineNumber":223,"author":{"gitId":"lhy-hoyin"},"content":"        final ArrayList\u003cEvent\u003e eventsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":224,"author":{"gitId":"JrmCkh"},"content":"        final ArrayList\u003cCommand\u003e recentCommand \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":225,"author":{"gitId":"JrmCkh"},"content":"        final ArrayList\u003cEvent\u003e recentEvent \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"lhy-hoyin"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-19"},{"lineNumber":229,"author":{"gitId":"lhy-hoyin"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-03-19"},{"lineNumber":230,"author":{"gitId":"JrmCkh"},"content":"            return eventsAdded.stream().anyMatch(event::equals);","lastModifiedDate":"2023-04-03"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"JrmCkh"},"content":"        @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":234,"author":{"gitId":"JrmCkh"},"content":"        public boolean hasEventAtTime(Event event) {","lastModifiedDate":"2023-03-21"},{"lineNumber":235,"author":{"gitId":"JrmCkh"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-03-21"},{"lineNumber":236,"author":{"gitId":"JrmCkh"},"content":"            return eventsAdded.stream().anyMatch(event::isEventOverlap);","lastModifiedDate":"2023-03-21"},{"lineNumber":237,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":238,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"lhy-hoyin"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2023-03-19"},{"lineNumber":241,"author":{"gitId":"lhy-hoyin"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-03-19"},{"lineNumber":242,"author":{"gitId":"lhy-hoyin"},"content":"            eventsAdded.add(event);","lastModifiedDate":"2023-03-19"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"JrmCkh"},"content":"        @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":246,"author":{"gitId":"JrmCkh"},"content":"        public void clearRecent() {}","lastModifiedDate":"2023-03-31"},{"lineNumber":247,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":248,"author":{"gitId":"JrmCkh"},"content":"        @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":249,"author":{"gitId":"JrmCkh"},"content":"        public ArrayList\u003cCommand\u003e recentCommand() {","lastModifiedDate":"2023-03-31"},{"lineNumber":250,"author":{"gitId":"JrmCkh"},"content":"            return recentCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":251,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":252,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":253,"author":{"gitId":"JrmCkh"},"content":"        @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":254,"author":{"gitId":"JrmCkh"},"content":"        public ArrayList\u003cEvent\u003e recentEvent() {","lastModifiedDate":"2023-03-31"},{"lineNumber":255,"author":{"gitId":"JrmCkh"},"content":"            return recentEvent;","lastModifiedDate":"2023-03-31"},{"lineNumber":256,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":257,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"lhy-hoyin"},"content":"        public ReadOnlyScheduler getScheduler() {","lastModifiedDate":"2023-03-19"},{"lineNumber":260,"author":{"gitId":"JrmCkh"},"content":"            return new Scheduler();","lastModifiedDate":"2023-03-18"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"JrmCkh":94,"BigheartSmallbrain":12,"lhy-hoyin":31,"-":126}},{"path":"src/test/java/ezschedule/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.getTypicalScheduler;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ModelManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.Scheduler;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"    public void execute_emptyScheduler_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"    public void execute_nonEmptyScheduler_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"        Model model \u003d new ModelManager(getTypicalScheduler(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalScheduler(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"        expectedModel.setScheduler(new Scheduler());","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"JrmCkh":6,"lhy-hoyin":6,"-":19}},{"path":"src/test/java/ezschedule/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"lhy-hoyin":1,"-":53}},{"path":"src/test/java/ezschedule/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.Scheduler;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.EventContainsKeywordsPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"    public static final String VALID_NAME_A \u003d \"Event A\";","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    public static final String VALID_NAME_B \u003d \"Event B\";","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"    public static final String VALID_DATE_A \u003d \"2023-05-01\";","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"    public static final String VALID_DATE_B \u003d \"2023-06-01\";","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"    public static final String VALID_START_TIME_A \u003d \"12:00\";","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"    public static final String VALID_START_TIME_B \u003d \"18:00\";","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"    public static final String VALID_END_TIME_A \u003d \"15:00\";","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"    public static final String VALID_END_TIME_B \u003d \"22:00\";","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"    public static final String NAME_DESC_A \u003d \" \" + PREFIX_NAME + VALID_NAME_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"    public static final String NAME_DESC_B \u003d \" \" + PREFIX_NAME + VALID_NAME_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"    public static final String DATE_DESC_A \u003d \" \" + PREFIX_DATE + VALID_DATE_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"    public static final String DATE_DESC_B \u003d \" \" + PREFIX_DATE + VALID_DATE_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"    public static final String START_TIME_DESC_A \u003d \" \" + PREFIX_START + VALID_START_TIME_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"    public static final String START_TIME_DESC_B \u003d \" \" + PREFIX_START + VALID_START_TIME_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"    public static final String END_TIME_DESC_A \u003d \" \" + PREFIX_END + VALID_END_TIME_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"    public static final String END_TIME_DESC_B \u003d \" \" + PREFIX_END + VALID_END_TIME_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"Event@\"; // \u0027@\u0027 not allowed in names","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE + \"2023-01-05a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"    public static final String INVALID_START_TIME_DESC \u003d \" \" + PREFIX_START + \"1800\"; // missing \u0027:\u0027 symbol","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"    public static final String INVALID_END_TIME_DESC \u003d \" \" + PREFIX_END + \"22:00*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"    public static final EditCommand.EditEventDescriptor DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"    public static final EditCommand.EditEventDescriptor DESC_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"        DESC_A \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_A).withDate(VALID_DATE_A)","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"                .withStartTime(VALID_START_TIME_A).withEndTime(VALID_END_TIME_A).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"        DESC_B \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_B).withDate(VALID_DATE_B)","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"                .withStartTime(VALID_START_TIME_B).withEndTime(VALID_END_TIME_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"JrmCkh"},"content":"     * - the scheduler, filtered event list and selected event in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"        Scheduler expectedAddressBook \u003d new Scheduler(actualModel.getScheduler());","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"        List\u003cEvent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredEventList());","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expectedAddressBook, actualModel.getScheduler());","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredEventList());","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":109,"author":{"gitId":"JrmCkh"},"content":"     * Updates {@code model}\u0027s filtered list to show only the event at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"JrmCkh"},"content":"     * {@code model}\u0027s scheduler.","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":112,"author":{"gitId":"JrmCkh"},"content":"    public static void showEventAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredEventList().size());","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"JrmCkh"},"content":"        Event event \u003d model.getFilteredEventList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"JrmCkh"},"content":"        final String[] splitName \u003d event.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"lhy-hoyin"},"content":"        model.updateFilteredEventList(new EventContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(1, model.getFilteredEventList().size());","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"JrmCkh":43,"lhy-hoyin":14,"-":64}},{"path":"src/test/java/ezschedule/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.getTypicalScheduler;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ModelManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    private Model model \u003d new ModelManager(getTypicalScheduler(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"        List\u003cIndex\u003e indexToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"        indexToDelete.add(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indexToDelete);","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"        Event eventToDelete \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"        String expectedMessage \u003d DeleteCommand.MESSAGE_DELETE_EVENT_SUCCESS + eventToDelete.toString();","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getScheduler(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"        List\u003cIndex\u003e outOfBoundIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"        outOfBoundIndex.add(Index.fromOneBased(model.getFilteredEventList().size() + 1));","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"        assertCommandFailure(deleteCommand, model, String.format(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX, 5));","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"        List\u003cIndex\u003e indexToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"        indexToDelete.add(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indexToDelete);","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"        Event eventToDelete \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"        String expectedMessage \u003d DeleteCommand.MESSAGE_DELETE_EVENT_SUCCESS + eventToDelete.toString();","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"        Model expectedModel \u003d new ModelManager(model.getScheduler(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"        showNoEvent(expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"        List\u003cIndex\u003e outOfBoundIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"JrmCkh"},"content":"        outOfBoundIndex.add(INDEX_SECOND_EVENT);","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"        // ensures that outOfBoundIndex is still in bounds of scheduler list","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(outOfBoundIndex.get(0).getZeroBased() \u003c model.getScheduler().getEventList().size());","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"JrmCkh"},"content":"        assertCommandFailure(deleteCommand, model, String.format(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX, 2));","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"JrmCkh"},"content":"        List\u003cIndex\u003e indexFirstEvent \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"JrmCkh"},"content":"        indexFirstEvent.add(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"JrmCkh"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(indexFirstEvent);","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"JrmCkh"},"content":"        List\u003cIndex\u003e indexSecondEvent \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"JrmCkh"},"content":"        indexSecondEvent.add(INDEX_SECOND_EVENT);","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"JrmCkh"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(indexSecondEvent);","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"JrmCkh"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(indexFirstEvent);","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"JrmCkh"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"JrmCkh"},"content":"    private void showNoEvent(Model model) {","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"JrmCkh"},"content":"        model.updateFilteredEventList(p -\u003e false);","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(model.getFilteredEventList().isEmpty());","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"JrmCkh":48,"lhy-hoyin":6,"-":69}},{"path":"src/test/java/ezschedule/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.DESC_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_DATE_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_NAME_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.getTypicalScheduler;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.commons.core.Messages;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ModelManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.Scheduler;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.EventBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"    private Model model \u003d new ModelManager(getTypicalScheduler(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"        Event editedEvent \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EVENT, descriptor);","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"        Model expectedModel \u003d new ModelManager(new Scheduler(model.getScheduler()), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"        expectedModel.setEvent(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"        Index indexLastEvent \u003d Index.fromOneBased(model.getFilteredEventList().size());","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"        Event lastEvent \u003d model.getFilteredEventList().get(indexLastEvent.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"        EventBuilder eventInList \u003d new EventBuilder(lastEvent);","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"        Event editedEvent \u003d eventInList.withName(VALID_NAME_B).withDate(VALID_DATE_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"                .withName(VALID_NAME_B).withDate(VALID_DATE_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastEvent, descriptor);","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"        Model expectedModel \u003d new ModelManager(new Scheduler(model.getScheduler()), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"        expectedModel.setEvent(lastEvent, editedEvent);","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EVENT, new EditEventDescriptor());","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"        Event editedEvent \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"        Model expectedModel \u003d new ModelManager(new Scheduler(model.getScheduler()), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"JrmCkh"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"JrmCkh"},"content":"        Event eventInFilteredList \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"JrmCkh"},"content":"        Event editedEvent \u003d new EventBuilder(eventInFilteredList).withName(VALID_NAME_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"JrmCkh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EVENT,","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"JrmCkh"},"content":"                new EditEventDescriptorBuilder().withName(VALID_NAME_B).build());","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"JrmCkh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"        Model expectedModel \u003d new ModelManager(new Scheduler(model.getScheduler()), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"JrmCkh"},"content":"        expectedModel.setEvent(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"JrmCkh"},"content":"    public void execute_duplicateEventUnfilteredList_failure() {","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"JrmCkh"},"content":"        Event firstEvent \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"JrmCkh"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(firstEvent).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"JrmCkh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_EVENT, descriptor);","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"JrmCkh"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"JrmCkh"},"content":"    public void execute_duplicateEventFilteredList_failure() {","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"JrmCkh"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"JrmCkh"},"content":"        // edit event in filtered list into a duplicate in scheduler","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"JrmCkh"},"content":"        Event eventInList \u003d model.getScheduler().getEventList().get(INDEX_SECOND_EVENT.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"JrmCkh"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EVENT,","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"JrmCkh"},"content":"                new EditEventDescriptorBuilder(eventInList).build());","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"JrmCkh"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"JrmCkh"},"content":"    public void execute_invalidEventIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"JrmCkh"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"JrmCkh"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"JrmCkh"},"content":"        assertCommandFailure(editCommand, model, String.format(","lastModifiedDate":"2023-04-03"},{"lineNumber":127,"author":{"gitId":"JrmCkh"},"content":"                Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX, model.getFilteredEventList().size() + 1));","lastModifiedDate":"2023-04-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"JrmCkh"},"content":"     * but smaller than size of scheduler","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"JrmCkh"},"content":"    public void execute_invalidEventIndexFilteredList_failure() {","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"JrmCkh"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"JrmCkh"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"JrmCkh"},"content":"        // ensures that outOfBoundIndex is still in bounds of scheduler list","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getScheduler().getEventList().size());","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"JrmCkh"},"content":"                new EditEventDescriptorBuilder().withName(VALID_NAME_B).build());","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"JrmCkh"},"content":"        assertCommandFailure(editCommand, model, String.format(","lastModifiedDate":"2023-04-03"},{"lineNumber":145,"author":{"gitId":"JrmCkh"},"content":"                Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX, outOfBoundIndex.getZeroBased() + 1));","lastModifiedDate":"2023-04-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"JrmCkh"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_EVENT, DESC_A);","lastModifiedDate":"2023-03-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"JrmCkh"},"content":"        EditEventDescriptor copyDescriptor \u003d new EditEventDescriptor(DESC_A);","lastModifiedDate":"2023-03-20"},{"lineNumber":154,"author":{"gitId":"JrmCkh"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_EVENT, copyDescriptor);","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_EVENT, DESC_A)));","lastModifiedDate":"2023-03-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_EVENT, DESC_B)));","lastModifiedDate":"2023-03-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"JrmCkh":77,"lhy-hoyin":4,"-":91}},{"path":"src/test/java/ezschedule/logic/commands/EditEventDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.DESC_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_DATE_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_END_TIME_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_NAME_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_START_TIME_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"public class EditEventDescriptorTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"    public void equals() {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"        EditEventDescriptor descriptorWithSameValues \u003d new EditEventDescriptor(DESC_A);","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(DESC_A.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(DESC_A.equals(DESC_A));","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(DESC_A.equals(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(DESC_A.equals(5));","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(DESC_A.equals(DESC_B));","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"        EditEventDescriptor editedA \u003d new EditEventDescriptorBuilder(DESC_A).withName(VALID_NAME_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(DESC_A.equals(editedA));","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"        editedA \u003d new EditEventDescriptorBuilder(DESC_A).withDate(VALID_DATE_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(DESC_A.equals(editedA));","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"        // different start time -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"        editedA \u003d new EditEventDescriptorBuilder(DESC_A).withStartTime(VALID_START_TIME_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(CommandTestUtil.DESC_A.equals(editedA));","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"        // different end time -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"        editedA \u003d new EditEventDescriptorBuilder(DESC_A).withEndTime(VALID_END_TIME_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(DESC_A.equals(editedA));","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"JrmCkh":53}},{"path":"src/test/java/ezschedule/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ModelManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"lhy-hoyin":5,"-":15}},{"path":"src/test/java/ezschedule/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.commons.core.Messages.MESSAGE_EVENTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.ART;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.BOAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.CARNIVAL;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.getTypicalScheduler;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.commands.FindCommand.FindEventDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ModelManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.EventContainsKeywordsPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    private Model model \u003d new ModelManager(getTypicalScheduler(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalScheduler(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"        FindEventDescriptor firstFindEventDescriptor \u003d new FindEventDescriptor();","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"        firstFindEventDescriptor.setName(new Name(\"first\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstFindEventDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"        FindEventDescriptor secondFindEventDescriptor \u003d new FindEventDescriptor();","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"        secondFindEventDescriptor.setName(new Name(\"second\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondFindEventDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstFindEventDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"    public void execute_multipleKeywords_multipleEventsFound() {","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"        FindEventDescriptor findEventDescriptor \u003d new FindEventDescriptor();","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"        findEventDescriptor.setName(new Name(\"Art Boat Carnival\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"        FindCommand command \u003d new FindCommand(findEventDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"        EventContainsKeywordsPredicate predicate \u003d preparePredicate(\"Art Boat Carnival\");","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(Arrays.asList(ART, BOAT, CARNIVAL), model.getFilteredEventList());","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"     * Parses {@code userInput} into a {@code EventContainsKeywordsPredicate}.","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"    private EventContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"        return new EventContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"JrmCkh":33,"lhy-hoyin":4,"-":39}},{"path":"src/test/java/ezschedule/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ModelManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"lhy-hoyin":5,"-":15}},{"path":"src/test/java/ezschedule/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ModelManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.TypicalEvents;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.testutil.TypicalIndexes;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"        model \u003d new ModelManager(TypicalEvents.getTypicalScheduler(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"        expectedModel \u003d new ModelManager(model.getScheduler(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"        CommandTestUtil.showEventAtIndex(model, TypicalIndexes.INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"JrmCkh":4,"lhy-hoyin":6,"-":28}},{"path":"src/test/java/ezschedule/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.DATE_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.DATE_DESC_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.END_TIME_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.END_TIME_DESC_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.INVALID_END_TIME_DESC;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.INVALID_START_TIME_DESC;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.NAME_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.NAME_DESC_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.START_TIME_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.START_TIME_DESC_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_DATE_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_END_TIME_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_NAME_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_START_TIME_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.EVENT_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.commands.AddCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Date;","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Time;","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.EventBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"        Event expectedEvent \u003d new EventBuilder(EVENT_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_B + DATE_DESC_B","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"                + START_TIME_DESC_B + END_TIME_DESC_B, new AddCommand(expectedEvent));","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"        assertParseSuccess(parser, NAME_DESC_A + NAME_DESC_B + DATE_DESC_B","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"                + START_TIME_DESC_B + END_TIME_DESC_B, new AddCommand(expectedEvent));","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"        // multiple dates - last date accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"        assertParseSuccess(parser, NAME_DESC_B + DATE_DESC_A + DATE_DESC_B","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"                + START_TIME_DESC_B + END_TIME_DESC_B, new AddCommand(expectedEvent));","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"        // multiple start times - last start time accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"        assertParseSuccess(parser, NAME_DESC_B + DATE_DESC_B + START_TIME_DESC_A","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"                + START_TIME_DESC_B + END_TIME_DESC_B, new AddCommand(expectedEvent));","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"        // multiple end times - last end time accepted","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"        assertParseSuccess(parser, NAME_DESC_B + DATE_DESC_B + START_TIME_DESC_B","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"                + END_TIME_DESC_A + END_TIME_DESC_B, new AddCommand(expectedEvent));","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"        // missing name prefix","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, VALID_NAME_B + DATE_DESC_B","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"                + START_TIME_DESC_B + END_TIME_DESC_B, expectedMessage);","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"        // missing date prefix","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, NAME_DESC_B + VALID_DATE_B","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"                + START_TIME_DESC_B + END_TIME_DESC_B, expectedMessage);","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"        // missing start time prefix","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, NAME_DESC_B + DATE_DESC_B","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"                + VALID_START_TIME_B + END_TIME_DESC_B, expectedMessage);","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"JrmCkh"},"content":"        // missing end time prefix","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, NAME_DESC_B + DATE_DESC_B","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"                + START_TIME_DESC_B + VALID_END_TIME_B, expectedMessage);","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"        // all prefixes missing","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, VALID_NAME_B + VALID_DATE_B","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"JrmCkh"},"content":"                + VALID_START_TIME_B + VALID_END_TIME_B, expectedMessage);","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"        // invalid name","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + DATE_DESC_B","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"JrmCkh"},"content":"                + START_TIME_DESC_B + END_TIME_DESC_B, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"JrmCkh"},"content":"        // invalid date","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, NAME_DESC_B + INVALID_DATE_DESC","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"JrmCkh"},"content":"                + START_TIME_DESC_B + END_TIME_DESC_B, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"JrmCkh"},"content":"        // invalid start time","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, NAME_DESC_B + DATE_DESC_B","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"JrmCkh"},"content":"                + INVALID_START_TIME_DESC + END_TIME_DESC_B, Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"JrmCkh"},"content":"        // invalid end time","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, NAME_DESC_B + DATE_DESC_B","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"JrmCkh"},"content":"                + START_TIME_DESC_B + INVALID_END_TIME_DESC, Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + DATE_DESC_B","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"JrmCkh"},"content":"                + START_TIME_DESC_B + INVALID_END_TIME_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":"        // non-empty preamble","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_B","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"JrmCkh"},"content":"                        + DATE_DESC_B + START_TIME_DESC_B + END_TIME_DESC_B,","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"lhy-hoyin"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"JrmCkh":72,"lhy-hoyin":43}},{"path":"src/test/java/ezschedule/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"lhy-hoyin":1,"-":149}},{"path":"src/test/java/ezschedule/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.Command;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"lhy-hoyin":3,"-":36}},{"path":"src/test/java/ezschedule/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"        List\u003cIndex\u003e indexFirstEvent \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"        indexFirstEvent.add(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(indexFirstEvent));","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"JrmCkh":7,"lhy-hoyin":5,"-":26}},{"path":"src/test/java/ezschedule/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.DATE_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.DATE_DESC_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.END_TIME_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.END_TIME_DESC_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.INVALID_END_TIME_DESC;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.INVALID_START_TIME_DESC;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.NAME_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.START_TIME_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.START_TIME_DESC_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_DATE_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_DATE_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_END_TIME_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_END_TIME_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_NAME_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_START_TIME_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_START_TIME_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalIndexes.INDEX_THIRD_EVENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.EditCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Date;","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Time;","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, VALID_NAME_A, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_A, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_A, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC, Date.MESSAGE_CONSTRAINTS); // invalid date","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_START_TIME_DESC, Time.MESSAGE_CONSTRAINTS); // invalid start time","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_END_TIME_DESC, Time.MESSAGE_CONSTRAINTS); // invalid end time","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"JrmCkh"},"content":"        // invalid date followed by valid start time","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC + START_TIME_DESC_A, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"        // valid date followed by invalid date. The test case for invalid date followed by valid date","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, \"1\" + DATE_DESC_B + INVALID_DATE_DESC, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"JrmCkh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_DATE_DESC","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"JrmCkh"},"content":"                + VALID_START_TIME_A + VALID_END_TIME_A, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"        Index targetIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"JrmCkh"},"content":"        String userInput \u003d targetIndex.getOneBased() + DATE_DESC_B","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"JrmCkh"},"content":"                + NAME_DESC_A + START_TIME_DESC_A + END_TIME_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"JrmCkh"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_A)","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"JrmCkh"},"content":"                .withDate(VALID_DATE_B).withStartTime(VALID_START_TIME_A).withEndTime(VALID_END_TIME_A).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"JrmCkh"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"JrmCkh"},"content":"        String userInput \u003d targetIndex.getOneBased() + DATE_DESC_B + START_TIME_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"JrmCkh"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withDate(VALID_DATE_B)","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"JrmCkh"},"content":"                .withStartTime(VALID_START_TIME_A).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"JrmCkh"},"content":"        Index targetIndex \u003d INDEX_THIRD_EVENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"JrmCkh"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"JrmCkh"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_A).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"JrmCkh"},"content":"        // date","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"JrmCkh"},"content":"        userInput \u003d targetIndex.getOneBased() + DATE_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"JrmCkh"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withDate(VALID_DATE_A).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"JrmCkh"},"content":"        // start time","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"JrmCkh"},"content":"        userInput \u003d targetIndex.getOneBased() + START_TIME_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"JrmCkh"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withStartTime(VALID_START_TIME_A).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"JrmCkh"},"content":"        // end time","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"JrmCkh"},"content":"        userInput \u003d targetIndex.getOneBased() + END_TIME_DESC_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"JrmCkh"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withEndTime(VALID_END_TIME_A).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"JrmCkh"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"JrmCkh"},"content":"        String userInput \u003d targetIndex.getOneBased() + DATE_DESC_A + START_TIME_DESC_A + END_TIME_DESC_A","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"JrmCkh"},"content":"                + DATE_DESC_B + START_TIME_DESC_B + END_TIME_DESC_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"JrmCkh"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withDate(VALID_DATE_B)","lastModifiedDate":"2023-03-20"},{"lineNumber":151,"author":{"gitId":"JrmCkh"},"content":"                .withStartTime(VALID_START_TIME_B).withEndTime(VALID_END_TIME_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"JrmCkh"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"JrmCkh"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_DATE_DESC + DATE_DESC_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":162,"author":{"gitId":"JrmCkh"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withDate(VALID_DATE_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"JrmCkh"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_DATE_DESC + DATE_DESC_B + START_TIME_DESC_B + END_TIME_DESC_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":168,"author":{"gitId":"JrmCkh"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withDate(VALID_DATE_B)","lastModifiedDate":"2023-03-20"},{"lineNumber":169,"author":{"gitId":"JrmCkh"},"content":"                .withStartTime(VALID_START_TIME_B).withEndTime(VALID_END_TIME_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"JrmCkh":70,"lhy-hoyin":7,"-":96}},{"path":"src/test/java/ezschedule/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.commands.FindCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"    // TODO: change FindCommandParserTest to be like EditCommandParserTest","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"    /*","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"        FindEventDescriptor findEventDescriptor \u003d new FindEventDescriptor();","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"        findEventDescriptor.setName(new Name(\"A\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(findEventDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"        assertParseSuccess(parser, \"A B\", expectedFindCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"        assertParseSuccess(parser, \"n/ \\n A \\n \\t B  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"    */","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"JrmCkh":9,"lhy-hoyin":3,"-":21}},{"path":"src/test/java/ezschedule/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Date;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Time;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"    private static final String INVALID_NAME \u003d \"B@asketball\";","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"    private static final String INVALID_DATE \u003d \"2023-06-01!\";","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"    private static final String INVALID_TIME \u003d \" \";","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"    private static final String VALID_NAME \u003d \"Volleyball\";","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"    private static final String VALID_DATE \u003d \"2023-06-06\";","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"    private static final String VALID_TIME \u003d \"18:00\";","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(INDEX_FIRST_EVENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(INDEX_FIRST_EVENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"    public void parseDate_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate((String) null));","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"    public void parseDate_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"    public void parseDate_validValueWithoutWhitespace_returnsDate() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"        Date expectedDate \u003d new Date(VALID_DATE);","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"JrmCkh"},"content":"    public void parseDate_validValueWithWhitespace_returnsTrimmedDate() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"JrmCkh"},"content":"        String dateWithWhitespace \u003d WHITESPACE + VALID_DATE + WHITESPACE;","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"JrmCkh"},"content":"        Date expectedDate \u003d new Date(VALID_DATE);","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(dateWithWhitespace));","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"    public void parseTime_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTime((String) null));","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"JrmCkh"},"content":"    public void parseTime_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTime(INVALID_TIME));","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"JrmCkh"},"content":"    public void parseTime_validValueWithoutWhitespace_returnsTime() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"JrmCkh"},"content":"        Time expectedTime \u003d new Time(VALID_TIME);","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(expectedTime, ParserUtil.parseTime(VALID_TIME));","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"JrmCkh"},"content":"    public void parseTime_validValueWithWhitespace_returnsTrimmedTime() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"JrmCkh"},"content":"        String timeWithWhitespace \u003d WHITESPACE + VALID_TIME + WHITESPACE;","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"JrmCkh"},"content":"        Time expectedTime \u003d new Time(VALID_TIME);","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(expectedTime, ParserUtil.parseTime(timeWithWhitespace));","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"JrmCkh":36,"lhy-hoyin":4,"-":74}},{"path":"src/test/java/ezschedule/logic/parser/SchedulerParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.commands.AddCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.EditCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.FindCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.commands.FindCommand.FindEventDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.ListCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.commands.ShowNextCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.EventBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.EventUtil;","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"public class SchedulerParserTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"    private final SchedulerParser parser \u003d new SchedulerParser();","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(EventUtil.getAddCommand(event));","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(new AddCommand(event), command);","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EVENT.getOneBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"        List\u003cIndex\u003e indexFirstEvent \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"        indexFirstEvent.add(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(new DeleteCommand(indexFirstEvent), command);","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(event).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"                + INDEX_FIRST_EVENT.getOneBased() + \" \" + EventUtil.getEditEventDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_EVENT, descriptor), command);","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"        FindEventDescriptor descriptor \u003d new FindEventDescriptor();","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"        descriptor.setName(new Name(\"foo bar baz\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"                FindCommand.COMMAND_WORD + \" \" + EventUtil.getFindEventDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(new FindCommand(descriptor), command);","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"    public void parseCommand_showNext() throws Exception {","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(parser.parseCommand(ShowNextCommand.COMMAND_WORD) instanceof ShowNextCommand);","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(parser.parseCommand(ShowNextCommand.COMMAND_WORD + \" 3\") instanceof ShowNextCommand);","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"JrmCkh":32,"lhy-hoyin":19,"-":61}},{"path":"src/test/java/ezschedule/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.ART;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.BOAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.GuiSettings;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.EventContainsKeywordsPredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.testutil.SchedulerBuilder;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(new Scheduler(), new Scheduler(modelManager.getScheduler()));","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"        userPrefs.setSchedulerFilePath(Paths.get(\"scheduler/file/path\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"        userPrefs.setSchedulerFilePath(Paths.get(\"new/scheduler/file/path\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"    public void setSchedulerFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setSchedulerFilePath(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"    public void setSchedulerFilePath_validPath_setsSchedulerFilePath() {","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"        Path path \u003d Paths.get(\"scheduler/file/path\");","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"        modelManager.setSchedulerFilePath(path);","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(path, modelManager.getSchedulerFilePath());","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasEvent(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"    public void hasEvent_eventNotInScheduler_returnsFalse() {","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(modelManager.hasEvent(ART));","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"JrmCkh"},"content":"    public void hasEvent_eventInScheduler_returnsTrue() {","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"JrmCkh"},"content":"        modelManager.addEvent(ART);","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(modelManager.hasEvent(ART));","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"JrmCkh"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredEventList().remove(0));","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"        Scheduler scheduler \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"JrmCkh"},"content":"                new SchedulerBuilder().withEvent(ART).withEvent(BOAT).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"        Scheduler differentScheduler \u003d new Scheduler();","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"        modelManager \u003d new ModelManager(scheduler, userPrefs);","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(scheduler, userPrefs);","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"JrmCkh"},"content":"        // different scheduler -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentScheduler, userPrefs)));","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"JrmCkh"},"content":"        String[] keywords \u003d ART.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"lhy-hoyin"},"content":"        modelManager.updateFilteredEventList(new EventContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(modelManager.equals(new ModelManager(scheduler, userPrefs)));","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"JrmCkh"},"content":"        modelManager.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"lhy-hoyin"},"content":"        differentUserPrefs.setSchedulerFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(modelManager.equals(new ModelManager(scheduler, differentUserPrefs)));","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"JrmCkh":23,"lhy-hoyin":16,"-":94}},{"path":"src/test/java/ezschedule/model/SchedulerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_START_TIME_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.ART;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.getTypicalScheduler;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.EventBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"public class SchedulerTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    private final Scheduler scheduler \u003d new Scheduler();","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(Collections.emptyList(), scheduler.getEventList());","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e scheduler.resetData(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"    public void resetData_withValidReadOnlyScheduler_replacesData() {","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"        Scheduler newData \u003d getTypicalScheduler();","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        scheduler.resetData(newData);","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(newData, scheduler);","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"    public void resetData_withDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"        // Two events with the same identity fields","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"anthonynmh"},"content":"        Event editedA \u003d new EventBuilder(ART).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"anthonynmh"},"content":"        Event editedB \u003d new EventBuilder(ART).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"anthonynmh"},"content":"        List\u003cEvent\u003e newEvents \u003d Arrays.asList(editedA, editedB);","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"        SchedulerStub newData \u003d new SchedulerStub(newEvents);","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e scheduler.resetData(newData));","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e scheduler.hasEvent(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"    public void hasEvent_eventNotInScheduler_returnsFalse() {","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(scheduler.hasEvent(ART));","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"    public void hasEvent_eventInScheduler_returnsTrue() {","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"        scheduler.addEvent(ART);","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(scheduler.hasEvent(ART));","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"    public void hasEvent_eventWithSameIdentityFieldsInScheduler_returnsTrue() {","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"        scheduler.addEvent(ART);","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"        Event editedA \u003d new EventBuilder(ART).withStartTime(VALID_START_TIME_A).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(scheduler.hasEvent(editedA));","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e scheduler.getEventList().remove(0));","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"JrmCkh"},"content":"     * A stub ReadOnlyScheduler whose events list can violate interface constraints.","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"    private static class SchedulerStub implements ReadOnlyScheduler {","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"JrmCkh"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"JrmCkh"},"content":"        SchedulerStub(Collection\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"JrmCkh"},"content":"            this.events.setAll(events);","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"JrmCkh"},"content":"            return events;","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"JrmCkh":31,"lhy-hoyin":10,"anthonynmh":4,"-":55}},{"path":"src/test/java/ezschedule/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"    public void setSchedulerFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setSchedulerFilePath(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"JrmCkh":2,"lhy-hoyin":2,"-":16}},{"path":"src/test/java/ezschedule/model/event/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.model.event;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"public class DateTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"    public void isValidDate() {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"        // null phone number","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"        // invalid phone numbers","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(Date.isValidDate(\" \")); // spaces only","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(Date.isValidDate(\"2023-06\")); // less than 3 numbers","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(Date.isValidDate(\"twenty-twenty-three\")); // non-numeric","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(Date.isValidDate(\"t2023-06-02\")); // alphabets within digits","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(Date.isValidDate(\"2023 06 02\")); // no dashes","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"        // valid date","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(Date.isValidDate(\"2023-06-02\")); // exactly 3 numbers","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"JrmCkh":38}},{"path":"src/test/java/ezschedule/model/event/EventContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.model.event;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.EventBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"public class EventContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"    public void equals() {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"        EventContainsKeywordsPredicate firstPredicate \u003d new EventContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"        EventContainsKeywordsPredicate secondPredicate \u003d new EventContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"        EventContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"                new EventContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"        // One keyword","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"        EventContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"                new EventContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"        predicate \u003d new EventContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"        predicate \u003d new EventContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"        predicate \u003d new EventContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"        EventContainsKeywordsPredicate predicate \u003d new EventContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(predicate.test(new EventBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"        predicate \u003d new EventContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(predicate.test(new EventBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"        // Keywords match date, start time and end time, but does not match name","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"        predicate \u003d new EventContainsKeywordsPredicate(Arrays.asList(\"2023-06-01\", \"18:00\", \"20:00\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(predicate.test(new EventBuilder().withName(\"Alice\").withDate(\"2023-06-01\")","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"                .withStartTime(\"18:00\").withEndTime(\"20:00\").build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"JrmCkh":77}},{"path":"src/test/java/ezschedule/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.model.event;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_DATE_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_END_TIME_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_NAME_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_START_TIME_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"import static ezschedule.testutil.TypicalEvents.ART;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.EVENT_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.EVENT_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.EventBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"public class EventTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"    public void isSameEvent() {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(EVENT_A, EVENT_A);","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"        assertNotEquals(null, EVENT_A);","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"        Event editedA \u003d new EventBuilder(EVENT_A).withDate(VALID_DATE_B)","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"                .withStartTime(VALID_START_TIME_B).withEndTime(VALID_END_TIME_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"        assertNotEquals(EVENT_A, editedA);","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"        editedA \u003d new EventBuilder(EVENT_A).withName(VALID_NAME_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"        assertNotEquals(EVENT_A, editedA);","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"        Event editedB \u003d new EventBuilder(EVENT_A).withName(VALID_NAME_B.toLowerCase()).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"        assertNotEquals(EVENT_B, editedB);","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_B + \" \";","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"        editedB \u003d new EventBuilder(EVENT_B).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"        assertNotEquals(EVENT_B, editedB);","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"    public void equals() {","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"        Event aCopy \u003d new EventBuilder(EVENT_A).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(EVENT_A.equals(aCopy));","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(EVENT_A.equals(EVENT_A));","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(EVENT_A.equals(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(EVENT_A.equals(5));","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(EVENT_A.equals(EVENT_B));","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"        Event editedA \u003d new EventBuilder(EVENT_A).withName(VALID_NAME_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(EVENT_A.equals(editedA));","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"        editedA \u003d new EventBuilder(EVENT_A).withDate(VALID_DATE_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"        Assertions.assertFalse(EVENT_A.equals(editedA));","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"        // different start time -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"        editedA \u003d new EventBuilder(EVENT_A).withStartTime(VALID_START_TIME_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"        Assertions.assertFalse(EVENT_A.equals(editedA));","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"JrmCkh"},"content":"        // different end time -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"        editedA \u003d new EventBuilder(EVENT_A).withEndTime(VALID_END_TIME_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"        Assertions.assertFalse(EVENT_A.equals(editedA));","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"anthonynmh"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"anthonynmh"},"content":"    public void compareToItself() {","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"anthonynmh"},"content":"        Event event \u003d new EventBuilder(ART).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"anthonynmh"},"content":"        assertEquals(0, event.compareTo(event));","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"anthonynmh"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"anthonynmh"},"content":"    public void getCompletedStatus() {","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"anthonynmh"},"content":"        Event pastEventMorningTime \u003d new EventBuilder(ART).withDate(\"2020-01-01\").withEndTime(\"00:00\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"anthonynmh"},"content":"        Event pastEventNightTime \u003d new EventBuilder(ART).withDate(\"2020-01-01\").withEndTime(\"23:59\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"anthonynmh"},"content":"        Event futureEventMorningTime \u003d new EventBuilder(ART).withDate(\"3000-01-01\").withEndTime(\"00:00\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"anthonynmh"},"content":"        Event futureEventNightTime \u003d new EventBuilder(ART).withDate(\"3000-01-01\").withEndTime(\"23:59\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(pastEventMorningTime.isCompleted());","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(pastEventNightTime.isCompleted());","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(futureEventMorningTime.isCompleted());","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(futureEventNightTime.isCompleted());","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"JrmCkh":84,"anthonynmh":18}},{"path":"src/test/java/ezschedule/model/event/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.model.event;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"JrmCkh":2,"-":38}},{"path":"src/test/java/ezschedule/model/event/TimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.model.event;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"public class TimeTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"    private final Time time \u003d new Time(LocalTime.now().format(formatter));","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Time(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"    public void constructor_invalidTime_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Time(invalidTime));","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"    public void isValidTime() {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"        // null address","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e Time.isValidTime(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"        // invalid addresses","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(Time.isValidTime(\"\")); // empty string","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(Time.isValidTime(\" \")); // spaces only","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(Time.isValidTime(\"18.00\")); // not using : as separator","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(Time.isValidTime(\"20:000\")); // more than 2 digits","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"        // valid addresses","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(Time.isValidTime(\"18:00\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"    public void isPastTime() {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"        // time has passed","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"        assertTrue(time.isPastTime());","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"anthonynmh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"JrmCkh":34,"anthonynmh":14}},{"path":"src/test/java/ezschedule/model/event/UniqueEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.model.event;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.commands.CommandTestUtil.VALID_DATE_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.EVENT_A;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.EVENT_B;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.Assert;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.EventBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"public class UniqueEventListTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"    private final UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"    public void contains_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.contains(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"    public void contains_eventNotInList_returnsFalse() {","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(uniqueEventList.contains(EVENT_A));","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"    public void contains_eventInList_returnsTrue() {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"        uniqueEventList.add(EVENT_A);","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"        assertTrue(uniqueEventList.contains(EVENT_A));","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"    public void contains_eventWithSameNameDifferentFieldsInList_returnsFalse() {","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"        uniqueEventList.add(EVENT_A);","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"        Event editedA \u003d new EventBuilder(EVENT_A).withDate(VALID_DATE_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"        assertFalse(uniqueEventList.contains(editedA));","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"    public void add_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.add(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"    public void add_duplicateEvent_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"        uniqueEventList.add(EVENT_A);","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.add(EVENT_A));","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"    public void setEvent_nullTargetEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(null, EVENT_A));","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"    public void setEvent_nullEditedEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(EVENT_A, null));","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"    public void setEvent_targetEventNotInList_throwsEventNotFoundException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"        Assert.assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.setEvent(EVENT_A, EVENT_A));","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"    public void setEvent_editedEventIsSameEvent_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"        uniqueEventList.add(EVENT_A);","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"        uniqueEventList.setEvent(EVENT_A, EVENT_A);","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"JrmCkh"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"        expectedUniqueEventList.add(EVENT_A);","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"JrmCkh"},"content":"    public void setEvent_editedEventHasSameIdentity_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"JrmCkh"},"content":"        uniqueEventList.add(EVENT_A);","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"JrmCkh"},"content":"        Event editedA \u003d new EventBuilder(EVENT_A).withDate(VALID_DATE_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"JrmCkh"},"content":"        uniqueEventList.setEvent(EVENT_A, editedA);","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"JrmCkh"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"JrmCkh"},"content":"        expectedUniqueEventList.add(editedA);","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"JrmCkh"},"content":"    public void setEvent_editedEventHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"JrmCkh"},"content":"        uniqueEventList.add(EVENT_A);","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"JrmCkh"},"content":"        uniqueEventList.setEvent(EVENT_A, EVENT_B);","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"JrmCkh"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"JrmCkh"},"content":"        expectedUniqueEventList.add(EVENT_B);","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"JrmCkh"},"content":"    public void setEvent_editedEventHasNonUniqueIdentity_throwsDuplicateEventException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"JrmCkh"},"content":"        uniqueEventList.add(EVENT_A);","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"JrmCkh"},"content":"        uniqueEventList.add(EVENT_B);","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvent(EVENT_A, EVENT_B));","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"JrmCkh"},"content":"    public void remove_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.remove(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"JrmCkh"},"content":"    public void remove_eventDoesNotExist_throwsEventNotFoundException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.remove(EVENT_A));","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"JrmCkh"},"content":"    public void remove_existingEvent_removesEvent() {","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"JrmCkh"},"content":"        uniqueEventList.add(EVENT_A);","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"JrmCkh"},"content":"        uniqueEventList.remove(EVENT_A);","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"JrmCkh"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"JrmCkh"},"content":"    public void setEvents_nullUniqueEventList_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((UniqueEventList) null));","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"JrmCkh"},"content":"    public void setEvents_uniqueEventList_replacesOwnListWithProvidedUniqueEventList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"JrmCkh"},"content":"        uniqueEventList.add(EVENT_A);","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"JrmCkh"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"JrmCkh"},"content":"        expectedUniqueEventList.add(EVENT_B);","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"JrmCkh"},"content":"        uniqueEventList.setEvents(expectedUniqueEventList);","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"JrmCkh"},"content":"    public void setEvents_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((List\u003cEvent\u003e) null));","lastModifiedDate":"2023-03-20"},{"lineNumber":145,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":146,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"JrmCkh"},"content":"    public void setEvents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"JrmCkh"},"content":"        uniqueEventList.add(EVENT_A);","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"JrmCkh"},"content":"        List\u003cEvent\u003e eventList \u003d Collections.singletonList(EVENT_B);","lastModifiedDate":"2023-03-20"},{"lineNumber":151,"author":{"gitId":"JrmCkh"},"content":"        uniqueEventList.setEvents(eventList);","lastModifiedDate":"2023-03-20"},{"lineNumber":152,"author":{"gitId":"JrmCkh"},"content":"        UniqueEventList expecteduniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"JrmCkh"},"content":"        expecteduniqueEventList.add(EVENT_B);","lastModifiedDate":"2023-03-20"},{"lineNumber":154,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(expecteduniqueEventList, uniqueEventList);","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":156,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":157,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":158,"author":{"gitId":"JrmCkh"},"content":"    public void setEvents_listWithDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"JrmCkh"},"content":"        List\u003cEvent\u003e listWithDuplicateEvents \u003d Arrays.asList(EVENT_A, EVENT_A);","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvents(listWithDuplicateEvents));","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":162,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":163,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":164,"author":{"gitId":"JrmCkh"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":165,"author":{"gitId":"JrmCkh"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-20"},{"lineNumber":166,"author":{"gitId":"JrmCkh"},"content":"                -\u003e uniqueEventList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-20"},{"lineNumber":167,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":168,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"JrmCkh":166,"anthonynmh":2}},{"path":"src/test/java/ezschedule/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.model.tag;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"lhy-hoyin":2,"-":23}},{"path":"src/test/java/ezschedule/storage/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.storage.JsonAdaptedEvent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.BOAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Date;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Time;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"public class JsonAdaptedEventTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"    private static final String INVALID_NAME \u003d \"Univers@l Studios\";","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"    private static final String INVALID_DATE \u003d \"2023-01-six\";","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"    private static final String INVALID_START_TIME \u003d \" \";","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"    private static final String INVALID_END_TIME \u003d \"20.00\";","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"    private static final String VALID_NAME \u003d BOAT.getName().toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"    private static final String VALID_DATE \u003d BOAT.getDate().toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"    private static final String VALID_START_TIME \u003d BOAT.getStartTime().toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"    private static final String VALID_END_TIME \u003d BOAT.getEndTime().toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"    public void toModelType_validEventDetails_returnsEvent() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(BOAT);","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(BOAT, event.toModelType());","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"                new JsonAdaptedEvent(INVALID_NAME, VALID_DATE, VALID_START_TIME, VALID_END_TIME);","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"                new JsonAdaptedEvent(null, VALID_DATE, VALID_START_TIME, VALID_END_TIME);","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"                new JsonAdaptedEvent(VALID_NAME, INVALID_DATE, VALID_START_TIME, VALID_END_TIME);","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"                new JsonAdaptedEvent(VALID_NAME, null, VALID_START_TIME, VALID_END_TIME);","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName());","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"    public void toModelType_invalidStartTime_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_DATE, INVALID_START_TIME, VALID_END_TIME);","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"        String expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"    public void toModelType_nullStartTime_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_DATE, null, VALID_END_TIME);","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName());","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"JrmCkh"},"content":"    public void toModelType_invalidEndTime_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"JrmCkh"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_DATE, VALID_START_TIME, INVALID_END_TIME);","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"JrmCkh"},"content":"        String expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"JrmCkh"},"content":"    public void toModelType_nullEndTime_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"JrmCkh"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"JrmCkh"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_DATE, VALID_START_TIME, null);","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"JrmCkh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName());","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"JrmCkh":95}},{"path":"src/test/java/ezschedule/storage/JsonSchedulerStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.ART;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.EAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.FISHING;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.getTypicalScheduler;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.ReadOnlyScheduler;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Scheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.testutil.Assert;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"public class JsonSchedulerStorageTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSchedulerStorageTest\");","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"    public void readScheduler_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readScheduler(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"    private java.util.Optional\u003cReadOnlyScheduler\u003e readScheduler(String filePath) throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        return new JsonSchedulerStorage(Paths.get(filePath)).readScheduler(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"        assertFalse(readScheduler(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(DataConversionException.class, () -\u003e readScheduler(\"notJsonFormatScheduler.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"    public void readScheduler_invalidEventScheduler_throwDataConversionException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(DataConversionException.class, () -\u003e readScheduler(\"invalidEventScheduler.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"    public void readScheduler_invalidAndValidEventScheduler_throwDataConversionException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(DataConversionException.class, () -\u003e readScheduler(\"invalidAndValidEventScheduler.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"    public void readAndSaveScheduler_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"        Path filePath \u003d testFolder.resolve(\"TempScheduler.json\");","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"        Scheduler original \u003d getTypicalScheduler();","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"        JsonSchedulerStorage jsonSchedulerStorage \u003d new JsonSchedulerStorage(filePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"        jsonSchedulerStorage.saveScheduler(original, filePath);","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"        ReadOnlyScheduler readBack \u003d jsonSchedulerStorage.readScheduler(filePath).get();","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(original, new Scheduler(readBack));","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"        original.addEvent(EAT);","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"JrmCkh"},"content":"        original.removeEvent(ART);","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"        jsonSchedulerStorage.saveScheduler(original, filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"        readBack \u003d jsonSchedulerStorage.readScheduler(filePath).get();","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(original, new Scheduler(readBack));","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"JrmCkh"},"content":"        original.addEvent(FISHING);","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"        jsonSchedulerStorage.saveScheduler(original); // file path not specified","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"        readBack \u003d jsonSchedulerStorage.readScheduler().get(); // file path not specified","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(original, new Scheduler(readBack));","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"JrmCkh"},"content":"    public void saveScheduler_nullScheduler_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveScheduler(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"JrmCkh"},"content":"     * Saves {@code scheduler} at the specified {@code filePath}.","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"JrmCkh"},"content":"    private void saveScheduler(ReadOnlyScheduler scheduler, String filePath) {","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"JrmCkh"},"content":"            new JsonSchedulerStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"JrmCkh"},"content":"                    .saveScheduler(scheduler, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"JrmCkh"},"content":"    public void saveScheduler_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveScheduler(new Scheduler(), null));","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JrmCkh":37,"lhy-hoyin":10,"-":66}},{"path":"src/test/java/ezschedule/storage/JsonSerializableSchedulerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.commons.util.JsonUtil;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.Scheduler;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.testutil.TypicalEvents;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"public class JsonSerializableSchedulerTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"    private static final Path TEST_DATA_FOLDER \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"            Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableSchedulerTest\");","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"    private static final Path TYPICAL_EVENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalEventsScheduler.json\");","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"    private static final Path INVALID_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidEventScheduler.json\");","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"    private static final Path DUPLICATE_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateEventScheduler.json\");","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"    public void toModelType_typicalEventsFile_success() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"        JsonSerializableScheduler dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_EVENTS_FILE,","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"                JsonSerializableScheduler.class).get();","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"        Scheduler schedulerFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"        Scheduler typicalEventsScheduler \u003d TypicalEvents.getTypicalScheduler();","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(schedulerFromFile, typicalEventsScheduler);","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"    public void toModelType_invalidEventFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"        JsonSerializableScheduler dataFromFile \u003d JsonUtil.readJsonFile(INVALID_EVENT_FILE,","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"                JsonSerializableScheduler.class).get();","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"    public void toModelType_duplicateEvents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"        JsonSerializableScheduler dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_EVENT_FILE,","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"                JsonSerializableScheduler.class).get();","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableScheduler.MESSAGE_DUPLICATE_EVENT,","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"JrmCkh":47}},{"path":"src/test/java/ezschedule/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.GuiSettings;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"    private static final Path TEST_DATA_FOLDER \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"            Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"        userPrefs.setSchedulerFilePath(Paths.get(\"scheduler.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JrmCkh":4,"lhy-hoyin":4,"-":115}},{"path":"src/test/java/ezschedule/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.TypicalEvents.getTypicalScheduler;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.GuiSettings;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.ReadOnlyScheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.Scheduler;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"        JsonSchedulerStorage schedulerStorage \u003d new JsonSchedulerStorage(getTempFilePath(\"sc\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"        storageManager \u003d new StorageManager(schedulerStorage, userPrefsStorage);","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"    public void schedulerBookReadSave() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"         * {@link JsonSchedulerStorage} class.","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonSchedulerStorageTest} class.","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"        Scheduler original \u003d getTypicalScheduler();","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        storageManager.saveScheduler(original);","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"        ReadOnlyScheduler retrieved \u003d storageManager.readScheduler().get();","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"        assertEquals(original, new Scheduler(retrieved));","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"    public void getSchedulerFilePath() {","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"        assertNotNull(storageManager.getSchedulerFilePath());","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JrmCkh":9,"lhy-hoyin":9,"-":50}},{"path":"src/test/java/ezschedule/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.testutil;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":1,"-":33}},{"path":"src/test/java/ezschedule/testutil/EditEventDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.testutil;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Date;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Time;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":" * A utility class to help with building EditEventDescriptor objects.","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"public class EditEventDescriptorBuilder {","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"    private EditEventDescriptor descriptor;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"    public EditEventDescriptorBuilder() {","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"        descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"    public EditEventDescriptorBuilder(EditEventDescriptor descriptor) {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"        this.descriptor \u003d new EditEventDescriptor(descriptor);","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"     * Returns an {@code EditEventDescriptor} with fields containing {@code event}\u0027s details","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"    public EditEventDescriptorBuilder(Event event) {","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"        descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"        descriptor.setName(event.getName());","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"        descriptor.setDate(event.getDate());","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"        descriptor.setStartTime(event.getStartTime());","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"        descriptor.setEndTime(event.getEndTime());","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"     * Sets the {@code Name} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"    public EditEventDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"     * Sets the {@code Date} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"    public EditEventDescriptorBuilder withDate(String date) {","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"        descriptor.setDate(new Date(date));","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"     * Sets the {@code StartTime} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"    public EditEventDescriptorBuilder withStartTime(String time) {","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"        descriptor.setStartTime(new Time(time));","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"     * Sets the {@code EndTime} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"    public EditEventDescriptorBuilder withEndTime(String time) {","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"        descriptor.setEndTime(new Time(time));","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"    public EditEventDescriptor build() {","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"        return descriptor;","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"JrmCkh":71}},{"path":"src/test/java/ezschedule/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.testutil;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Date;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Time;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":" * A utility class to help with building Event objects.","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"public class EventBuilder {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"    public static final String DEFAULT_NAME \u003d \"CS2103 Event\";","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"    public static final String DEFAULT_DATE \u003d \"2023-05-01\";","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"    public static final String DEFAULT_START_TIME \u003d \"08:00\";","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"    public static final String DEFAULT_END_TIME \u003d \"10:00\";","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"    private Name name;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"    private Date date;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"    private Time startTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"    private Time endTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"     * Creates a {@code EventBuilder} with the default details.","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"    public EventBuilder() {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"        startTime \u003d new Time(DEFAULT_START_TIME);","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"        endTime \u003d new Time(DEFAULT_END_TIME);","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"     * Initializes the EventBuilder with the data of {@code eventToCopy}.","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"    public EventBuilder(Event eventToCopy) {","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"        name \u003d eventToCopy.getName();","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"        date \u003d eventToCopy.getDate();","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"        startTime \u003d eventToCopy.getStartTime();","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"        endTime \u003d eventToCopy.getEndTime();","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"     * Sets the {@code Name} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"    public EventBuilder withName(String name) {","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"     * Sets the {@code Date} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"    public EventBuilder withDate(String date) {","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"JrmCkh"},"content":"     * Sets the {@code StartTime} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"JrmCkh"},"content":"    public EventBuilder withStartTime(String time) {","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"JrmCkh"},"content":"        this.startTime \u003d new Time(time);","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"JrmCkh"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"JrmCkh"},"content":"     * Sets the {@code EndTime} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"JrmCkh"},"content":"    public EventBuilder withEndTime(String time) {","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"JrmCkh"},"content":"        this.endTime \u003d new Time(time);","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"JrmCkh"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"JrmCkh"},"content":"    public Event build() {","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"JrmCkh"},"content":"        return new Event(name, date, startTime, endTime);","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"JrmCkh":78}},{"path":"src/test/java/ezschedule/testutil/EventUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.testutil;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_END;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.commands.AddCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.commands.FindCommand.FindEventDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":" * A utility class for Event.","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"public class EventUtil {","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"     * Returns an add command string for adding the {@code event}.","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"    public static String getAddCommand(Event event) {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getEventDetails(event);","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"     * Returns the part of command string for the given {@code event}\u0027s details.","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    public static String getEventDetails(Event event) {","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"        sb.append(PREFIX_NAME + event.getName().fullName + \" \");","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"        sb.append(PREFIX_DATE + event.getDate().toString() + \" \");","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"        sb.append(PREFIX_START + event.getStartTime().toString() + \" \");","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"        sb.append(PREFIX_END + event.getEndTime().toString() + \" \");","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"     * Returns the part of command string for the given {@code EditEventDescriptor}\u0027s details.","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"    public static String getEditEventDescriptorDetails(EditEventDescriptor descriptor) {","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"        descriptor.getDate().ifPresent(date -\u003e sb.append(PREFIX_DATE).append(date).append(\" \"));","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"        descriptor.getStartTime().ifPresent(startTime -\u003e sb.append(PREFIX_START).append(startTime).append(\" \"));","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"        descriptor.getEndTime().ifPresent(endTime -\u003e sb.append(PREFIX_END).append(endTime).append(\" \"));","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"     * Returns the part of command string for the given {@code FindEventDescriptor}\u0027s details.","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"    public static String getFindEventDescriptorDetails(FindEventDescriptor descriptor) {","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"        descriptor.getDate().ifPresent(date -\u003e sb.append(PREFIX_DATE).append(date).append(\" \"));","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"JrmCkh":58}},{"path":"src/test/java/ezschedule/testutil/FindEventDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.testutil;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.commands.FindCommand.FindEventDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Date;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":" * A utility class to help with building FindEventDescriptor objects.","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"public class FindEventDescriptorBuilder {","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"    private FindEventDescriptor descriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"    public FindEventDescriptorBuilder() {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"        descriptor \u003d new FindEventDescriptor();","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"    public FindEventDescriptorBuilder(FindEventDescriptor descriptor) {","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"        this.descriptor \u003d new FindEventDescriptor(descriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"     * Returns an {@code FindEventDescriptor} with fields containing {@code event}\u0027s details","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"    public FindEventDescriptorBuilder(Event event) {","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"        descriptor \u003d new FindEventDescriptor();","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"        descriptor.setName(event.getName());","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"        descriptor.setDate(event.getDate());","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"     * Sets the {@code Name} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"    public FindEventDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"        return this;","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"     * Sets the {@code Date} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"    public FindEventDescriptorBuilder withDate(String date) {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"        descriptor.setDate(new Date(date));","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"        return this;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"    public FindEventDescriptor build() {","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"        return descriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"JrmCkh":51}},{"path":"src/test/java/ezschedule/testutil/SchedulerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.testutil;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Scheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":" * A utility class to help with building Scheduler objects.","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"public class SchedulerBuilder {","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    private Scheduler scheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    public SchedulerBuilder() {","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"        scheduler \u003d new Scheduler();","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    public SchedulerBuilder(Scheduler scheduler) {","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"        this.scheduler \u003d scheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"     * Adds a new {@code Event} to the {@code Scheduler} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    public SchedulerBuilder withEvent(Event event) {","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"        scheduler.addEvent(event);","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    public Scheduler build() {","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        return scheduler;","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"JrmCkh":2,"lhy-hoyin":30}},{"path":"src/test/java/ezschedule/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.testutil;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lhy-hoyin":1,"-":71}},{"path":"src/test/java/ezschedule/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.testutil;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"     * Returns the middle index of the event in the {@code model}\u0027s event list.","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"        return Index.fromOneBased(model.getFilteredEventList().size() / 2);","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"     * Returns the last index of the event in the {@code model}\u0027s event list.","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"        return Index.fromOneBased(model.getFilteredEventList().size());","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"     * Returns the event in the {@code model}\u0027s event list at {@code index}.","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"    public static Event getEvent(Model model, Index index) {","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"        return model.getFilteredEventList().get(index.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JrmCkh":8,"lhy-hoyin":3,"-":44}},{"path":"src/test/java/ezschedule/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"package ezschedule.testutil;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.Scheduler;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"import ezschedule.model.event.Event;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":" * A utility class containing a list of {@code Event} objects to be used in tests.","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"public class TypicalEvents {","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"    public static final Event ART \u003d new EventBuilder().withName(\"Art class\")","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"            .withDate(\"2023-05-01\").withStartTime(\"12:00\").withEndTime(\"14:00\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"    public static final Event BOAT \u003d new EventBuilder().withName(\"Boat race\")","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"            .withDate(\"2023-05-02\").withStartTime(\"14:00\").withEndTime(\"16:00\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"    public static final Event CARNIVAL \u003d new EventBuilder().withName(\"Carnival\")","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"            .withDate(\"2023-05-03\").withStartTime(\"16:00\").withEndTime(\"18:00\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"    public static final Event DRAG \u003d new EventBuilder().withName(\"Drag race\")","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"            .withDate(\"2023-05-04\").withStartTime(\"18:00\").withEndTime(\"20:00\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"    // Manually added","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"    public static final Event EAT \u003d new EventBuilder().withName(\"Eating contest\")","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"            .withDate(\"2023-05-05\").withStartTime(\"12:00\").withEndTime(\"13:00\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"    public static final Event FISHING \u003d new EventBuilder().withName(\"Fishing contest\")","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"            .withDate(\"2023-05-06\").withStartTime(\"14:00\").withEndTime(\"16:00\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"    // Manually added - Event\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"    public static final Event EVENT_A \u003d new EventBuilder().withName(CommandTestUtil.VALID_NAME_A)","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"            .withDate(CommandTestUtil.VALID_DATE_A).withStartTime(CommandTestUtil.VALID_START_TIME_A)","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"            .withEndTime(CommandTestUtil.VALID_END_TIME_A).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"    public static final Event EVENT_B \u003d new EventBuilder().withName(CommandTestUtil.VALID_NAME_B)","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"            .withDate(CommandTestUtil.VALID_DATE_B).withStartTime(CommandTestUtil.VALID_START_TIME_B)","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"            .withEndTime(CommandTestUtil.VALID_END_TIME_B).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"    public static final String KEYWORD_MATCHING_RACE \u003d \"race\"; // A keyword that matches race","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"    private TypicalEvents() {} // prevents instantiation","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"     * Returns an {@code Scheduler} with all the typical events.","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"    public static Scheduler getTypicalScheduler() {","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"        Scheduler sc \u003d new Scheduler();","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"            sc.addEvent(event);","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"JrmCkh"},"content":"        return sc;","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"JrmCkh"},"content":"    public static List\u003cEvent\u003e getTypicalEvents() {","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"JrmCkh"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ART, BOAT, CARNIVAL, DRAG));","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"JrmCkh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"JrmCkh"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"JrmCkh":58}},{"path":"src/test/java/ezschedule/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.testutil;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.index.Index;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"    public static final Index INDEX_FIRST_EVENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"    public static final Index INDEX_SECOND_EVENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"    public static final Index INDEX_THIRD_EVENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"JrmCkh":3,"lhy-hoyin":2,"-":7}},{"path":"src/test/java/ezschedule/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.ui;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"lhy-hoyin":1,"-":34}},{"path":"src/test/java/ezschedule/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.ui;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.MainApp;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"JrmCkh":1,"lhy-hoyin":2,"-":109}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"\u003c?import ezschedule.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"lhy-hoyin":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"\u003cfx:root type\u003d\"ezschedule.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"lhy-hoyin":1,"-":5}}]
