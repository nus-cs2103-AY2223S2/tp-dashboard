[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"# EZ-Schedule","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-W17-3/tp/workflows/Java%20CI/badge.svg)](","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"https://github.com/AY2223S2-CS2103-W17-3/tp/actions)","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"* EZ-Schedule is a desktop application for managing and scheduling of events,","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"  optimized for use via a Command Line Interface (CLI)","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"  while still providing an easy way to visualize all events through a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"* For documentation of this project, you may refer to our [website](https://ay2223s2-cs2103-w17-3.github.io/tp/)","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"## Acknowledgement","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"lhy-hoyin":10,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"BigheartSmallbrain"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"BigheartSmallbrain"},"content":"### Ho Yin","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"BigheartSmallbrain"},"content":"\u003cimg src\u003d\"images/lhy-hoyin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"BigheartSmallbrain"},"content":"[[github](https://github.com/lhy-hoyin)]","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"BigheartSmallbrain"},"content":"[[portfolio](team/lhy-hoyin.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"BigheartSmallbrain"},"content":"* Responsibilities: Data","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"BigheartSmallbrain"},"content":"### Jeremy","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"BigheartSmallbrain"},"content":"\u003cimg src\u003d\"images/jrmckh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"BigheartSmallbrain"},"content":"[[github](http://github.com/JrmCkh)]","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"BigheartSmallbrain"},"content":"[[portfolio](team/jermckh.md)]","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"BigheartSmallbrain"},"content":"### Yu Quan","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"BigheartSmallbrain"},"content":"\u003cimg src\u003d\"images/bigheartsmallbrain.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"BigheartSmallbrain"},"content":"[[github](http://github.com/BigheartSmallbrain)]","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"BigheartSmallbrain"},"content":"[[portfolio](team/bigheartsmallbrain.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"BigheartSmallbrain"},"content":"### Anthony","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"BigheartSmallbrain"},"content":"\u003cimg src\u003d\"images/anthonynmh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"BigheartSmallbrain"},"content":"[[github](http://github.com/anthonynmh)]","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"BigheartSmallbrain"},"content":"[[portfolio](team/anthonynmh.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"BigheartSmallbrain":18,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"anthonynmh"},"content":"* has a need to manage a significant number of events","lastModifiedDate":"2023-02-25"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"anthonynmh"},"content":"* prefers visual representation of output","lastModifiedDate":"2023-02-25"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"anthonynmh"},"content":"* can type fast","lastModifiedDate":"2023-02-25"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"anthonynmh"},"content":"**Value proposition**: manage events at high-level, provides faster event analysis with graphical outputs.","lastModifiedDate":"2023-02-25"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| Priority | As a …​          | I want to …​                               | So that I can…​                                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"anthonynmh"},"content":"|----------|------------------|--------------------------------------------|-------------------------------------------------------------------------|","lastModifiedDate":"2023-02-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"| `* * *`  | new user         | see usage instructions                     | refer to instructions when I forget how to use the App                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"anthonynmh"},"content":"| `* * *`  | user             | easily save events after closing the app   | generate it again when I start the app                                  |","lastModifiedDate":"2023-02-26"},{"lineNumber":277,"author":{"gitId":"anthonynmh"},"content":"| `* * *`  | user             | add a person\u0027s schedule into the app       | see their schedules                                                     |","lastModifiedDate":"2023-02-26"},{"lineNumber":278,"author":{"gitId":"anthonynmh"},"content":"| `* * *`  | user             | delete an event from the app               | remove events that are no longer scheduled                              |","lastModifiedDate":"2023-02-26"},{"lineNumber":279,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | forgetful user   | find my next event                         | see the upcoming event without having to check every events myself      |","lastModifiedDate":"2023-02-25"},{"lineNumber":280,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | user             | undo accidental deletions                  | easily restore accidents in scheduling                                  |","lastModifiedDate":"2023-02-25"},{"lineNumber":281,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | teacher          | find a free timeslot in my schedule        | schedule a timeslot for student consultations                           |","lastModifiedDate":"2023-02-25"},{"lineNumber":282,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | user             | find an event by name                      | locate details of events without having to go through the entire list   |","lastModifiedDate":"2023-02-25"},{"lineNumber":283,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | user             | edit my schedule                           | make last minute changes to events                                      |","lastModifiedDate":"2023-02-25"},{"lineNumber":284,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | user             | be able to schedule many events            | schedule as many events as I want                                       |","lastModifiedDate":"2023-02-25"},{"lineNumber":285,"author":{"gitId":"anthonynmh"},"content":"| `* *`    | user             | be able to have more than one scheduler    | generate different schedules for differnt events                        |","lastModifiedDate":"2023-02-26"},{"lineNumber":286,"author":{"gitId":"anthonynmh"},"content":"| `*`      | unmotivated user | have motivational quotes                   | feel motivated in my day                                                |","lastModifiedDate":"2023-02-25"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"anthonynmh"},"content":"(For all use cases below, the **System** is the `EZ-Schedule` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-02-25"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"anthonynmh"},"content":"**Use case: Add an event**","lastModifiedDate":"2023-02-25"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"anthonynmh"},"content":"1. User requests to add an event","lastModifiedDate":"2023-02-25"},{"lineNumber":299,"author":{"gitId":"anthonynmh"},"content":"2. System adds the event","lastModifiedDate":"2023-02-25"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"anthonynmh"},"content":"* 1a. The event already exist.","lastModifiedDate":"2023-02-25"},{"lineNumber":306,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":307,"author":{"gitId":"anthonynmh"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2023-02-25"},{"lineNumber":308,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":309,"author":{"gitId":"anthonynmh"},"content":"      Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":310,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":311,"author":{"gitId":"anthonynmh"},"content":"* 2a. The given event format invalid.","lastModifiedDate":"2023-02-25"},{"lineNumber":312,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":313,"author":{"gitId":"anthonynmh"},"content":"    * 2a1. System shows an error message.","lastModifiedDate":"2023-02-25"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"anthonynmh"},"content":"**Use case: Delete an event**","lastModifiedDate":"2023-02-25"},{"lineNumber":318,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":319,"author":{"gitId":"anthonynmh"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":320,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":321,"author":{"gitId":"anthonynmh"},"content":"1.  User requests to list events","lastModifiedDate":"2023-02-25"},{"lineNumber":322,"author":{"gitId":"anthonynmh"},"content":"2.  System shows a list of events","lastModifiedDate":"2023-02-25"},{"lineNumber":323,"author":{"gitId":"anthonynmh"},"content":"3.  User requests to delete a specific event in the list","lastModifiedDate":"2023-02-25"},{"lineNumber":324,"author":{"gitId":"anthonynmh"},"content":"4.  System deletes the event","lastModifiedDate":"2023-02-25"},{"lineNumber":325,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":326,"author":{"gitId":"anthonynmh"},"content":"    Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":327,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":328,"author":{"gitId":"anthonynmh"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"anthonynmh"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-25"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":332,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":334,"author":{"gitId":"anthonynmh"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2023-02-25"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":336,"author":{"gitId":"anthonynmh"},"content":"    * 2a1. System shows an error message.","lastModifiedDate":"2023-02-25"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"anthonynmh"},"content":"**Use case: Undo a delete**","lastModifiedDate":"2023-02-25"},{"lineNumber":341,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":342,"author":{"gitId":"anthonynmh"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":343,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":344,"author":{"gitId":"anthonynmh"},"content":"1. User requests to undo the recent delete","lastModifiedDate":"2023-02-25"},{"lineNumber":345,"author":{"gitId":"anthonynmh"},"content":"2. System restores the most recent delete","lastModifiedDate":"2023-02-25"},{"lineNumber":346,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":347,"author":{"gitId":"anthonynmh"},"content":"    Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":348,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":349,"author":{"gitId":"anthonynmh"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":350,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":351,"author":{"gitId":"anthonynmh"},"content":"* 1a. New event added duplicate of recent deleted event.","lastModifiedDate":"2023-02-25"},{"lineNumber":352,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":353,"author":{"gitId":"anthonynmh"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2023-02-25"},{"lineNumber":354,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":355,"author":{"gitId":"anthonynmh"},"content":"      Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":356,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":357,"author":{"gitId":"anthonynmh"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-02-25"},{"lineNumber":358,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":359,"author":{"gitId":"anthonynmh"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":360,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":361,"author":{"gitId":"anthonynmh"},"content":"**Use case: Find event by name**","lastModifiedDate":"2023-02-25"},{"lineNumber":362,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":363,"author":{"gitId":"anthonynmh"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":364,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":365,"author":{"gitId":"anthonynmh"},"content":"1. User requests to find an event by name","lastModifiedDate":"2023-02-25"},{"lineNumber":366,"author":{"gitId":"anthonynmh"},"content":"2. System shows a list of events matching the name","lastModifiedDate":"2023-02-25"},{"lineNumber":367,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":368,"author":{"gitId":"anthonynmh"},"content":"   Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":369,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":370,"author":{"gitId":"anthonynmh"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":371,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":372,"author":{"gitId":"anthonynmh"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-25"},{"lineNumber":373,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":374,"author":{"gitId":"anthonynmh"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":375,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":376,"author":{"gitId":"anthonynmh"},"content":"**Use case: Find next event**","lastModifiedDate":"2023-02-25"},{"lineNumber":377,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":378,"author":{"gitId":"anthonynmh"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":379,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":380,"author":{"gitId":"anthonynmh"},"content":"1. User requests for next upcoming event","lastModifiedDate":"2023-02-25"},{"lineNumber":381,"author":{"gitId":"anthonynmh"},"content":"2. System shows the next upcoming event","lastModifiedDate":"2023-02-25"},{"lineNumber":382,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":383,"author":{"gitId":"anthonynmh"},"content":"   Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":384,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":385,"author":{"gitId":"anthonynmh"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":386,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":387,"author":{"gitId":"anthonynmh"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-25"},{"lineNumber":388,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":389,"author":{"gitId":"anthonynmh"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":390,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":391,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"anthonynmh"},"content":"2. Should be able to hold up to 1000 events without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-25"},{"lineNumber":397,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"anthonynmh"},"content":"4. A user with colour blindness may require a high-contrast setting for graphical outputs.","lastModifiedDate":"2023-02-25"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"anthonynmh"},"content":"* **Event**: A task with a starting time and an ending time","lastModifiedDate":"2023-02-26"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"anthonynmh":98,"-":361}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"# User Guide","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"EZ-Schedule is a **desktop application for managing and scheduling of events, optimized for use via a Command Line","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"Interface** (CLI) while still providing an easy way to visualize all events through a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"## Index","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"* [Quick start](#quick-start)","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"* [Features](#features)","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"    * [Viewing help: `help`](#help)","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    * [Adding a event: `add`](#add)","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    * [Deleting a event: `delete`](#delete)","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    * [Listing all events: `list`](#list)","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"    * [Retrieving next event: `next`](#next)","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    * [Locating all events by keyword: `find`](#find)","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    * [Exits the application: `exit`](#exit)","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"* [FAQ](#faq)","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"* [Command summary](#command-summary)","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"## \u003cdiv id\u003d\"quick-start\"\u003e Quick start \u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"2. Download the latest `EzSchedule.jar` from [here](https://github.com/AY2223S2-CS2103-W17-3/tp/releases).","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your EzSchedule.","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar EzSchedule.jar` command","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"   to run the application.","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"## \u003cdiv id\u003d\"features\"\u003e Features \u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"### \u003cdiv id\u003d\"help\"\u003e Viewing help: `help` (coming soon) \u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"Shows the user a list of instructions available.","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"Example: `help`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"### \u003cdiv id\u003d\"add\"\u003e Adding a event: `add` (coming soon)\u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"Adds an event into the Scheduler.","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"Format: `add \u003cevent\u003e /\u003cstart time\u003e /\u003cend time\u003e`","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"Example:","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"* `add booked tennis court /2023-02-01 /2023-02-02`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"### \u003cdiv id\u003d\"delete\"\u003e Deleting a event: `delete` (coming soon)\u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"Deletes an event in the Scheduler.","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"Format: `delete \u003cevent\u003e`","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"Example:","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"* `delete booked tennis court `\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"### \u003cdiv id\u003d\"list\"\u003e Listing all events: `list` (coming soon)\u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"Displays all events currently saved in the Scheduler.","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"Format: `list`","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"Example: `list`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"### \u003cdiv id\u003d\"next\"\u003e Retrieving next event: `next` (coming soon)\u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"Searches the Scheduler and returns the next upcoming event start time.","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"Format: `next event`","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"Example: `next event`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"### \u003cdiv id\u003d\"find\"\u003e Locating all events by keyword: `find` (coming soon)\u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"Finds the Scheduler for the task, returns all events containing the relevant keyword.","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"Format: `find \u003cevent\u003e`","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"Example: `find booked tennis court`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"### \u003cdiv id\u003d\"exit\"\u003e Exits the application `exit` (coming soon)\u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"Exits the application.","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"Example: `exit`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"## \u003cdiv id\u003d\"faq\"\u003e FAQ \u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"**Q:** On a scale of 1 to 10, how awesome is this product?","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"**A:** 10\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"## \u003cdiv id\u003d\"command-summary\"\u003e Command summary \u003c/div\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"Action |      Format      |                                              Example |","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":":----- |:----------------:|-----------------------------------------------------:|","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"Help   |      `help`      |                                               `help` |","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"Add    |  `add \u003cevent\u003e`   |     `add booked tennis court /2023-02-01 /2023-02-0` |","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"Delete | `delete \u003cevent\u003e` |                         `delete booked tennis court` |","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"List   |      `list`      |                                               `list` |","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"Next   |   `next event`   |                                         `next event` |","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"Find   |  `find \u003cevent\u003e`  |                           `find booked tennis court` |","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"Exit   |      `exit`      |                                               `exit` |","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"lhy-hoyin":62,"-":44}},{"path":"docs/team/anthonynmh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"anthonynmh"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"anthonynmh"},"content":"layout: page","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"anthonynmh"},"content":"title: Anthony\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"anthonynmh"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"anthonynmh"},"content":"### Project: EZ-Schedule","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"anthonynmh"},"content":"EZ-Schedule is an application that allows for a high-level overview of all events for a particular administrator.","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"anthonynmh"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"anthonynmh"},"content":"Examples:","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"anthonynmh"},"content":"- company manager - employee schedules","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"anthonynmh"},"content":"- badminton court manager - badminton court bookings","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"anthonynmh"},"content":"- teacher - students","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"anthonynmh"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"anthonynmh"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"anthonynmh"},"content":"GUI interactivity may be added in the future.","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"anthonynmh"},"content":"It is written in Java.","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"anthonynmh"},"content":"### Summary of contributions","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"anthonynmh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"anthonynmh"},"content":"* **New Feature**: to be added","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"anthonynmh"},"content":"* **Code contributed**: [Link to code contributions -- to be added]()","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"anthonynmh"},"content":"* **Project management**:","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"anthonynmh"},"content":"    * to be added","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"anthonynmh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"anthonynmh"},"content":"    * to be added","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"anthonynmh"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"anthonynmh"},"content":"    * User Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"anthonynmh"},"content":"        * Updated the feature list for v1.2","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"anthonynmh"},"content":"        * Updated the command summary for v1.2","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"anthonynmh"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"anthonynmh"},"content":"        * Updated the user stories for v1.2","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"anthonynmh"},"content":"        * Updated the use cases for v1.2","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"anthonynmh"},"content":"* **Community**:","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"anthonynmh"},"content":"    * to be added","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"anthonynmh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"anthonynmh"},"content":"* **Tools**:","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"anthonynmh"},"content":"    * to be added","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"anthonynmh":46}},{"path":"docs/team/bigheartsmallbrain.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BigheartSmallbrain"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"BigheartSmallbrain"},"content":"layout: page","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"BigheartSmallbrain"},"content":"title: Zhang Yuquan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"BigheartSmallbrain"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"BigheartSmallbrain"},"content":"### Project: Ez-Schedule","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"BigheartSmallbrain"},"content":"EZ-Schedule is a desktop application used for managing and scheduling of events. The user interacts with it using a","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"BigheartSmallbrain"},"content":"Command Line Interface (CLI), and it has a Graphical User Interface (GUI) created with JavaFX. It is written in Java,","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"BigheartSmallbrain"},"content":"and has about ***to be added soon*** kLoC.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"BigheartSmallbrain"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Code contributed**: [To be added soon](https://github.com/AY2223S2-CS2103-W17-3/tp)","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Project management**:","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"BigheartSmallbrain"},"content":"  * To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"BigheartSmallbrain"},"content":"  * To be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"BigheartSmallbrain"},"content":"  * User Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"BigheartSmallbrain"},"content":"    * Crafted the draft user","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"BigheartSmallbrain"},"content":"      guide [markdown file](https://github.com/AY2223S2-CS2103-W17-3/tp/pull/27/commits/5b329d62e2dbc73966ab2a4e59998c8d0657c246)","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"BigheartSmallbrain"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"BigheartSmallbrain"},"content":"    * To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Community**:","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"BigheartSmallbrain"},"content":"  * PRs reviewed (with non-trivial review comments): To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"BigheartSmallbrain"},"content":"  * Contributed to forum discussions: To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"BigheartSmallbrain"},"content":"  * Reported bugs and suggestions for other teams in the class: To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"BigheartSmallbrain"},"content":"  * Some parts of the history feature I added was adopted by several other class mates: To be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"BigheartSmallbrain"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"BigheartSmallbrain"},"content":"* **Tools**:","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"BigheartSmallbrain"},"content":"  * To be added soon","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"BigheartSmallbrain":41}},{"path":"docs/team/jrmckh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JrmCkh"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"JrmCkh"},"content":"Chia Jeremy\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"JrmCkh"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"JrmCkh"},"content":"### \u003cspan style\u003d\"color:orange\"\u003e Project: EzSchedule \u003c/span\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"JrmCkh"},"content":"EZ-Schedule is a desktop application used for managing and scheduling of events. The user interacts with it using a","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"JrmCkh"},"content":"Command Line Interface (CLI), and it has a Graphical User Interface (GUI) created with JavaFX. It is written in Java,","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"JrmCkh"},"content":"and has about ***to be added soon*** kLoC.","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"JrmCkh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"JrmCkh"},"content":"### Overview","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"JrmCkh"},"content":"* [Summary of Contributions](#summary-of-contributions-)","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"JrmCkh"},"content":"* [Code contributed](#code-contributed-)","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"JrmCkh"},"content":"* [New Features](#new-features-)","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"JrmCkh"},"content":"* [Enhancements to existing features](#enhancements-to-existing-features-)","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"JrmCkh"},"content":"* [Project management](#project-management-)","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"JrmCkh"},"content":"* [Documentation](#documentation-)","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"JrmCkh"},"content":"* [Community](#community-)","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"JrmCkh"},"content":"* [Tools](#tools-)","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"JrmCkh"},"content":"### Summary of Contributions:","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"JrmCkh"},"content":"* to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"JrmCkh"},"content":"### Code contributed:","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"JrmCkh"},"content":"* [to be added soon](https://github.com/AY2223S2-CS2103-W17-3/tp)","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"JrmCkh"},"content":"### New Features:","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"JrmCkh"},"content":"* to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"JrmCkh"},"content":"### Enhancements to existing features:","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"JrmCkh"},"content":"* to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"JrmCkh"},"content":"### Project management:","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"JrmCkh"},"content":"* to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"JrmCkh"},"content":"### Documentation:","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"JrmCkh"},"content":"* User Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"JrmCkh"},"content":"    * Crafted the draft user","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"JrmCkh"},"content":"      guide [markdown file](https://github.com/AY2223S2-CS2103-W17-3/tp/pull/27/commits/5b329d62e2dbc73966ab2a4e59998c8d0657c246)","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"JrmCkh"},"content":"* Developer Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"JrmCkh"},"content":"    * to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"JrmCkh"},"content":"* Project Portfolio Page:","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"JrmCkh"},"content":"    * Crafted the draft PPP [markdown file]()","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"JrmCkh"},"content":"### Community:","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"JrmCkh"},"content":"* PRs reviewed: [#27](https://github.com/AY2223S2-CS2103-W17-3/tp/pull/27)","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"JrmCkh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"JrmCkh"},"content":"### Tools:","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"JrmCkh"},"content":"* to be added soon","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"JrmCkh":51}},{"path":"docs/team/lhy-hoyin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"title: Ho Yin\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"## Overview","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"Project: EZ-Schedule","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"EZ-Schedule is a desktop application for managing and scheduling of events,","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"optimized for use via a Command Line Interface (CLI)","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"while still providing an easy way to visualize all events through a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"## Summary of Contributions","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"### Code contributed","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"Check it out [here](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dlhy-hoyin\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"### Enhancements implemented","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"### Contributions to the User Guide","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"to be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"### Contributions to the Developer Guide","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"- Set up the GitHub team org and repository","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"- Create milestones and labels within the team repository","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"- Add corresponding labels to issues and PRs (when missing)","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"### Review/mentoring contributions","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"[pr-reviewed-v1.1]: https://github.com/AY2223S2-CS2103-W17-3/tp/pulls?q\u003dis%3Apr+is%3Amerged+reviewed-by%3Alhy-hoyin+milestone%3Av1.1","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"[pr-reviewed-v1.2]: https://github.com/AY2223S2-CS2103-W17-3/tp/pulls?q\u003dis%3Apr+is%3Amerged+reviewed-by%3Alhy-hoyin+milestone%3Av1.2","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"[pr-reviewed-v1.3]: https://github.com/AY2223S2-CS2103-W17-3/tp/pulls?q\u003dis%3Apr+is%3Amerged+reviewed-by%3Alhy-hoyin+milestone%3Av1.3","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"[pr-reviewed-v1.4]: https://github.com/AY2223S2-CS2103-W17-3/tp/pulls?q\u003dis%3Apr+is%3Amerged+reviewed-by%3Alhy-hoyin+milestone%3Av1.4","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"[pr-reviewed-total]: https://github.com/AY2223S2-CS2103-W17-3/tp/pulls?q\u003dis%3Apr+is%3Amerged+reviewed-by%3Alhy-hoyin","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"| Milestone | PRs reviewed             |","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"|-----------|--------------------------|","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"| v1.1      | [4] [pr-reviewed-v1.1]   |","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"| v1.2      | [ ] [pr-reviewed-v1.2]   |","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"| v1.3      | [ ] [pr-reviewed-v1.3]   |                                                                               ","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"| v1.4      | [ ] [pr-reviewed-v1.4]   |                                                                             ","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"| Total:    | [4] [pr-reviewed-total]  |","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"PR Highlights","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"* Milestone 1","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"  * [Updated AboutUs and UserGuide](https://github.com/AY2223S2-CS2103-W17-3/tp/pull/9)","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"  * [Branch user story Developer Guide](https://github.com/AY2223S2-CS2103-W17-3/tp/pull/31)","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"### Contributions beyond the project team","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"## Contribution Highlights","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"to be added soon","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"lhy-hoyin":55}},{"path":"src/main/java/ezschedule/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"public class AppParameters {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    private Path configPath;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"        return configPath;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        return appParameters;","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"        return configPath.hashCode();","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":64}},{"path":"src/main/java/ezschedule/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":" * The main entry point to the application.","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":" *","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":" * entry point of the application:","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":" *","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":" *","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":" *","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"public class Main {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"lhy-hoyin":25}},{"path":"src/main/java/ezschedule/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Config;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Version;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.util.StringUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":" * Runs the application.","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"public class MainApp extends Application {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"    // TODO: also declare Ui, Logic, Storage, etc","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    protected Config config;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    public void init() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"        super.init();","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"        // TODO: initialise Ui, Logic, Storage, etc","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"        Config initializedConfig;","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"        return initializedConfig;","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"        logger.info(\"Starting Ez-Schedule \" + MainApp.VERSION);","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"        // TODO: Start to run UI of app","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"        //ui.start(primaryStage);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"        // TODO: Temporary code to allow exiting","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"        String input;","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"        do {","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"            System.out.println(\"To be implemented. Type \u0027exit\u0027 to stop. You typed: \" + input);","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"        } while (input.compareTo(\"exit\") !\u003d 0);","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"        Platform.exit();","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"    public void stop() {","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"        // TODO: do saving before closing","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":105}},{"path":"src/main/java/ezschedule/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":" * Config values used by the app","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"public class Config {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    // Config values customizable through config file","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        return logLevel;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":63}},{"path":"src/main/java/ezschedule/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.awt.Point;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":" * Guarantees: immutable.","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    private final double windowWidth;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    private final double windowHeight;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    public GuiSettings() {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"        return windowWidth;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        return windowHeight;","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":79}},{"path":"src/main/java/ezschedule/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"public class LogsCenter {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    public static void init(Config config) {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"        removeHandlers(logger);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"        addFileHandler(logger);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"        return fileHandler;","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":"        return consoleHandler;","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":112}},{"path":"src/main/java/ezschedule/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Container for user visible messages.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"public class Messages {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":13}},{"path":"src/main/java/ezschedule/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    private final int major;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    private final int minor;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"    private final int patch;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        this.major \u003d major;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"    public int getMajor() {","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        return major;","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"    public int getMinor() {","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"        return minor;","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"    public int getPatch() {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        return patch;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        return isEarlyAccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"     * @param versionString version number string","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"     * @return a Version object","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"    @JsonValue","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"            return major - other.major;","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"            return minor - other.minor;","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"            return patch - other.patch;","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"            return 0;","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"            return -1;","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"        return 1;","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"lhy-hoyin"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"lhy-hoyin"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"lhy-hoyin"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":116}},{"path":"src/main/java/ezschedule/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core.index;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" *","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"public class Index {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    public int getZeroBased() {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"    public int getOneBased() {","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":54}},{"path":"src/main/java/ezschedule/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"        super(cause);","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":11}},{"path":"src/main/java/ezschedule/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"        super(message);","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"     * @param cause of the main exception","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"        super(message, cause);","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":21}},{"path":"src/main/java/ezschedule/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.MainApp;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":" * A container for App specific utility functions","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"public class AppUtil {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"        if (!condition) {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"        if (!condition) {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":42}},{"path":"src/main/java/ezschedule/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":" * Utility methods related to Collections","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"public class CollectionUtil {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(items);","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(items);","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":35}},{"path":"src/main/java/ezschedule/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Config;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"public class ConfigUtil {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":23}},{"path":"src/main/java/ezschedule/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":" * Writes and reads files","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"public class FileUtil {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"     * otherwise returns false.","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"            Paths.get(path);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"            createFile(file);","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"            return;","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        Files.createFile(file);","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"     * Assumes file exists","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"     * Writes given string to a file.","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":83}},{"path":"src/main/java/ezschedule/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.LogsCenter;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"public class JsonUtil {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"            throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"        T jsonFile;","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"lhy-hoyin"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"lhy-hoyin"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"lhy-hoyin"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"lhy-hoyin"},"content":"            super(vc);","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"lhy-hoyin"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"lhy-hoyin"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"lhy-hoyin"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"lhy-hoyin"},"content":"        /**","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"lhy-hoyin"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"lhy-hoyin"},"content":"         * \u003cp\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"lhy-hoyin"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"lhy-hoyin"},"content":"         *","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"lhy-hoyin"},"content":"         */","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"lhy-hoyin"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"lhy-hoyin"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"lhy-hoyin"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"lhy-hoyin"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"lhy-hoyin"},"content":"            return Level.class;","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":143}},{"path":"src/main/java/ezschedule/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.StringWriter;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"public class StringUtil {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(word);","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(t);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":68}},{"path":"src/main/java/ezschedule/slots/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.slots;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Represent a event (i.e. something to be done at a certain time).","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"public class Event extends Slot {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"    // Identity fields","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"    private String description;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    private String location; // optional","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"     * Constructs an instance of Event.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    public Event(String description, String date, String startTime, String endTime) {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"        super(date, startTime, endTime);","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"lhy-hoyin":24}},{"path":"src/main/java/ezschedule/slots/Slot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.slots;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Represent a timeslot.","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"public abstract class Slot {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"    private String date;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"    private String startTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"    private String endTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    Slot(String date, String startTime, String endTime) {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    public String getDate() {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        return date;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    public String getStartTime() {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"        return startTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    public String getEndTime() {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        return endTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"lhy-hoyin":31}},{"path":"src/main/java/ezschedule/slots/SlotScheduler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.slots;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Represent the scheduler to manage slots.","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"public class SlotScheduler {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"    // List\u003cSlot\u003e \u003d ...","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"lhy-hoyin":9}},{"path":"src/main/java/ezschedule/slots/VenueBooking.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.slots;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":" * Represent a booking made for a venue/location.","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"public class VenueBooking extends Slot {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"    private String venue;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"    private String bookedBy;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    VenueBooking(String venue, String bookedBy, String date, String startTime, String endTime) {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"        super(date, startTime, endTime);","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"        this.bookedBy \u003d bookedBy;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"lhy-hoyin":16}},{"path":"src/test/java/ezschedule/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"public class AppParametersTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":58}},{"path":"src/test/java/ezschedule/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"public class ConfigTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":27}},{"path":"src/test/java/ezschedule/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"public class VersionTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        // boundary at 0","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"        // normal values","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        // big numbers","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"        Version one;","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"        Version another;","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests equality","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests different patch","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests different minor","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests different major","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"lhy-hoyin"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"lhy-hoyin"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"lhy-hoyin"},"content":"        Version one;","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"lhy-hoyin"},"content":"        Version another;","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"lhy-hoyin"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"lhy-hoyin"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"lhy-hoyin"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"lhy-hoyin"},"content":"                                              int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":135}},{"path":"src/test/java/ezschedule/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.core.index;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"public class IndexTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"        // invalid index","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"        // check equality using the same base","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        // invalid index","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        // check equality using the same base","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    public void equals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":60}},{"path":"src/test/java/ezschedule/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"public class AppUtilTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":36}},{"path":"src/test/java/ezschedule/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"        // no arguments","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"        // any non-empty argument list","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"        // null reference","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"        // null reference","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"        // empty list","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"        // list with all non-null elements","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":108}},{"path":"src/test/java/ezschedule/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.core.Config;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"import ezschedule.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"    @TempDir","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"    public Path tempDir;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"        return config;","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"        //Try saving when the file exists","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"lhy-hoyin"},"content":"                ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"lhy-hoyin"},"content":"                : null;","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":116}},{"path":"src/test/java/ezschedule/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"public class FileUtilTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"    public void isValidPath() {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"        // valid path","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"        // invalid path","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":23}},{"path":"src/test/java/ezschedule/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import static ezschedule.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"public class StringUtilTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"        // EP: empty strings","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"        // EP: not a number","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"        // EP: zero","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"        // EP: zero as prefix","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        // EP: signed numbers","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"lhy-hoyin"},"content":"        // EP: numbers with white space","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"lhy-hoyin"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"lhy-hoyin"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"lhy-hoyin"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"lhy-hoyin"},"content":"    /*","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"lhy-hoyin"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"lhy-hoyin"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"lhy-hoyin"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"lhy-hoyin"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"lhy-hoyin"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"lhy-hoyin"},"content":"                -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"lhy-hoyin"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"lhy-hoyin"},"content":"                -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lhy-hoyin"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lhy-hoyin"},"content":"    /*","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"lhy-hoyin"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lhy-hoyin"},"content":"     *   - any word","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"lhy-hoyin"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"lhy-hoyin"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"lhy-hoyin"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"lhy-hoyin"},"content":"     *   - empty string","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"lhy-hoyin"},"content":"     *   - one word","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"lhy-hoyin"},"content":"     *   - multiple words","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"lhy-hoyin"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"lhy-hoyin"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"lhy-hoyin"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"lhy-hoyin"},"content":"     *   - last word in sentence","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"lhy-hoyin"},"content":"     *   - middle word in sentence","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"lhy-hoyin"},"content":"     *   - matches multiple words","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"lhy-hoyin"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"lhy-hoyin"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"lhy-hoyin"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"lhy-hoyin"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"lhy-hoyin"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"lhy-hoyin"},"content":"        // Empty sentence","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"lhy-hoyin"},"content":"        // Matches a partial word only","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"lhy-hoyin"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"lhy-hoyin"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"lhy-hoyin"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"lhy-hoyin"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"lhy-hoyin"},"content":"    /*","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"lhy-hoyin"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"lhy-hoyin"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"lhy-hoyin"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"lhy-hoyin"},"content":"                .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"lhy-hoyin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"lhy-hoyin"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"lhy-hoyin"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":143}},{"path":"src/test/java/ezschedule/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lhy-hoyin"},"content":"package ezschedule.testutil;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lhy-hoyin"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"lhy-hoyin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"lhy-hoyin"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"lhy-hoyin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"lhy-hoyin"},"content":"public class Assert {","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lhy-hoyin"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"lhy-hoyin"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"lhy-hoyin"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"lhy-hoyin"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"lhy-hoyin"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lhy-hoyin"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"lhy-hoyin"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"lhy-hoyin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"lhy-hoyin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"lhy-hoyin"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"lhy-hoyin"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"lhy-hoyin"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"lhy-hoyin"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"lhy-hoyin"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"lhy-hoyin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"lhy-hoyin"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"lhy-hoyin"},"content":"            Executable executable) {","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"lhy-hoyin"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"lhy-hoyin"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"lhy-hoyin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"lhy-hoyin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"lhy-hoyin":34}}]
