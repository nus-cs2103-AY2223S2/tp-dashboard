[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# TeachMeSenpai","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"[![CI Status][CI Status badge]][CI Status link]","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"[CI Status badge]: https://github.com/AY2223S2-CS2103T-W12-2/tp/workflows/Java%20CI/badge.svg","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"[CI Status link]: https://github.com/AY2223S2-CS2103T-W12-2/tp/actions","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"A application for private academic tutors to manage their students\u0027 details and progress.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"## Acknowledgement","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"Sheemo":5,"EvitanRelta":5,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"run {","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"alextang809"},"content":"    String javaFxVersion \u003d \u002716\u0027","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"EvitanRelta"},"content":"    testImplementation group: \u0027org.junit.platform\u0027, name: \u0027junit-platform-launcher\u0027, version: \u00271.5.2\u0027","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"    archiveFileName \u003d \u0027teachmesenpai.jar\u0027","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wendy0107":1,"EvitanRelta":5,"alextang809":1,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"### Wen Li","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"\u003cimg src\u003d\"images/wendy0107.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"[[github](http://github.com/wendy0107)]","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"EvitanRelta"},"content":"[[portfolio](team/wendy0107.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"EvitanRelta"},"content":"* Role: Team Lead","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"EvitanRelta"},"content":"* Responsibilities: Leading the team","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"### Shaun Tan","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"\u003cimg src\u003d\"images/evitanrelta.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"[[github](https://github.com/EvitanRelta)]","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"[[portfolio](team/evitanrelta.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"* Role: Developer","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"* Responsibilities: Dev Ops","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"### Shao Hong","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"\u003cimg src\u003d\"images/sheemo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"EvitanRelta"},"content":"[[github](http://github.com/Sheemo)]","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"EvitanRelta"},"content":"[[portfolio](team/sheemo.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"* Responsibilities: UI","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"EvitanRelta"},"content":"### Benny","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"EvitanRelta"},"content":"\u003cimg src\u003d\"images/bentimate.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"EvitanRelta"},"content":"[[github](http://github.com/Bentimate)]","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"EvitanRelta"},"content":"[[portfolio](team/bentimate.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"EvitanRelta"},"content":"* Responsibilities: Coding","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"EvitanRelta"},"content":"### Wei Chun","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"EvitanRelta"},"content":"\u003cimg src\u003d\"images/alextang809.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"EvitanRelta"},"content":"[[github](http://github.com/alextang809)]","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"EvitanRelta"},"content":"[[portfolio](team/alextang809.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"EvitanRelta"},"content":"* Responsibilities: Data","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"EvitanRelta":28,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"## **About TeachMeSenpai**","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"TeachMeSenpai **is a student managing application** specially customised for **teaching assistants (TA) in NUS** who have a lot of students to keep track of. TeachMeSenpai is optimised for fast-typists with a **Command Line Interface (CLI)** with the benefits of a **Graphical User Interface (GUI)**.","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"This Developer Guide provides in-depth documentation on the design and implementation consideration behind TeachMeSenpai. This guide covers everything you need to know from the architecture down to the feature implementation details of TeachMeSenpai.","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"If you\u0027re eager to get started with TeachMeSenpai, head over to [Setting up, getting started](#setting-up-getting-started)! If you\u0027d like to learn more about how TeachMeSenpai was implemented, you can head over to [Implementation](#implementation)! You may use this guide to evolve TeachMeSenpai to suit your needs.","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"## **Table of Contents**","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"{:.no_toc}","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"1. Table of Contents","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org/)","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"* All icons used are taken from [flaticon](https://www.flaticon.com/)","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"EvitanRelta"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S2-CS2103T-W12-2/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"EvitanRelta"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103T-W12-2/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103T-W12-2/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"EvitanRelta"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103T-W12-2/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"EvitanRelta"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S2-CS2103T-W12-2/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103T-W12-2/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"EvitanRelta"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-W12-2/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"EvitanRelta"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103T-W12-2/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"wendy0107"},"content":"* stores every modified version of the address book in `VersionedAddressBook`.","lastModifiedDate":"2023-04-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"EvitanRelta"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":143,"author":{"gitId":"wendy0107"},"content":":information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` and `Module` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, and one `Module` object per unique module instead of each `Person` needing their own `Tag` and `Module` objects.","lastModifiedDate":"2023-04-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"EvitanRelta"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-W12-2/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"EvitanRelta"},"content":"### Add Feature","lastModifiedDate":"2023-03-26"},{"lineNumber":171,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"EvitanRelta"},"content":"#### Implementation Details","lastModifiedDate":"2023-03-26"},{"lineNumber":173,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"EvitanRelta"},"content":"The implementation of the `add` command involves creating a new `Student` object and storing it in `AddressBook`.","lastModifiedDate":"2023-04-04"},{"lineNumber":175,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"EvitanRelta"},"content":"Given below is a class diagram on the `Student` class and the classes related to its attributes:","lastModifiedDate":"2023-04-04"},{"lineNumber":177,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"wendy0107"},"content":"![student_diagram](images/StudentClassDiagram.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"wendy0107"},"content":"The `Student` object is composed of attributes:","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"wendy0107"},"content":"* `Name`: The name of the student.","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"wendy0107"},"content":"* `Phone`: The phone number of the student.","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"wendy0107"},"content":"* `Email`: The email address of the student.","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"wendy0107"},"content":"* `Address`: The address of the student.","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"wendy0107"},"content":"* `Education`: The education level of the student.","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"wendy0107"},"content":"* `Telegram`: The telegram handle of the student.","lastModifiedDate":"2023-04-08"},{"lineNumber":188,"author":{"gitId":"wendy0107"},"content":"* `Module`: The modules the TA is teaching the student.","lastModifiedDate":"2023-04-08"},{"lineNumber":189,"author":{"gitId":"wendy0107"},"content":"* `Remark`: Remarks/notes the tutor has about the student.","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"wendy0107"},"content":"* `Tags`: Qualities a student has.","lastModifiedDate":"2023-03-26"},{"lineNumber":191,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"EvitanRelta"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-03-26"},{"lineNumber":193,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":194,"author":{"gitId":"wendy0107"},"content":"The `add` command has the following fields:","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":196,"author":{"gitId":"wendy0107"},"content":"\u003e NOTE : `[COMPULSORY]` indicates that the field is cannot be omitted when using `add`.","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"wendy0107"},"content":"\u003e Unless stated as`[COMPULSORY]`, the field is optional.","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":199,"author":{"gitId":"wendy0107"},"content":"* Prefix `n/` followed by the name of the student `[COMPULSORY]`.","lastModifiedDate":"2023-03-26"},{"lineNumber":200,"author":{"gitId":"wendy0107"},"content":"* Prefix `p/` followed by the phone number of the student.","lastModifiedDate":"2023-03-26"},{"lineNumber":201,"author":{"gitId":"wendy0107"},"content":"* Prefix `e/` followed by the student\u0027s email.","lastModifiedDate":"2023-03-26"},{"lineNumber":202,"author":{"gitId":"wendy0107"},"content":"* Prefix `a/` followed by the student\u0027s address.","lastModifiedDate":"2023-03-26"},{"lineNumber":203,"author":{"gitId":"wendy0107"},"content":"* Prefix `edu/` followed by the student\u0027s education level.","lastModifiedDate":"2023-03-26"},{"lineNumber":204,"author":{"gitId":"wendy0107"},"content":"* Prefix `tele/` followed by the student\u0027s telegram handle.","lastModifiedDate":"2023-04-08"},{"lineNumber":205,"author":{"gitId":"EvitanRelta"},"content":"* Prefix `m/` followed by the module name.","lastModifiedDate":"2023-03-31"},{"lineNumber":206,"author":{"gitId":"wendy0107"},"content":"* Prefix `r/` followed by the remarks/notes on the student.","lastModifiedDate":"2023-03-26"},{"lineNumber":207,"author":{"gitId":"wendy0107"},"content":"* Prefix `t/` followed by the tags a student has.","lastModifiedDate":"2023-03-26"},{"lineNumber":208,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"wendy0107"},"content":"Here is a sequence diagram showing the interactions between components when `add n/Alice edu/Year 1` is run.:","lastModifiedDate":"2023-04-08"},{"lineNumber":210,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"wendy0107"},"content":"![add_sequence](images/AddSequenceDiagram.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":213,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `AddCommandParser` and `AddCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-03-28"},{"lineNumber":214,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":215,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"EvitanRelta"},"content":"#### Feature details","lastModifiedDate":"2023-03-26"},{"lineNumber":217,"author":{"gitId":"wendy0107"},"content":"1. The app will validate the parameters supplied by the user with pre-determined formats for each attribute.","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"wendy0107"},"content":"2. If an input fails the validation check, an error message is provided which details the error and prompts the user for a corrected input.","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"wendy0107"},"content":"3. If the input passes the validation check, a new `Student` entry is created and stored in the `VersionedAddressBook`.","lastModifiedDate":"2023-04-08"},{"lineNumber":220,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"EvitanRelta"},"content":"#### General Design Considerations","lastModifiedDate":"2023-03-26"},{"lineNumber":222,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":223,"author":{"gitId":"EvitanRelta"},"content":"The implementation of the attributes of a `Student` is very similar to that of a `Person` in the original AB3 codebase. Hence, resulting in a similar implementation of the `add` feature. \u003c/br\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":224,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":225,"author":{"gitId":"EvitanRelta"},"content":"Some additions made were the `Education`, `Module` and `Remark` attributes. \u003c/br\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":226,"author":{"gitId":"wendy0107"},"content":"1. `Education` is implemented similar to the other attributes like `Address`, but is modified to fit the logic that a student can only have one education level.","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"wendy0107"},"content":"2. `Module` is implemented in a similar way to `Tags` in AB3 but has been modified to accommodate module names that are more than one word long as in real life.","lastModifiedDate":"2023-04-08"},{"lineNumber":228,"author":{"gitId":"wendy0107"},"content":"3. Every attribute except`Name` has been made **OPTIONAL** to accomodate circumstances where some student\u0027s details are unknown at the time of entry.","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"wendy0107"},"content":"    * We utilised the [java.util.Optional\u003cT\u003e](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Optional.html \"java.util.Optional\u003cT\u003e\") class to encapsulate the optional logic of the attributes.","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"wendy0107"},"content":"4. Every `add` will commit the previous version of the `VersionedAddressBook` to `versionStateHistory`.","lastModifiedDate":"2023-04-08"},{"lineNumber":231,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":232,"author":{"gitId":"wendy0107"},"content":"When adding a student entry, these were the alternatives considered.","lastModifiedDate":"2023-03-24"},{"lineNumber":233,"author":{"gitId":"wendy0107"},"content":"* **Alternative 1 (current choice):** Only `Name` has to be specified to create a `Student` entry, making the other attributes optional.","lastModifiedDate":"2023-03-28"},{"lineNumber":234,"author":{"gitId":"wendy0107"},"content":"    * Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":235,"author":{"gitId":"wendy0107"},"content":"        * Improves user convenience by allowing them to add a `Student` entry even with limited knowledge about their details.","lastModifiedDate":"2023-03-24"},{"lineNumber":236,"author":{"gitId":"wendy0107"},"content":"    * Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":237,"author":{"gitId":"wendy0107"},"content":"        * A lot of modification for empty/*null* inputs have to be accounted for when saving the data and testing.","lastModifiedDate":"2023-03-24"},{"lineNumber":238,"author":{"gitId":"wendy0107"},"content":"* **Alternative 2:** All parameters have to be filled in","lastModifiedDate":"2023-03-24"},{"lineNumber":239,"author":{"gitId":"wendy0107"},"content":"    * Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":240,"author":{"gitId":"wendy0107"},"content":"        * Easier to implement as there is lesser room for errors when dealing with empty/*null* inputs","lastModifiedDate":"2023-03-24"},{"lineNumber":241,"author":{"gitId":"wendy0107"},"content":"    * Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":242,"author":{"gitId":"wendy0107"},"content":"        * `add` becomes a lengthy command to execute as unnecessary additional time is needed to enter dummy values to meet the input requirements.","lastModifiedDate":"2023-03-24"},{"lineNumber":243,"author":{"gitId":"wendy0107"},"content":"        * Reduces user convenience as \"useful\" entries that can be made are limited to students whose details are all known.","lastModifiedDate":"2023-03-24"},{"lineNumber":244,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":245,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-27"},{"lineNumber":246,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":247,"author":{"gitId":"EvitanRelta"},"content":"### Delete feature","lastModifiedDate":"2023-03-26"},{"lineNumber":248,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":249,"author":{"gitId":"EvitanRelta"},"content":"#### Implementation Details","lastModifiedDate":"2023-03-26"},{"lineNumber":250,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":251,"author":{"gitId":"wendy0107"},"content":"The `delete` implementation is identical to the implementation in AB3\u0027s codebase.","lastModifiedDate":"2023-03-24"},{"lineNumber":252,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":253,"author":{"gitId":"EvitanRelta"},"content":"Here is a sequence diagram showing the interactions between components when `delete 1` is run.:","lastModifiedDate":"2023-04-04"},{"lineNumber":254,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":255,"author":{"gitId":"wendy0107"},"content":"![delete_sequence](images/DeleteSequenceDiagram2.png)","lastModifiedDate":"2023-03-26"},{"lineNumber":256,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":257,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":260,"author":{"gitId":"wendy0107"},"content":"### Proposed Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":261,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":262,"author":{"gitId":"EvitanRelta"},"content":"The proposed `delete` implementation supports deleting multiple `Student` entries at once. For example, `delete 1 3 5` will delete the `Student` entries at indexes 1, 3 and 5 in the  `AddressBook` (Assuming indexes 1, 3 and 5 are valid). However, if an invalid index is given `delete 1 2 100`, none of the `Student` entries will be deleted.","lastModifiedDate":"2023-04-04"},{"lineNumber":263,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":264,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":265,"author":{"gitId":"EvitanRelta"},"content":"#### Design Considerations","lastModifiedDate":"2023-03-26"},{"lineNumber":266,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":267,"author":{"gitId":"EvitanRelta"},"content":"Taking into consideration the fact that users may make a typo, the time cost of `undo` or re-adding the deleted valid `Student` entries, we believe that if a single invalid `INDEX` is given, the system should generate an error message.","lastModifiedDate":"2023-04-04"},{"lineNumber":268,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":269,"author":{"gitId":"EvitanRelta"},"content":"**Aspect: Handling invalid indexes in delete**","lastModifiedDate":"2023-04-04"},{"lineNumber":270,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":271,"author":{"gitId":"wendy0107"},"content":"* **Alternative 1: (Current choice)** Delete none of the given `Student` entries, even if they are valid.","lastModifiedDate":"2023-03-24"},{"lineNumber":272,"author":{"gitId":"wendy0107"},"content":"  * Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":273,"author":{"gitId":"wendy0107"},"content":"    * Potentially save the user time they may have had to spend re-adding their `Student` entries","lastModifiedDate":"2023-03-24"},{"lineNumber":274,"author":{"gitId":"wendy0107"},"content":"    * Allows user the opportunity to edit the command input without having to re-type the entire command again","lastModifiedDate":"2023-03-24"},{"lineNumber":275,"author":{"gitId":"wendy0107"},"content":"  * Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":276,"author":{"gitId":"wendy0107"},"content":"    * May be cumbersome for users to find the invalid index and correc it.","lastModifiedDate":"2023-03-24"},{"lineNumber":277,"author":{"gitId":"wendy0107"},"content":"* **Alternative 2:** Delete all valid `Student` entries out of the given indexes.","lastModifiedDate":"2023-03-24"},{"lineNumber":278,"author":{"gitId":"wendy0107"},"content":"  * Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":279,"author":{"gitId":"wendy0107"},"content":"    * Potentially save the user time editing their command if there was only a minor typo.","lastModifiedDate":"2023-03-24"},{"lineNumber":280,"author":{"gitId":"wendy0107"},"content":"  * Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":281,"author":{"gitId":"wendy0107"},"content":"    * Harder to implement as we have to keep track of the valid indexes to be deleted.","lastModifiedDate":"2023-03-24"},{"lineNumber":282,"author":{"gitId":"EvitanRelta"},"content":"    * May cost the user a lot of time if an unintended `Student` entry is deleted due to the typo and additional time is needed to re-enter the entry or `undo` the command.","lastModifiedDate":"2023-04-04"},{"lineNumber":283,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":284,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-27"},{"lineNumber":285,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":286,"author":{"gitId":"EvitanRelta"},"content":"### Edit Feature","lastModifiedDate":"2023-03-26"},{"lineNumber":287,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":288,"author":{"gitId":"EvitanRelta"},"content":"#### Implementation Details","lastModifiedDate":"2023-03-26"},{"lineNumber":289,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":290,"author":{"gitId":"wendy0107"},"content":"The implementation of `edit` involves creating a new `Student` object with updated details to replace the previous `Student` object.","lastModifiedDate":"2023-03-24"},{"lineNumber":291,"author":{"gitId":"wendy0107"},"content":"This is done with the help of the `EditPersonDescriptor` class, which helps create the new `Student` object.","lastModifiedDate":"2023-03-24"},{"lineNumber":292,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":293,"author":{"gitId":"wendy0107"},"content":"`edit` has similar fields to the [Add feature](#add-feature) and an additional `INDEX` parameter. \u003c/br\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":294,"author":{"gitId":"wendy0107"},"content":"\u003e NOTE : `[COMPULSORY]` indicates that the field is cannot be omitted when using `add`.","lastModifiedDate":"2023-03-24"},{"lineNumber":295,"author":{"gitId":"wendy0107"},"content":"\u003e Unless stated as`[COMPULSORY]`, the field is optional.","lastModifiedDate":"2023-03-24"},{"lineNumber":296,"author":{"gitId":"wendy0107"},"content":"* `INDEX` which represents the index number of the student to be edited in the list.","lastModifiedDate":"2023-03-24"},{"lineNumber":297,"author":{"gitId":"wendy0107"},"content":"* Prefix `n/` followed by the name of the student.","lastModifiedDate":"2023-03-26"},{"lineNumber":298,"author":{"gitId":"wendy0107"},"content":"* Prefix `p/` followed by the phone number of the student.","lastModifiedDate":"2023-03-26"},{"lineNumber":299,"author":{"gitId":"wendy0107"},"content":"* Prefix `e/` followed by the student\u0027s email.","lastModifiedDate":"2023-03-26"},{"lineNumber":300,"author":{"gitId":"wendy0107"},"content":"* Prefix `a/` followed by the student\u0027s address.","lastModifiedDate":"2023-03-26"},{"lineNumber":301,"author":{"gitId":"wendy0107"},"content":"* Prefix `edu/` followed by the student\u0027s education level.","lastModifiedDate":"2023-03-26"},{"lineNumber":302,"author":{"gitId":"EvitanRelta"},"content":"* Prefix `m/` followed by the module name.","lastModifiedDate":"2023-03-31"},{"lineNumber":303,"author":{"gitId":"wendy0107"},"content":"* Prefix `t/` followed by the tag name.","lastModifiedDate":"2023-03-26"},{"lineNumber":304,"author":{"gitId":"wendy0107"},"content":"* Prefix `r/` followed by the remarks/notes on the student.","lastModifiedDate":"2023-03-26"},{"lineNumber":305,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":306,"author":{"gitId":"EvitanRelta"},"content":"Here is a sequence diagram showing the interactions between components when `edit 1 n/Bob edu/Primary 5` is run.:","lastModifiedDate":"2023-04-04"},{"lineNumber":307,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":308,"author":{"gitId":"wendy0107"},"content":"![edit_sequence](images/EditSequenceDiagram.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":309,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":310,"author":{"gitId":"EvitanRelta"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `EditCommandParser`, `EditCommand`, and `EditPersonDescriptor` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-04-04"},{"lineNumber":311,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":312,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":313,"author":{"gitId":"EvitanRelta"},"content":"#### Feature details","lastModifiedDate":"2023-03-26"},{"lineNumber":314,"author":{"gitId":"wendy0107"},"content":"1. Similar to `add`, the app will validate the parameters supplied by the user with pre-determined formats for each attribute.","lastModifiedDate":"2023-03-24"},{"lineNumber":315,"author":{"gitId":"wendy0107"},"content":"2. If an input fails the validation check, an error message is provided which details the error and prompts the user for a corrected input.","lastModifiedDate":"2023-03-24"},{"lineNumber":316,"author":{"gitId":"wendy0107"},"content":"3. If the input passes the validation check, the corresponding `Student` is replaced by a new edited `Student` object and stored in the `AddressBook`.","lastModifiedDate":"2023-03-24"},{"lineNumber":317,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":318,"author":{"gitId":"EvitanRelta"},"content":"#### General Design Considerations","lastModifiedDate":"2023-03-26"},{"lineNumber":319,"author":{"gitId":"wendy0107"},"content":"Whether a new `Student` object should be created when editing a student entry.","lastModifiedDate":"2023-03-28"},{"lineNumber":320,"author":{"gitId":"wendy0107"},"content":"* **Alternative 1 (Current choice):** `edit` will create a new `Student` object with the help of `EditPersonDescriptor`","lastModifiedDate":"2023-03-24"},{"lineNumber":321,"author":{"gitId":"wendy0107"},"content":"    * Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":322,"author":{"gitId":"wendy0107"},"content":"        * Meets the expectations of the immutable `Student` class.","lastModifiedDate":"2023-03-24"},{"lineNumber":323,"author":{"gitId":"wendy0107"},"content":"    * Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":324,"author":{"gitId":"wendy0107"},"content":"        * Inefficient as an entire `Student` object is created even if only one field is changed. \u003c/br\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":325,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":326,"author":{"gitId":"wendy0107"},"content":"* **Alternative 2:** `edit` directly sets the updated values in the existing `Student` object.","lastModifiedDate":"2023-03-28"},{"lineNumber":327,"author":{"gitId":"wendy0107"},"content":"    * Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":328,"author":{"gitId":"wendy0107"},"content":"        * More timely option and space efficient.","lastModifiedDate":"2023-03-24"},{"lineNumber":329,"author":{"gitId":"wendy0107"},"content":"    * Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":330,"author":{"gitId":"wendy0107"},"content":"        * In order to execute this, `Student` cannot be immutable, this reduces the defensiveness of the program, making it more susceptible to errors.","lastModifiedDate":"2023-03-24"},{"lineNumber":331,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":332,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-27"},{"lineNumber":333,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":334,"author":{"gitId":"EvitanRelta"},"content":"### Find feature","lastModifiedDate":"2023-03-26"},{"lineNumber":335,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":336,"author":{"gitId":"EvitanRelta"},"content":"#### Implementation Details","lastModifiedDate":"2023-03-26"},{"lineNumber":337,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":338,"author":{"gitId":"EvitanRelta"},"content":"The proposed `find` feature is implemented using `MultiFieldContainsKeywordsPredicate`.","lastModifiedDate":"2023-04-04"},{"lineNumber":339,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":340,"author":{"gitId":"wendy0107"},"content":"Both of which implement the `Predicate\u003cPerson\u003e` interface where the `test` method checks whether the data in the relevant field of a `Student` contains the specified keyword.","lastModifiedDate":"2023-03-24"},{"lineNumber":341,"author":{"gitId":"Bentimate"},"content":"The reason for implementing this feature with `Predicate\u003cPerson\u003e` is that it can be easily used to filter the entire list of `Person` collected into java\u0027s `FilteredList`.","lastModifiedDate":"2023-03-24"},{"lineNumber":342,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":343,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":344,"author":{"gitId":"EvitanRelta"},"content":"Here is a sequence diagram showing the interactions between components when `find Alice` is run.:","lastModifiedDate":"2023-04-04"},{"lineNumber":345,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":346,"author":{"gitId":"wendy0107"},"content":"![find_sequence](images/FindSequenceDiagram.png)","lastModifiedDate":"2023-03-26"},{"lineNumber":347,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":348,"author":{"gitId":"EvitanRelta"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `FindCommandParser` and `FindCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-04-04"},{"lineNumber":349,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":350,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":351,"author":{"gitId":"wendy0107"},"content":"### Feature details","lastModifiedDate":"2023-03-24"},{"lineNumber":352,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":353,"author":{"gitId":"Bentimate"},"content":"Our implementation extends from the `find` implementation in AB3 by enchancing the current `find KEYWORD`feature to `find PARTIAL_KEYWORD`.","lastModifiedDate":"2023-03-24"},{"lineNumber":354,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":355,"author":{"gitId":"EvitanRelta"},"content":"\u003e Take a person\u0027s name to be `Michelle Yeoh`.  \\\\","lastModifiedDate":"2023-04-04"},{"lineNumber":356,"author":{"gitId":"EvitanRelta"},"content":"\u003e An example of finding by `PARTIAL_KEYWORD` is using \"Ye\" or \"miche\" while `KEYWORD` would be \"Michelle Yeoh\".","lastModifiedDate":"2023-04-04"},{"lineNumber":357,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":358,"author":{"gitId":"wendy0107"},"content":"Furthermore, users are also allowed to specify the field that they want to find in by using the default [prefixes](#Add-feature) given to them.","lastModifiedDate":"2023-03-26"},{"lineNumber":359,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":360,"author":{"gitId":"Bentimate"},"content":"\u003e The prefixes refer to those that the user input in the `Add` command, eg.","lastModifiedDate":"2023-03-24"},{"lineNumber":361,"author":{"gitId":"Bentimate"},"content":"\u003e ```","lastModifiedDate":"2023-03-24"},{"lineNumber":362,"author":{"gitId":"Bentimate"},"content":"\u003e add n/Bob p/98712345 edu/P5","lastModifiedDate":"2023-03-24"},{"lineNumber":363,"author":{"gitId":"Bentimate"},"content":"\u003e ```","lastModifiedDate":"2023-03-24"},{"lineNumber":364,"author":{"gitId":"Bentimate"},"content":"\u003e In the `find` command, users are then allowed to input their prefix of choice, eg.","lastModifiedDate":"2023-03-24"},{"lineNumber":365,"author":{"gitId":"Bentimate"},"content":"\u003e ```","lastModifiedDate":"2023-03-24"},{"lineNumber":366,"author":{"gitId":"Bentimate"},"content":"\u003e find n/ bo","lastModifiedDate":"2023-03-24"},{"lineNumber":367,"author":{"gitId":"Bentimate"},"content":"\u003e find p/ 9871","lastModifiedDate":"2023-03-24"},{"lineNumber":368,"author":{"gitId":"Bentimate"},"content":"\u003e find edu/ p5","lastModifiedDate":"2023-03-24"},{"lineNumber":369,"author":{"gitId":"Bentimate"},"content":"\u003e ```","lastModifiedDate":"2023-03-24"},{"lineNumber":370,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":371,"author":{"gitId":"Bentimate"},"content":"This allows the user to narrow down their `find` results even more.","lastModifiedDate":"2023-03-24"},{"lineNumber":372,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":373,"author":{"gitId":"EvitanRelta"},"content":"#### General Design Considerations","lastModifiedDate":"2023-03-26"},{"lineNumber":374,"author":{"gitId":"Bentimate"},"content":"The implementation of `find` is built on top of the original AB3 codebase\u0027s `find` command.","lastModifiedDate":"2023-03-24"},{"lineNumber":375,"author":{"gitId":"wendy0107"},"content":"We felt that the default `find` feature was too restrictive.","lastModifiedDate":"2023-03-26"},{"lineNumber":376,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":377,"author":{"gitId":"wendy0107"},"content":"Our implementation has some additions such as:","lastModifiedDate":"2023-03-24"},{"lineNumber":378,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":379,"author":{"gitId":"wendy0107"},"content":"1. Allowing `PARTIAL_KEYWORD` finds so that we can accommodate for the real-life scenarios where users are not certain of the full `KEYWORD` to input for `find`.","lastModifiedDate":"2023-03-24"},{"lineNumber":380,"author":{"gitId":"EvitanRelta"},"content":"2. `find PREFIX` across the various attributes of a `Student` other than their `Name` _(eg. find in `Education` or `Address` attributes)_","lastModifiedDate":"2023-04-04"},{"lineNumber":381,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":382,"author":{"gitId":"wendy0107"},"content":"**Aspect: Command format:**","lastModifiedDate":"2023-03-24"},{"lineNumber":383,"author":{"gitId":"wendy0107"},"content":"* **Alternative 1 (Current choice):** `find PREFIX KEYWORD/PARTIAL_KEYWORD`","lastModifiedDate":"2023-03-24"},{"lineNumber":384,"author":{"gitId":"wendy0107"},"content":"  * Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":385,"author":{"gitId":"wendy0107"},"content":"    * Improves user convenience by giving them flexibility in the completeness of their desired find keyword.","lastModifiedDate":"2023-03-24"},{"lineNumber":386,"author":{"gitId":"wendy0107"},"content":"    * Extensible across other attributes.","lastModifiedDate":"2023-03-24"},{"lineNumber":387,"author":{"gitId":"Bentimate"},"content":"    * Narrows down the list to be very succinct and specific to the desired keyword.","lastModifiedDate":"2023-03-24"},{"lineNumber":388,"author":{"gitId":"wendy0107"},"content":"  * Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":389,"author":{"gitId":"wendy0107"},"content":"    * Adds complexity to the implementation as this implementation introduces a lot of potential errors in parsing the user\u0027s input.","lastModifiedDate":"2023-03-24"},{"lineNumber":390,"author":{"gitId":"wendy0107"},"content":"    * Might be slightly challenging for new users to enter the `PREFIX`.","lastModifiedDate":"2023-03-24"},{"lineNumber":391,"author":{"gitId":"wendy0107"},"content":"* **Alternative 2:** `find KEYWORD/PARTIAL_KEYWORD`","lastModifiedDate":"2023-03-24"},{"lineNumber":392,"author":{"gitId":"wendy0107"},"content":"  * Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":393,"author":{"gitId":"wendy0107"},"content":"    * Easier to implement as there is lesser validating done by the app.","lastModifiedDate":"2023-03-24"},{"lineNumber":394,"author":{"gitId":"wendy0107"},"content":"    * Provides the user flexibility in searching across all attributes by default.","lastModifiedDate":"2023-03-24"},{"lineNumber":395,"author":{"gitId":"Bentimate"},"content":"    * Less syntax to input and learn by the users.","lastModifiedDate":"2023-03-24"},{"lineNumber":396,"author":{"gitId":"wendy0107"},"content":"  * Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":397,"author":{"gitId":"wendy0107"},"content":"    * The filtered list may not be what was desired as short partial keywords like `a` is unlikely to result in a succinct list.","lastModifiedDate":"2023-03-24"},{"lineNumber":398,"author":{"gitId":"wendy0107"},"content":"    * Users will not be able to search keywords for a particular attribute.","lastModifiedDate":"2023-03-24"},{"lineNumber":399,"author":{"gitId":"Bentimate"},"content":"    * The resulting filtered list will span across multiple different fields, where all attributes in all fields containing the specified keyword will be displayed.","lastModifiedDate":"2023-03-24"},{"lineNumber":400,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":401,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-27"},{"lineNumber":402,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":403,"author":{"gitId":"EvitanRelta"},"content":"### List feature","lastModifiedDate":"2023-03-26"},{"lineNumber":404,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":405,"author":{"gitId":"EvitanRelta"},"content":"#### Implementation Details","lastModifiedDate":"2023-03-26"},{"lineNumber":406,"author":{"gitId":"wendy0107"},"content":"The `list` implementation is identical to the implementation in AB3\u0027s codebase.","lastModifiedDate":"2023-03-24"},{"lineNumber":407,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":408,"author":{"gitId":"EvitanRelta"},"content":"Here is a sequence diagram showing the interactions between components when `list` is run.:","lastModifiedDate":"2023-04-04"},{"lineNumber":409,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":410,"author":{"gitId":"wendy0107"},"content":"![list_sequence](images/ListSequenceDiagram.png)","lastModifiedDate":"2023-03-26"},{"lineNumber":411,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":412,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `ListCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-03-28"},{"lineNumber":413,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":414,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":415,"author":{"gitId":"EvitanRelta"},"content":"#### Design Consideration","lastModifiedDate":"2023-03-26"},{"lineNumber":416,"author":{"gitId":"wendy0107"},"content":"The `list` command does not accept any arguments in order to make it as convenient for users to view their full list of students after a prior command such as `find` which displays","lastModifiedDate":"2023-03-26"},{"lineNumber":417,"author":{"gitId":"wendy0107"},"content":"a filtered list.","lastModifiedDate":"2023-03-26"},{"lineNumber":418,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":419,"author":{"gitId":"EvitanRelta"},"content":"### Remark feature","lastModifiedDate":"2023-03-26"},{"lineNumber":420,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":421,"author":{"gitId":"EvitanRelta"},"content":"##### Feature Implementation Details","lastModifiedDate":"2023-03-26"},{"lineNumber":422,"author":{"gitId":"wendy0107"},"content":"The current implementation provides users with two different methods of entering a remark for a student.","lastModifiedDate":"2023-03-24"},{"lineNumber":423,"author":{"gitId":"wendy0107"},"content":"1. `remark INDEX r/REMARK` where `INDEX` is the `Student` entry in the list, and `REMARK` is the remark to be added.","lastModifiedDate":"2023-03-24"},{"lineNumber":424,"author":{"gitId":"wendy0107"},"content":"2. Adding the remark through the [add feature](#Add-feature)","lastModifiedDate":"2023-03-24"},{"lineNumber":425,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":426,"author":{"gitId":"EvitanRelta"},"content":"##### Proposed Implementation","lastModifiedDate":"2023-03-26"},{"lineNumber":427,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":428,"author":{"gitId":"EvitanRelta"},"content":"The proposed remark mechanism will be facilitated by a pop-up text box. This will allow users to format their remarks however they like, rather than being restricted to a single line in the command line (current implementation).","lastModifiedDate":"2023-04-04"},{"lineNumber":429,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":430,"author":{"gitId":"EvitanRelta"},"content":"#### General Design Considerations","lastModifiedDate":"2023-03-26"},{"lineNumber":431,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":432,"author":{"gitId":"EvitanRelta"},"content":"In order to make this feature as versatile as possible, the `remark` feature should consider formatted inputs (eg. new lines to separate paragraphs).","lastModifiedDate":"2023-04-04"},{"lineNumber":433,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":434,"author":{"gitId":"wendy0107"},"content":"Additionally, the command line only provides a restricted view and input option for users, hence it does not support formatted remarks.","lastModifiedDate":"2023-03-24"},{"lineNumber":435,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":436,"author":{"gitId":"wendy0107"},"content":"**Aspect: Command input format**","lastModifiedDate":"2023-03-24"},{"lineNumber":437,"author":{"gitId":"wendy0107"},"content":"* **Alternative 1: (Current implementation)** Adding the `remark` through the command line.","lastModifiedDate":"2023-03-24"},{"lineNumber":438,"author":{"gitId":"wendy0107"},"content":"  * Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":439,"author":{"gitId":"wendy0107"},"content":"    * Easier to implement","lastModifiedDate":"2023-03-24"},{"lineNumber":440,"author":{"gitId":"wendy0107"},"content":"  * Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":441,"author":{"gitId":"wendy0107"},"content":"    * Restricts users to a single line or continuous paragraph of remark.","lastModifiedDate":"2023-03-24"},{"lineNumber":442,"author":{"gitId":"wendy0107"},"content":"    * Limits formatting options for remark.","lastModifiedDate":"2023-03-24"},{"lineNumber":443,"author":{"gitId":"wendy0107"},"content":"* **Alternative 2: (Future implementation)** Adding remark through a pop-up text window","lastModifiedDate":"2023-03-24"},{"lineNumber":444,"author":{"gitId":"wendy0107"},"content":"  * Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":445,"author":{"gitId":"wendy0107"},"content":"    * Provides users flexibility in the format of their remarks.","lastModifiedDate":"2023-03-24"},{"lineNumber":446,"author":{"gitId":"wendy0107"},"content":"    * Remarks are not restricted to a single line or continuous paragraph.","lastModifiedDate":"2023-03-24"},{"lineNumber":447,"author":{"gitId":"wendy0107"},"content":"  * Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":448,"author":{"gitId":"wendy0107"},"content":"    * More complicated to implement as the format of the remarks have to be saved and loaded into `AddressBook` without any formatting erros.","lastModifiedDate":"2023-03-24"},{"lineNumber":449,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":450,"author":{"gitId":"wendy0107"},"content":"**Aspect: Remark display**","lastModifiedDate":"2023-03-24"},{"lineNumber":451,"author":{"gitId":"wendy0107"},"content":"* **Alternative 1: (Current choice)** Preview the first line of a student\u0027s remarks under all the other attributes","lastModifiedDate":"2023-03-24"},{"lineNumber":452,"author":{"gitId":"wendy0107"},"content":"  * Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":453,"author":{"gitId":"wendy0107"},"content":"    * Short remarks are instantly visible to users.","lastModifiedDate":"2023-03-24"},{"lineNumber":454,"author":{"gitId":"wendy0107"},"content":"    * Easy to implement.","lastModifiedDate":"2023-03-24"},{"lineNumber":455,"author":{"gitId":"wendy0107"},"content":"  * Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":456,"author":{"gitId":"wendy0107"},"content":"    * Remarks are limited to a single line as long as the width of the window.","lastModifiedDate":"2023-03-24"},{"lineNumber":457,"author":{"gitId":"wendy0107"},"content":"    * Formatting of remarks are not visible.","lastModifiedDate":"2023-03-24"},{"lineNumber":458,"author":{"gitId":"wendy0107"},"content":"* **Alternative 2: (Future implementation)** If a remark is present, simply display an indicator in `PersonCard`","lastModifiedDate":"2023-03-24"},{"lineNumber":459,"author":{"gitId":"wendy0107"},"content":"  * Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":460,"author":{"gitId":"wendy0107"},"content":"    * Easy to implement.","lastModifiedDate":"2023-03-24"},{"lineNumber":461,"author":{"gitId":"wendy0107"},"content":"    * Viewing the remark in `ResultDisplay` is supported by the [show](#show-feature) command.","lastModifiedDate":"2023-03-24"},{"lineNumber":462,"author":{"gitId":"wendy0107"},"content":"    * Supports formatting of `remark` since it is not restricted to the `PersonCard` view.","lastModifiedDate":"2023-03-24"},{"lineNumber":463,"author":{"gitId":"wendy0107"},"content":"  * Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":464,"author":{"gitId":"wendy0107"},"content":"    * An extra step for users may be inconvenient","lastModifiedDate":"2023-03-24"},{"lineNumber":465,"author":{"gitId":"wendy0107"},"content":"* **Alternative 3:** Show the full remark in `PersonCard` beside all the other attributes","lastModifiedDate":"2023-03-24"},{"lineNumber":466,"author":{"gitId":"wendy0107"},"content":"  * Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":467,"author":{"gitId":"wendy0107"},"content":"    * Remark is directly visible from the list.","lastModifiedDate":"2023-03-24"},{"lineNumber":468,"author":{"gitId":"wendy0107"},"content":"    * Supports formatting in `remark`.","lastModifiedDate":"2023-03-24"},{"lineNumber":469,"author":{"gitId":"wendy0107"},"content":"  * Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":470,"author":{"gitId":"wendy0107"},"content":"    * Remarks are limited to the view of `PersonCard` and size of the window.","lastModifiedDate":"2023-03-24"},{"lineNumber":471,"author":{"gitId":"wendy0107"},"content":"    * Remarks that are too long will be cut off and not visible.","lastModifiedDate":"2023-03-24"},{"lineNumber":472,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":473,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-27"},{"lineNumber":474,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":475,"author":{"gitId":"EvitanRelta"},"content":"### \\[Proposed\\] Sort feature","lastModifiedDate":"2023-03-29"},{"lineNumber":476,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":477,"author":{"gitId":"wendy0107"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-03-28"},{"lineNumber":478,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":479,"author":{"gitId":"EvitanRelta"},"content":"The proposed `sort` implementation will sort the `UniquePersonList` object, hence it will make use of:","lastModifiedDate":"2023-04-04"},{"lineNumber":480,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":481,"author":{"gitId":"wendy0107"},"content":"* `sort` in [javafx.collections.FXCollections](https://docs.oracle.com/javase/8/javafx/api/javafx/collections/FXCollections.html) for the main sorting functionality.","lastModifiedDate":"2023-03-28"},{"lineNumber":482,"author":{"gitId":"wendy0107"},"content":"  * In order to sort by `Name`, the comparator will be as follows `Comparator\u003cName\u003e`.","lastModifiedDate":"2023-03-28"},{"lineNumber":483,"author":{"gitId":"EvitanRelta"},"content":"* `comparing` in [java.util.Comparator](https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html) class to execute `sort` in ascending and descending orders.","lastModifiedDate":"2023-04-04"},{"lineNumber":484,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":485,"author":{"gitId":"wendy0107"},"content":"An example usage would be `sort ASC` to sort the list in ascending order, and `sort DESC` to sort the list in descending order.","lastModifiedDate":"2023-03-28"},{"lineNumber":486,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":487,"author":{"gitId":"EvitanRelta"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":488,"author":{"gitId":"EvitanRelta"},"content":":information_source: **Note:** `ASC` and `DESC` will not be case-sensitive, in other words, `sort ASC` and `sort asc` are both acceptable commands.","lastModifiedDate":"2023-04-04"},{"lineNumber":489,"author":{"gitId":"EvitanRelta"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":490,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":491,"author":{"gitId":"wendy0107"},"content":"**Exepected execution:**","lastModifiedDate":"2023-03-28"},{"lineNumber":492,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":493,"author":{"gitId":"wendy0107"},"content":"1. Upon entering the command `sort ASC` in the command line of the application, the list of students will be sorted in alphabetically ascending order of their `Name`.","lastModifiedDate":"2023-03-28"},{"lineNumber":494,"author":{"gitId":"wendy0107"},"content":"2. Upon entering the command `sort DESC` in the command line of the application , the list of students will be sorted in alphabetically descending order of their `Name`.","lastModifiedDate":"2023-03-28"},{"lineNumber":495,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":496,"author":{"gitId":"wendy0107"},"content":"#### Design Considerations:","lastModifiedDate":"2023-03-28"},{"lineNumber":497,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":498,"author":{"gitId":"wendy0107"},"content":"**Aspect: Command format:**","lastModifiedDate":"2023-03-28"},{"lineNumber":499,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":500,"author":{"gitId":"wendy0107"},"content":"* **Alternative 1:** `sort`","lastModifiedDate":"2023-03-28"},{"lineNumber":501,"author":{"gitId":"wendy0107"},"content":"  * Pros:","lastModifiedDate":"2023-03-28"},{"lineNumber":502,"author":{"gitId":"wendy0107"},"content":"    * Simpler command for users to execute","lastModifiedDate":"2023-03-28"},{"lineNumber":503,"author":{"gitId":"wendy0107"},"content":"  * Cons:","lastModifiedDate":"2023-03-28"},{"lineNumber":504,"author":{"gitId":"wendy0107"},"content":"    * Less flexible as users cannot decide which attribute to sort by.","lastModifiedDate":"2023-03-28"},{"lineNumber":505,"author":{"gitId":"EvitanRelta"},"content":"    * Reduces extensibility of the feature (eg. sort by module tag is more complicated if `sort` doesn\u0027t accept inputs)","lastModifiedDate":"2023-03-31"},{"lineNumber":506,"author":{"gitId":"wendy0107"},"content":"    * Users cannot choose which order to sort in as it will be defaulted to sorting in ascending order.","lastModifiedDate":"2023-03-28"},{"lineNumber":507,"author":{"gitId":"wendy0107"},"content":"* **Alternative 2 (Current choice):** `sort ORDER`","lastModifiedDate":"2023-03-28"},{"lineNumber":508,"author":{"gitId":"wendy0107"},"content":"  * Pros:","lastModifiedDate":"2023-03-28"},{"lineNumber":509,"author":{"gitId":"wendy0107"},"content":"    * Provides extensibility of sort (eg. future implementation of `sort edu ORDER` to sort by education level)","lastModifiedDate":"2023-03-28"},{"lineNumber":510,"author":{"gitId":"wendy0107"},"content":"    * Allows users to choose the order they would like to sort the list by","lastModifiedDate":"2023-03-28"},{"lineNumber":511,"author":{"gitId":"wendy0107"},"content":"    * Gives flexibility and convenience to users.","lastModifiedDate":"2023-03-28"},{"lineNumber":512,"author":{"gitId":"wendy0107"},"content":"  * Cons:","lastModifiedDate":"2023-03-28"},{"lineNumber":513,"author":{"gitId":"wendy0107"},"content":"    * Adds complexity to the implementation as more error checking of the inputs is required.","lastModifiedDate":"2023-03-28"},{"lineNumber":514,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":515,"author":{"gitId":"wendy0107"},"content":"_{more aspects to be added}_","lastModifiedDate":"2023-03-28"},{"lineNumber":516,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":517,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":518,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":519,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":520,"author":{"gitId":"EvitanRelta"},"content":"### Show feature","lastModifiedDate":"2023-03-29"},{"lineNumber":521,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":522,"author":{"gitId":"EvitanRelta"},"content":"#### Implementation Details","lastModifiedDate":"2023-03-26"},{"lineNumber":523,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":524,"author":{"gitId":"EvitanRelta"},"content":"The implementation of `show` is similar to the `list` command in the AB3 codebase. The `show` feature was implemented to support the `remark` feature.","lastModifiedDate":"2023-04-04"},{"lineNumber":525,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":526,"author":{"gitId":"EvitanRelta"},"content":"Remarks longer than the width of `PersonListCard` in `PersonListPanel` will not be visible. Hence, `show` allows users to view the full remark in the `ResultDisplay` since scrolling is supported.","lastModifiedDate":"2023-04-04"},{"lineNumber":527,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":528,"author":{"gitId":"EvitanRelta"},"content":"#### General Design Considerations","lastModifiedDate":"2023-03-26"},{"lineNumber":529,"author":{"gitId":"wendy0107"},"content":"**Aspect: Display output**","lastModifiedDate":"2023-03-24"},{"lineNumber":530,"author":{"gitId":"wendy0107"},"content":"* **Alternative 1: (Future implementation)** Display the entire `PersonCard` of the student chosen in `PersonListPanel`.","lastModifiedDate":"2023-03-24"},{"lineNumber":531,"author":{"gitId":"wendy0107"},"content":"  * Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":532,"author":{"gitId":"wendy0107"},"content":"    * Allows users to view the student details and remarks all at once.","lastModifiedDate":"2023-03-24"},{"lineNumber":533,"author":{"gitId":"wendy0107"},"content":"    * Supports the `remark` feature as intended","lastModifiedDate":"2023-03-24"},{"lineNumber":534,"author":{"gitId":"wendy0107"},"content":"  * Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":535,"author":{"gitId":"wendy0107"},"content":"    * May reduce user convenience as `show INDEX` will likely always be followed with the `list` command to toggle back to the full list of students.","lastModifiedDate":"2023-03-24"},{"lineNumber":536,"author":{"gitId":"wendy0107"},"content":"    * Harder to implement as the size of the `PersonCard` for the `Student` has to be updated everytime `show` is executed.","lastModifiedDate":"2023-03-24"},{"lineNumber":537,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":538,"author":{"gitId":"wendy0107"},"content":"* **Alternative 2: (Current choice)** Display the entire `PersonCard` of the student chosen in the `ResultDisplay`","lastModifiedDate":"2023-03-24"},{"lineNumber":539,"author":{"gitId":"wendy0107"},"content":"  * Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":540,"author":{"gitId":"wendy0107"},"content":"    * Supports the `remark` feature as intended since scrolling is possible.","lastModifiedDate":"2023-03-24"},{"lineNumber":541,"author":{"gitId":"wendy0107"},"content":"    * Allows users to view the student details and remarks all at once.","lastModifiedDate":"2023-03-24"},{"lineNumber":542,"author":{"gitId":"wendy0107"},"content":"  * Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":543,"author":{"gitId":"wendy0107"},"content":"    * Harder to implement","lastModifiedDate":"2023-03-24"},{"lineNumber":544,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":545,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-27"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2023-03-29"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-03-29"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"wendy0107"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentVersionPointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-04-02"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"wendy0107"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentVersionPointer` pointing to that single address book state.","lastModifiedDate":"2023-04-02"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"wendy0107"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentVersionPointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-04-02"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"wendy0107"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentVersionPointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-04-02"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentVersionPointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-04-02"},{"lineNumber":582,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"wendy0107"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentVersionPointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2023-04-02"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentVersionPointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-04-02"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"wendy0107"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentVersionPointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentVersionPointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-04-02"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-29"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-27"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":634,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":635,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":636,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":637,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"wendy0107"},"content":"* Teaching Assistants (TAs)/tutors who have a class of students to manage and are preferably are proficient typers.","lastModifiedDate":"2023-03-24"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"alextang809"},"content":"**Value proposition**:","lastModifiedDate":"2023-03-03"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"wendy0107"},"content":"* TeachMeSenpai acts as an optimised app for tutors to manage their students\u0027 data, obtain insights on their students\u0027 data.","lastModifiedDate":"2023-03-24"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"EvitanRelta"},"content":"**Priorities:**","lastModifiedDate":"2023-03-29"},{"lineNumber":656,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":657,"author":{"gitId":"EvitanRelta"},"content":"- **`HIGH`** _(must have)_","lastModifiedDate":"2023-03-29"},{"lineNumber":658,"author":{"gitId":"EvitanRelta"},"content":"- `MED` _(nice to have)_","lastModifiedDate":"2023-03-29"},{"lineNumber":659,"author":{"gitId":"EvitanRelta"},"content":"- _`Low`_ _(unlikely to have)_","lastModifiedDate":"2023-03-29"},{"lineNumber":660,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":661,"author":{"gitId":"-"},"content":"|  Priority  | As a …​ | I want to …​                                                                                                   | So that I can…​                                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"wendy0107"},"content":"|:----------:|---------|----------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------|","lastModifiedDate":"2023-04-08"},{"lineNumber":663,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | open the app                                                                                                   | begin using the app                                                         |","lastModifiedDate":"2023-03-29"},{"lineNumber":664,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | close the app                                                                                                  | leave the app                                                               |","lastModifiedDate":"2023-03-29"},{"lineNumber":665,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | add a student\u0027s name                                                                                           | track a student\u0027s progress by their name                                    |","lastModifiedDate":"2023-03-29"},{"lineNumber":666,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | include student\u0027s education level when adding the student (eg. P6)                                             | keep track of a student\u0027s education level                                   |","lastModifiedDate":"2023-03-29"},{"lineNumber":667,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | include student\u0027s phone number when adding the student (eg. 94206942)                                          | keep track of a student\u0027s phone number                                      |","lastModifiedDate":"2023-03-29"},{"lineNumber":668,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | include student\u0027s email when adding the student (eg. iloveanimegirls@gmail.com)                                | keep track of a student\u0027s email                                             |","lastModifiedDate":"2023-03-29"},{"lineNumber":669,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | include student\u0027s address when adding the student (eg. Block 69 S642069)                                       | keep track of a student\u0027s address and go to the place easily                |","lastModifiedDate":"2023-03-29"},{"lineNumber":670,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | include the modules I\u0027m teaching a student to their entry (eg. CS2101, CS4243)                                 | keep track of what modules I\u0027m teaching the student                         |","lastModifiedDate":"2023-03-31"},{"lineNumber":671,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | include optional student-specific notes when adding the student (eg. Good in Japanese)                         | store information for a particular student such as notes and remarks        |","lastModifiedDate":"2023-03-29"},{"lineNumber":672,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | include tags on a student about their noteworthy qualities (eg. active)                                        | keep track of a student\u0027s qualities.                                        |","lastModifiedDate":"2023-03-29"},{"lineNumber":673,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | delete a student entry from my list (by index)                                                                 | remove all details related to a certain student                             |","lastModifiedDate":"2023-03-29"},{"lineNumber":674,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | have my changes saved automatically                                                                            | be sure that I won\u0027t lose my changes if I crash/close the app               |","lastModifiedDate":"2023-03-29"},{"lineNumber":675,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | view my list of students                                                                                       | keep track of who I\u0027m currently teaching                                    |","lastModifiedDate":"2023-03-29"},{"lineNumber":676,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | View the address of a student                                                                                  | know where to go if I need to provide tuition at their house                |","lastModifiedDate":"2023-03-29"},{"lineNumber":677,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | have my data persist between use sessions                                                                      | continue my session where I left off                                        |","lastModifiedDate":"2023-03-29"},{"lineNumber":678,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | find my students by searching their names                                                                      | quickly view that student\u0027s details                                         |","lastModifiedDate":"2023-03-29"},{"lineNumber":679,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | edit a student\u0027s name                                                                                          | correct a student\u0027s name                                                    |","lastModifiedDate":"2023-03-29"},{"lineNumber":680,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | edit the modules I\u0027m teaching a particular student                                                             | update or correct a student\u0027s records                                       |","lastModifiedDate":"2023-03-31"},{"lineNumber":681,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | edit a student\u0027s education level                                                                               | update or correct a student\u0027s records                                       |","lastModifiedDate":"2023-03-29"},{"lineNumber":682,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | receieve an appropriate and user-friendly error message when I enter the wrong inputs/parameters for a command | find out the correct input/parameter format and use the feature as intended |","lastModifiedDate":"2023-03-29"},{"lineNumber":683,"author":{"gitId":"EvitanRelta"},"content":"| **`HIGH`** | tutor   | be able to ask for help                                                                                        | learn how to use the app                                                    |","lastModifiedDate":"2023-03-29"},{"lineNumber":684,"author":{"gitId":"EvitanRelta"},"content":"|   `MED`    | tutor   | filter my students by education level (eg. all P6 students)                                                    | view my students of the same education level                                |","lastModifiedDate":"2023-03-29"},{"lineNumber":685,"author":{"gitId":"EvitanRelta"},"content":"|   `MED`    | tutor   | filter my students by modules                                                                                  | view all the student\u0027s I\u0027m teaching a particular module to                  |","lastModifiedDate":"2023-03-31"},{"lineNumber":686,"author":{"gitId":"EvitanRelta"},"content":"|   `MED`    | tutor   | filter my students by address (eg. Ang Mo Kio)                                                                 | view all the students who live in a particular area                         |","lastModifiedDate":"2023-03-29"},{"lineNumber":687,"author":{"gitId":"EvitanRelta"},"content":"|   `MED`    | tutor   | filter my students by email (eg. @gmail)                                                                       | view all the students with similar emails                                   |","lastModifiedDate":"2023-03-29"},{"lineNumber":688,"author":{"gitId":"EvitanRelta"},"content":"|   `MED`    | tutor   | filter my students by tags (eg. active)                                                                        | view all my students with the same qualities                                |","lastModifiedDate":"2023-03-29"},{"lineNumber":689,"author":{"gitId":"EvitanRelta"},"content":"|   `MED`    | tutor   | sort my students by their names                                                                                | view my students in a systematic manner                                     |","lastModifiedDate":"2023-03-29"},{"lineNumber":690,"author":{"gitId":"EvitanRelta"},"content":"|   `MED`    | tutor   | sort my students by their education level                                                                      | view my students according to their education level                         |","lastModifiedDate":"2023-03-29"},{"lineNumber":691,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":692,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-27"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"wendy0107"},"content":"For all use cases below, the **System** is the `TeachMeSenpai` app and the **Actor** is the `user`, unless specified otherwise.","lastModifiedDate":"2023-03-24"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":698,"author":{"gitId":"EvitanRelta"},"content":"#### Use case UC1: Add a student","lastModifiedDate":"2023-03-29"},{"lineNumber":699,"author":{"gitId":"EvitanRelta"},"content":"{:.no_toc}","lastModifiedDate":"2023-03-29"},{"lineNumber":700,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":701,"author":{"gitId":"wendy0107"},"content":"**MSS**","lastModifiedDate":"2023-03-24"},{"lineNumber":702,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":703,"author":{"gitId":"wendy0107"},"content":"1.  User request to add a new student\u0027s name and particulars.","lastModifiedDate":"2023-03-24"},{"lineNumber":704,"author":{"gitId":"wendy0107"},"content":"2.  System adds new student and their particulars as a new entry in the list","lastModifiedDate":"2023-03-24"},{"lineNumber":705,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":706,"author":{"gitId":"wendy0107"},"content":"    Use case ends","lastModifiedDate":"2023-03-24"},{"lineNumber":707,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":708,"author":{"gitId":"wendy0107"},"content":"**Extensions**","lastModifiedDate":"2023-03-24"},{"lineNumber":709,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":710,"author":{"gitId":"wendy0107"},"content":"* 1a. The given name/particulars is invalid","lastModifiedDate":"2023-03-24"},{"lineNumber":711,"author":{"gitId":"wendy0107"},"content":"    * 1a1. System shows an error message","lastModifiedDate":"2023-03-24"},{"lineNumber":712,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":713,"author":{"gitId":"wendy0107"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-24"},{"lineNumber":714,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":715,"author":{"gitId":"wendy0107"},"content":"* 1b. The compulsory name field is missing","lastModifiedDate":"2023-03-24"},{"lineNumber":716,"author":{"gitId":"wendy0107"},"content":"    * 1a1. System shows an error message","lastModifiedDate":"2023-03-24"},{"lineNumber":717,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":718,"author":{"gitId":"wendy0107"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-24"},{"lineNumber":719,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":720,"author":{"gitId":"wendy0107"},"content":"* 1c. A student entry with the same name exists in the list","lastModifiedDate":"2023-03-24"},{"lineNumber":721,"author":{"gitId":"wendy0107"},"content":"    * 1c1. System shows an error message","lastModifiedDate":"2023-03-24"},{"lineNumber":722,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":723,"author":{"gitId":"wendy0107"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-24"},{"lineNumber":724,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":725,"author":{"gitId":"wendy0107"},"content":"* 1d. Some optional particulars are missing","lastModifiedDate":"2023-03-24"},{"lineNumber":726,"author":{"gitId":"wendy0107"},"content":"    * 1d1. System adds new student, leaving their particulars blank","lastModifiedDate":"2023-03-24"},{"lineNumber":727,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":728,"author":{"gitId":"wendy0107"},"content":"      Use case ends","lastModifiedDate":"2023-03-24"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":731,"author":{"gitId":"EvitanRelta"},"content":"#### Use case UC2: Find a student","lastModifiedDate":"2023-03-29"},{"lineNumber":732,"author":{"gitId":"EvitanRelta"},"content":"{:.no_toc}","lastModifiedDate":"2023-03-29"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"Bentimate"},"content":"1. User requests to find a specific set of students based on a set of criteria","lastModifiedDate":"2023-03-29"},{"lineNumber":737,"author":{"gitId":"Bentimate"},"content":"2. System shows a list of students that match the criteria","lastModifiedDate":"2023-03-29"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"Bentimate"},"content":"   Use case ends","lastModifiedDate":"2023-03-29"},{"lineNumber":740,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":741,"author":{"gitId":"Bentimate"},"content":"**Extensions**","lastModifiedDate":"2023-03-29"},{"lineNumber":742,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":743,"author":{"gitId":"Bentimate"},"content":"* 1a. The field to search in specified by the user is empty","lastModifiedDate":"2023-03-29"},{"lineNumber":744,"author":{"gitId":"Bentimate"},"content":"  * 1a1. System shows an error message","lastModifiedDate":"2023-03-29"},{"lineNumber":745,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":746,"author":{"gitId":"Bentimate"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-03-29"},{"lineNumber":747,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":748,"author":{"gitId":"Bentimate"},"content":"* 1b. The field to search in is not specified by the user","lastModifiedDate":"2023-03-29"},{"lineNumber":749,"author":{"gitId":"Bentimate"},"content":"  * 1b1. System defaults to searching the keyword in the name field","lastModifiedDate":"2023-03-29"},{"lineNumber":750,"author":{"gitId":"Bentimate"},"content":"  * 1b2. System shows a list of students whose names match the keyword","lastModifiedDate":"2023-03-29"},{"lineNumber":751,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":752,"author":{"gitId":"Bentimate"},"content":"    Use case ends","lastModifiedDate":"2023-03-29"},{"lineNumber":753,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":754,"author":{"gitId":"Bentimate"},"content":"* 1c. The field and keyword are not specified by the user","lastModifiedDate":"2023-03-29"},{"lineNumber":755,"author":{"gitId":"Bentimate"},"content":"  * 1c1. System shows an error message","lastModifiedDate":"2023-03-29"},{"lineNumber":756,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":757,"author":{"gitId":"Bentimate"},"content":"    Use case resumes from step 1","lastModifiedDate":"2023-03-29"},{"lineNumber":758,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":759,"author":{"gitId":"EvitanRelta"},"content":"#### Use case UC3: Delete a student","lastModifiedDate":"2023-03-29"},{"lineNumber":760,"author":{"gitId":"EvitanRelta"},"content":"{:.no_toc}","lastModifiedDate":"2023-03-29"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":764,"author":{"gitId":"EvitanRelta"},"content":"1.  User requests to list students","lastModifiedDate":"2023-03-06"},{"lineNumber":765,"author":{"gitId":"EvitanRelta"},"content":"2.  System shows a list of students","lastModifiedDate":"2023-03-06"},{"lineNumber":766,"author":{"gitId":"EvitanRelta"},"content":"3.  User requests to delete a specific student in the list by their index from the list","lastModifiedDate":"2023-03-06"},{"lineNumber":767,"author":{"gitId":"EvitanRelta"},"content":"4.  System deletes the student","lastModifiedDate":"2023-03-06"},{"lineNumber":768,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":769,"author":{"gitId":"EvitanRelta"},"content":"    Use case ends","lastModifiedDate":"2023-03-06"},{"lineNumber":770,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"EvitanRelta"},"content":"* 1a. User requests to find a specific set of students based on a set of criteria","lastModifiedDate":"2023-03-29"},{"lineNumber":774,"author":{"gitId":"Bentimate"},"content":"  * 1a1. System shows a list of students which matches the criteria input by the user","lastModifiedDate":"2023-03-29"},{"lineNumber":775,"author":{"gitId":"Bentimate"},"content":"  * 1a2. User requests to delete a specific student in the list by their index from the list","lastModifiedDate":"2023-03-29"},{"lineNumber":776,"author":{"gitId":"Bentimate"},"content":"  * 1a3. System deletes the student","lastModifiedDate":"2023-03-29"},{"lineNumber":777,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":778,"author":{"gitId":"Bentimate"},"content":"    Use case ends","lastModifiedDate":"2023-03-29"},{"lineNumber":779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"EvitanRelta"},"content":"* 2a. The list is empty","lastModifiedDate":"2023-03-06"},{"lineNumber":781,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"EvitanRelta"},"content":"  Use case ends","lastModifiedDate":"2023-03-06"},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"EvitanRelta"},"content":"* 3a. The given index is invalid","lastModifiedDate":"2023-03-06"},{"lineNumber":785,"author":{"gitId":"EvitanRelta"},"content":"  * 3a1. System shows an error message","lastModifiedDate":"2023-03-06"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"EvitanRelta"},"content":"    Use case resumes at step 2","lastModifiedDate":"2023-03-06"},{"lineNumber":788,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":789,"author":{"gitId":"EvitanRelta"},"content":"#### Use case UC4: List student(s)","lastModifiedDate":"2023-03-29"},{"lineNumber":790,"author":{"gitId":"EvitanRelta"},"content":"{:.no_toc}","lastModifiedDate":"2023-03-29"},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":792,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-03-24"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":794,"author":{"gitId":"wendy0107"},"content":"1.  User requests to list all the students.","lastModifiedDate":"2023-03-24"},{"lineNumber":795,"author":{"gitId":"wendy0107"},"content":"2.  System shows the list of all students.","lastModifiedDate":"2023-03-24"},{"lineNumber":796,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":797,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-03-24"},{"lineNumber":798,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":799,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-03-24"},{"lineNumber":800,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":801,"author":{"gitId":"wendy0107"},"content":"* 1a. Additional parameters are added behind `list`.","lastModifiedDate":"2023-03-24"},{"lineNumber":802,"author":{"gitId":"wendy0107"},"content":"  * 1a1. System shows an error message.","lastModifiedDate":"2023-03-24"},{"lineNumber":803,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":804,"author":{"gitId":"wendy0107"},"content":"    Use case ends.","lastModifiedDate":"2023-03-24"},{"lineNumber":805,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":806,"author":{"gitId":"EvitanRelta"},"content":"#### Use case UC5: Update remarks","lastModifiedDate":"2023-03-29"},{"lineNumber":807,"author":{"gitId":"EvitanRelta"},"content":"{:.no_toc}","lastModifiedDate":"2023-03-29"},{"lineNumber":808,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":809,"author":{"gitId":"Sheemo"},"content":"**MSS**","lastModifiedDate":"2023-03-22"},{"lineNumber":810,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":811,"author":{"gitId":"Sheemo"},"content":"1. User requests to list students","lastModifiedDate":"2023-03-22"},{"lineNumber":812,"author":{"gitId":"Sheemo"},"content":"2. System shows a list of students","lastModifiedDate":"2023-03-22"},{"lineNumber":813,"author":{"gitId":"Sheemo"},"content":"3. User requests to edit a student\u0027s remarks of a specific student in the list by their index from the list","lastModifiedDate":"2023-03-22"},{"lineNumber":814,"author":{"gitId":"Sheemo"},"content":"4. Program allows multi-line input of remarks","lastModifiedDate":"2023-03-22"},{"lineNumber":815,"author":{"gitId":"Sheemo"},"content":"5. User enters remarks","lastModifiedDate":"2023-03-22"},{"lineNumber":816,"author":{"gitId":"Sheemo"},"content":"6. User can exit writing the remarks at any time","lastModifiedDate":"2023-03-22"},{"lineNumber":817,"author":{"gitId":"Sheemo"},"content":"7. System saves the remarks","lastModifiedDate":"2023-03-22"},{"lineNumber":818,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":819,"author":{"gitId":"Sheemo"},"content":"   Use case ends","lastModifiedDate":"2023-03-22"},{"lineNumber":820,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":821,"author":{"gitId":"Sheemo"},"content":"**Extensions**","lastModifiedDate":"2023-03-22"},{"lineNumber":822,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":823,"author":{"gitId":"Sheemo"},"content":"* 2a. The list is empty","lastModifiedDate":"2023-03-22"},{"lineNumber":824,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":825,"author":{"gitId":"Sheemo"},"content":"  Use case ends","lastModifiedDate":"2023-03-22"},{"lineNumber":826,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":827,"author":{"gitId":"Sheemo"},"content":"* 3a. The given index is invalid","lastModifiedDate":"2023-03-22"},{"lineNumber":828,"author":{"gitId":"Sheemo"},"content":"  * 3a1. System shows an error message","lastModifiedDate":"2023-03-22"},{"lineNumber":829,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":830,"author":{"gitId":"Sheemo"},"content":"    Use case resumes at step 2","lastModifiedDate":"2023-03-22"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"EvitanRelta"},"content":"#### Use case UC6: Edit particulars","lastModifiedDate":"2023-03-29"},{"lineNumber":833,"author":{"gitId":"EvitanRelta"},"content":"{:.no_toc}","lastModifiedDate":"2023-03-29"},{"lineNumber":834,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":835,"author":{"gitId":"Bentimate"},"content":"**MSS**","lastModifiedDate":"2023-03-29"},{"lineNumber":836,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":837,"author":{"gitId":"Bentimate"},"content":"1. User requests to edit a student\u0027s particulars based on the list displayed","lastModifiedDate":"2023-03-29"},{"lineNumber":838,"author":{"gitId":"Bentimate"},"content":"2. System replaces the specified fields with the new details","lastModifiedDate":"2023-03-29"},{"lineNumber":839,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":840,"author":{"gitId":"Bentimate"},"content":"   Use case ends","lastModifiedDate":"2023-03-29"},{"lineNumber":841,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":842,"author":{"gitId":"Bentimate"},"content":"**Extensions**","lastModifiedDate":"2023-03-29"},{"lineNumber":843,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":844,"author":{"gitId":"Bentimate"},"content":"* 1a. The field to edit is not specified","lastModifiedDate":"2023-03-29"},{"lineNumber":845,"author":{"gitId":"Bentimate"},"content":"  * 1a1. System shows an error message","lastModifiedDate":"2023-03-29"},{"lineNumber":846,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":847,"author":{"gitId":"Bentimate"},"content":"    Use case resumes from step 1","lastModifiedDate":"2023-03-29"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":849,"author":{"gitId":"Bentimate"},"content":"* 1b. The index is given is invalid","lastModifiedDate":"2023-03-29"},{"lineNumber":850,"author":{"gitId":"Bentimate"},"content":"  * 1b1. System shows an error message","lastModifiedDate":"2023-03-29"},{"lineNumber":851,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":852,"author":{"gitId":"Bentimate"},"content":"    Use case resumes from step 1","lastModifiedDate":"2023-03-29"},{"lineNumber":853,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":854,"author":{"gitId":"Bentimate"},"content":"* 1c. The field is specified but the details are empty","lastModifiedDate":"2023-03-29"},{"lineNumber":855,"author":{"gitId":"Bentimate"},"content":"  * 1c1. System deletes the information in the specified field","lastModifiedDate":"2023-03-29"},{"lineNumber":856,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":857,"author":{"gitId":"Bentimate"},"content":"    Use case ends","lastModifiedDate":"2023-03-29"},{"lineNumber":858,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":859,"author":{"gitId":"EvitanRelta"},"content":"#### Use case UC7: Exiting the application","lastModifiedDate":"2023-03-29"},{"lineNumber":860,"author":{"gitId":"EvitanRelta"},"content":"{:.no_toc}","lastModifiedDate":"2023-03-29"},{"lineNumber":861,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":862,"author":{"gitId":"Bentimate"},"content":"**MSS**","lastModifiedDate":"2023-03-29"},{"lineNumber":863,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":864,"author":{"gitId":"Bentimate"},"content":"1. User requests to exit the application","lastModifiedDate":"2023-03-29"},{"lineNumber":865,"author":{"gitId":"Bentimate"},"content":"2. System saves all data into a local file","lastModifiedDate":"2023-03-29"},{"lineNumber":866,"author":{"gitId":"Bentimate"},"content":"3. System exits from the application","lastModifiedDate":"2023-03-29"},{"lineNumber":867,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":868,"author":{"gitId":"Bentimate"},"content":"   Use case ends","lastModifiedDate":"2023-03-29"},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-27"},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":872,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":873,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"Bentimate"},"content":"1. A user that is completely new to the application should be able to be familiar with the functionalities within 1 hour.","lastModifiedDate":"2023-03-03"},{"lineNumber":875,"author":{"gitId":"Bentimate"},"content":"2. System should respond within 0.1 second of the user providing an input.","lastModifiedDate":"2023-03-03"},{"lineNumber":876,"author":{"gitId":"Bentimate"},"content":"3. All systems must be able to access the _save file_ ie. Save file should be independent of the OS.","lastModifiedDate":"2023-03-03"},{"lineNumber":877,"author":{"gitId":"Bentimate"},"content":"4. Any information displayed should be concise and structured in a logical manner such that it is easily understandable.","lastModifiedDate":"2023-03-03"},{"lineNumber":878,"author":{"gitId":"Bentimate"},"content":"5. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2023-03-03"},{"lineNumber":879,"author":{"gitId":"wendy0107"},"content":"6. Should be able to hold up to 1000 students without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-24"},{"lineNumber":880,"author":{"gitId":"Bentimate"},"content":"7. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-03-03"},{"lineNumber":881,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":882,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-27"},{"lineNumber":883,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":884,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":885,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":886,"author":{"gitId":"wendy0107"},"content":"* **Tutors**: (NUS) Teaching Assistants.","lastModifiedDate":"2023-03-26"},{"lineNumber":887,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":888,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"Bentimate"},"content":"* **Save FIle**: The file containing all the data (ie. Entries of student information) inputted by the user saved locally on the user\u0027s own computer.","lastModifiedDate":"2023-03-03"},{"lineNumber":890,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":891,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-27"},{"lineNumber":892,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":893,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"wendy0107"},"content":"## **Appendix: Planned enhancements**","lastModifiedDate":"2023-04-08"},{"lineNumber":896,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":897,"author":{"gitId":"wendy0107"},"content":"The current version of TeachMeSenpai certainly has its flaws and here are some of our plans for future enhancements to improve TeachMeSenpai further for TAs.","lastModifiedDate":"2023-04-08"},{"lineNumber":898,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":899,"author":{"gitId":"wendy0107"},"content":"#### Add/Edit","lastModifiedDate":"2023-04-08"},{"lineNumber":900,"author":{"gitId":"wendy0107"},"content":"**Feature flaw 1** : STUDENT_NAME is currently case-sensitive so an input like `Shaun` and `shaun` will be considered as unique names. A planned enhancement for student names is to check for case-insensitivity in `add` and `edit` in order to disallow duplicate names.","lastModifiedDate":"2023-04-08"},{"lineNumber":901,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":902,"author":{"gitId":"wendy0107"},"content":"**Feature flaw 2** : STUDENT_NAME allows alphanumeric characters only. This means that inputs like `Mary 123` is allowed, while names like `Roy s/o Balakrishnan` is not allowed. In order to make the app more inclusive, STUDENT_NAME will be enhanced to allow alphabets, and symbols only.","lastModifiedDate":"2023-04-08"},{"lineNumber":903,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":904,"author":{"gitId":"wendy0107"},"content":"**Feature flaw 3** : Duplicate TELEGRAM and PHONE are allowed. This means that entries like `add n/Shaun p/000` and `add n/Shao Hong p/000` as well as `add n/Shaun tele/@sh123` and `add n/Shao Hong tele/@sh123` are valid.","lastModifiedDate":"2023-04-08"},{"lineNumber":905,"author":{"gitId":"wendy0107"},"content":"However, in reality phone numbers and telegram handles are unique so our future implementations will check that the student list can only contain unique telegram handles and phone numbers.","lastModifiedDate":"2023-04-08"},{"lineNumber":906,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":907,"author":{"gitId":"wendy0107"},"content":"**Feature flaw 4** : The current `edit` feature allows editing all fields except for remarks and the only way to edit remarks is by using the `remark` feature which may inconvenience users. We planned to improve the `edit` feature to support `edit INDEX r/`, allowing users to edit their remarks.","lastModifiedDate":"2023-04-08"},{"lineNumber":908,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":909,"author":{"gitId":"wendy0107"},"content":"#### Autocomplete","lastModifiedDate":"2023-04-08"},{"lineNumber":910,"author":{"gitId":"wendy0107"},"content":"**Feature flaw** : Currently the autocomplete simply checks that the given prefixes and its parameters are valid, however for the `add` feature, the autcomplete doesn\u0027t check for the presence of the compulsory `n/STUDENT_NAME` input which","lastModifiedDate":"2023-04-08"},{"lineNumber":911,"author":{"gitId":"wendy0107"},"content":"leads users to believe that their input (without `n/STUDENT_NAME`) is valid. Following the requirements of the `add` feature, we plan to improve autocomplete by ensuring it checks for `n/STUDENT_NAME`.","lastModifiedDate":"2023-04-08"},{"lineNumber":912,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":913,"author":{"gitId":"wendy0107"},"content":"#### Find/Filter","lastModifiedDate":"2023-04-08"},{"lineNumber":914,"author":{"gitId":"wendy0107"},"content":"**Feature flaw** : Currently, we don\u0027t explicitly handle such cases, which results in the behaviour where argument-less `find` shows all users, while `filter` shows none.","lastModifiedDate":"2023-04-08"},{"lineNumber":915,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":916,"author":{"gitId":"wendy0107"},"content":"Let\u0027s say argument-less `find`/`filter` is allowed, the possible behaviours could be:","lastModifiedDate":"2023-04-08"},{"lineNumber":917,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":918,"author":{"gitId":"wendy0107"},"content":"* to list all persons _(which is the purpose of `list`)_","lastModifiedDate":"2023-04-08"},{"lineNumber":919,"author":{"gitId":"wendy0107"},"content":"* to list no person _(which is not useful)_","lastModifiedDate":"2023-04-08"},{"lineNumber":920,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":921,"author":{"gitId":"wendy0107"},"content":"Both behaviours don\u0027t add value to the app. Thus, we plan to disallow argument-less `find`/`filter` commands and give an error message encouraging users to add arguments if they use `find`/`filter` without any arguments.","lastModifiedDate":"2023-04-08"},{"lineNumber":922,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":923,"author":{"gitId":"wendy0107"},"content":"#### Ui","lastModifiedDate":"2023-04-08"},{"lineNumber":924,"author":{"gitId":"wendy0107"},"content":"**Feature flaw** : At the moment, all the labels except for remarks are truncated. When the texts are too long, they do not wrap, especially for long tags and when the window is resized. To improve user experience, we plan to wrap text for long names, address, email, telegram handle, and the tags component.","lastModifiedDate":"2023-04-08"},{"lineNumber":925,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":926,"author":{"gitId":"wendy0107"},"content":"#### Error handling","lastModifiedDate":"2023-04-08"},{"lineNumber":927,"author":{"gitId":"wendy0107"},"content":"**Feature flaw** : The current error message for an invalid telegram handle is \"Telegram handle can take any valid telegram handle, and it should not be blank.\" We plan to replace it with a more helpful error message detailing the requirements for a telegram handle so users can reference the error message and improve their input.","lastModifiedDate":"2023-04-08"},{"lineNumber":928,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":929,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":930,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":931,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":932,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":933,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":934,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":935,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":936,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":938,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":939,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":940,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":941,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":942,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":943,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":944,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":945,"author":{"gitId":"wendy0107"},"content":"   2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-03-24"},{"lineNumber":946,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":947,"author":{"gitId":"wendy0107"},"content":"2. Saving window preferences","lastModifiedDate":"2023-03-24"},{"lineNumber":948,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":949,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":950,"author":{"gitId":"EvitanRelta"},"content":"   2. Re-launch the app by double-clicking the jar file.  \\\\","lastModifiedDate":"2023-04-04"},{"lineNumber":951,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":952,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":953,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":954,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":955,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":956,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":957,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":958,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":959,"author":{"gitId":"EvitanRelta"},"content":"   2. Test case: `delete 1`  \\\\","lastModifiedDate":"2023-04-04"},{"lineNumber":960,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":961,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":962,"author":{"gitId":"EvitanRelta"},"content":"   3. Test case: `delete 0` \\\\","lastModifiedDate":"2023-04-04"},{"lineNumber":963,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":964,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":965,"author":{"gitId":"EvitanRelta"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size) \\\\","lastModifiedDate":"2023-04-04"},{"lineNumber":966,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":967,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":968,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-27"},{"lineNumber":969,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":970,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":971,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":972,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":973,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":974,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":975,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":976,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-27"},{"lineNumber":977,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Sheemo":23,"wendy0107":388,"Bentimate":80,"EvitanRelta":158,"alextang809":2,"-":326}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"EvitanRelta"},"content":"layout: page","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"title: User Guide","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"## About TeachMeSenpai","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"TeachMeSenpai is a **desktop app targeted at NUS teaching assistants who have many students to keep track of.** It is tailored to assist you in monitoring your students\u0027 progress, and details.","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"As a teaching assistant, you can add all your students\u0027 particulars, make notes about them, quickly navigate through your long list of students and so much more!","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"If using our app seems daunting to you at first, don\u0027t worry, we even have an [autocomplete feature](#autocompletion) to guide you through every step of the way!","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"Tailored to fast-typists, TeachMeSenpai is built around a **Command Line Interface (CLI)**, complete with an **autocomplete** feature and a **Graphical User Interface** (GUI)","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"to help you manage your students quicker than a traditional point-and-click app can.","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"## About this User Guide","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"This user guide provides everything you need to know to get started with TeachMeSenpai and how to use its features.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"Head over to the [Quick Start](#quick-start) section to get started with setting up, or the [Features](#features) section","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"to learn more about what TeachMeSenpai can do for you! If at any point there are any unfamiliar terms, you may head over to the [Glossary](#glossary)","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"for an explanation.","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"### Navigating the User Guide","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"**Note Box**","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e**:bulb: Note:** Provides information that is useful to know.","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"**Tip Box**","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e**:information_source: Tip:** Provides information that can help enhance the user experience but is not necessary to know.","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"**Warning Box**","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e**:exclamation: Warning:** Important information to take note of to avoid any unintended effects!","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"**Hyperlinks**","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"[Links](#navigating-the-user-guide): Words highlighted in blue are clickable and will direct you to a relevant section within","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"this user guide for more information, or to external websites to learn more!","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"---","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"## **Table of Contents**","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"{:.no_toc}","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"* Table of Contents","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"EvitanRelta"},"content":"{:toc}","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"EvitanRelta"},"content":"## Quick start","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"TeachMeSenpai has been designed to work for all Operating Systems/computers!","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"    \u003cimg alt\u003d\"TeachMeSenpai upon launch\" src\u003d\"images/user-guide/sample_GUI.jpg\" /\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"1. Ensure you have `Java 11` or above installed in your computer (you may refer to [Java Help Resources](https://www.java.com/en/download/help/version_manual.html) if you\u0027re not sure how to do so).","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"EvitanRelta"},"content":"2. Download the latest `teachmesenpai.jar` from [here](https://github.com/AY2223S2-CS2103T-W12-2/tp/releases/latest).","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"3. Copy or move the file to the folder you want to use as the home folder for your application.","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"EvitanRelta"},"content":"4. Double-click the file to start the app.","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"EvitanRelta"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"## Guide to TeachMeSenpai\u0027s GUI","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"TeachMeSenpai has several important components as part of its display. Here is a quick walk-through each component.","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"  \u003cimg alt\u003d\"Main window components\" src\u003d\"images/user-guide/mainwindow-components.jpg\" /\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"\u003ch3 style\u003d\"color:Gray\"\u003e\u003cb\u003eMenu bar\u003c/b\u003e\u003c/h3\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"* Clicking `FILE` will give you the option to exit the app","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"* Clicking `HELP` will show `HELP F1`, clicking it will provide you a link to this User Guide!","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"wendy0107"},"content":"\u003ch3 style\u003d\"color:MediumSeaGreen\"\u003e\u003cb\u003eCommand line\u003c/b\u003e\u003c/h3\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"* This is where you will be typing all the commands for TeachMeSenpai! To learn more about the commands TeachMeSenpai has, head over","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"wendy0107"},"content":"to [Features](#features).","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"wendy0107"},"content":"\u003ch3 style\u003d\"color:DodgerBlue\"\u003e\u003cb\u003eFeedback Box\u003c/b\u003e\u003c/h3\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"wendy0107"},"content":"* This is where TeachMeSenpai will provide you with feedback for your commands! Whether they were successfully done or not.","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"wendy0107"},"content":"You will see more examples of the feedback TeachMeSenpai provides in the [Features](#features) section.","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"wendy0107"},"content":"\u003ch3 style\u003d\"color:gold\"\u003e\u003cb\u003eResult Box\u003c/b\u003e\u003c/h3\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"wendy0107"},"content":"* This is where the results for commands like [`show`](#showing-a-students-remark-show) and [`edit`](#editing-a-student-edit) will show up!","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"wendy0107"},"content":"* This section is scrollable when necessary.","lastModifiedDate":"2023-04-05"},{"lineNumber":88,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"wendy0107"},"content":"\u003ch3 style\u003d\"color:red\"\u003e\u003cb\u003eStudent List\u003c/b\u003e\u003c/h3\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":90,"author":{"gitId":"wendy0107"},"content":"* This is where you can view all your student entries and their details!","lastModifiedDate":"2023-04-05"},{"lineNumber":91,"author":{"gitId":"wendy0107"},"content":"* This section is scrollable as well.","lastModifiedDate":"2023-04-05"},{"lineNumber":92,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":93,"author":{"gitId":"wendy0107"},"content":"### Adjusting the size of TeachMeSenpai","lastModifiedDate":"2023-04-05"},{"lineNumber":94,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":95,"author":{"gitId":"wendy0107"},"content":"If the app is too small for your liking, you may resize it by dragging the sides of the window with your cursor! The red lines in the image below are moveable","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"wendy0107"},"content":"so feel free to adjust the app however you like!","lastModifiedDate":"2023-04-06"},{"lineNumber":97,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":98,"author":{"gitId":"wendy0107"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":99,"author":{"gitId":"wendy0107"},"content":"  \u003cimg alt\u003d\"Resizing guide\" src\u003d\"images/user-guide/resize-window.jpg\" /\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":100,"author":{"gitId":"wendy0107"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":101,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e**:information_source: Tip:** Hover your mouse over the red lines indicated by the image on your app under you see an arrow cursor, this will allow","lastModifiedDate":"2023-04-06"},{"lineNumber":103,"author":{"gitId":"wendy0107"},"content":"you to adjust the size of the window","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":106,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-04-05"},{"lineNumber":107,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":108,"author":{"gitId":"wendy0107"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":109,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":110,"author":{"gitId":"wendy0107"},"content":"## Guide on using Features","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"Sheemo"},"content":"## Parameter descriptions","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"wendy0107"},"content":"Firstly, parameters are the inputs/information you have to fill in together with their respective commands in the command line when using TeachMeSenpai!","lastModifiedDate":"2023-04-05"},{"lineNumber":115,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"wendy0107"},"content":"Here is an exhaustive table for you to refer to if you\u0027re unsure of what to input when using the various [features](#features) below this section!","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"wendy0107"},"content":"| Parameter         | Meaning                                                                               | Notes                                                                                                                                                                                                                                |","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"wendy0107"},"content":"|-------------------|---------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-06"},{"lineNumber":120,"author":{"gitId":"wendy0107"},"content":"| `ADDRESS`         | Address of the student.                                                               | Can contain numbers, symbols and multiple letters/words                                                                                                                                                                              |","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"wendy0107"},"content":"| `EDUCATION_LEVEL` | Education level of the student.                                                       | Can contain numbers and multiple letters/words                                                                                                                                                                                       |","lastModifiedDate":"2023-04-06"},{"lineNumber":122,"author":{"gitId":"wendy0107"},"content":"| `EMAIL`           | Email address of the student.                                                         | 1. Follow the format local-part@domain \u003cbr/\u003e 2. Must contains `@` symbol \u003cbr/\u003e 3. Must not start with a non-alphanumeric character (eg. . , \u0027 \" @) \u003cbr/\u003e 4. Can contain letters and numbers \u003cbr/\u003e 5. Should not contain any spacings |","lastModifiedDate":"2023-04-06"},{"lineNumber":123,"author":{"gitId":"wendy0107"},"content":"| `INDEX`           | The number next to the student entry upon using [`list`](#listing-all-students-list). | Must be a positive number (eg. 1, 2, 3...)                                                                                                                                                                                           |","lastModifiedDate":"2023-04-06"},{"lineNumber":124,"author":{"gitId":"wendy0107"},"content":"| `KEYWORD`         | The word you would like to [`find`](#findfilter-students-findfilter) by.              | Can only contain letters and/or numbers                                                                                                                                                                                              |","lastModifiedDate":"2023-04-06"},{"lineNumber":125,"author":{"gitId":"wendy0107"},"content":"| `MODULE`          | The module you\u0027re teaching the student.                                               | 1. Can only contains alphanumeric characters and/or spaces \u003cbr/\u003e 2. Any whitespaces in front of the module given will be removed by the app                                                                                          |","lastModifiedDate":"2023-04-06"},{"lineNumber":126,"author":{"gitId":"wendy0107"},"content":"| `PHONE`           | Phone number of the student.                                                          | 1. Must only contain numbers \u003cbr/\u003e  2. Must be at least 3 numbers long                                                                                                                                                               |","lastModifiedDate":"2023-04-06"},{"lineNumber":127,"author":{"gitId":"wendy0107"},"content":"| `REMARK`          | Your notes or remarks on the student.                                                 | Can contain any combination of words, numbers and special characters                                                                                                                                                                 |","lastModifiedDate":"2023-04-06"},{"lineNumber":128,"author":{"gitId":"wendy0107"},"content":"| `STUDENT_NAME`    | Name of the student.                                                                  | 1. Can only contain alphanumeric characters and/or spaces \u003cbr/\u003e 2. Any whitespaces in front of the name given will be removed by the app                                                                                             |","lastModifiedDate":"2023-04-06"},{"lineNumber":129,"author":{"gitId":"wendy0107"},"content":"| `TAG`             | Qualities of the student you\u0027d like to be shown as a [tag](#adding-a-student-add).    | Must be a single word containing alphanumeric characters only                                                                                                                                                                        |","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"wendy0107"},"content":"| `TELEGRAM`        | Telegram handle of the student.                                                       | 1. Must begin with \"@\"\u003cbr/\u003e 2. Can only contain uppercase and lowercase alphabets, digits (0-9), and underscores\u003cbr/\u003e 3. Minimum length is 5 characters                                                                              |","lastModifiedDate":"2023-04-06"},{"lineNumber":131,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":132,"author":{"gitId":"Sheemo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":133,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":134,"author":{"gitId":"Sheemo"},"content":":bulb: **Note:** The description for a valid Telegram handle has been shortened for brevity and thus might not cover all cases.","lastModifiedDate":"2023-04-02"},{"lineNumber":135,"author":{"gitId":"Sheemo"},"content":"* For example, one might think that \"@hello__world\" is allowed but it isn\u0027t due to having consecutive underscores.","lastModifiedDate":"2023-04-02"},{"lineNumber":136,"author":{"gitId":"Sheemo"},"content":"* TeachMeSenpai does validate handles according to Telegram specifications, but do check on the Telegram application for whether a handle is valid!","lastModifiedDate":"2023-04-02"},{"lineNumber":137,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"EvitanRelta"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":139,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":140,"author":{"gitId":"EvitanRelta"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-26"},{"lineNumber":141,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":142,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":147,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":148,"author":{"gitId":"wendy0107"},"content":":bulb: **Notes about the command format:**","lastModifiedDate":"2023-04-06"},{"lineNumber":149,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":150,"author":{"gitId":"wendy0107"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user. \\\\","lastModifiedDate":"2023-04-06"},{"lineNumber":151,"author":{"gitId":"wendy0107"},"content":"  _(eg. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`)_","lastModifiedDate":"2023-04-06"},{"lineNumber":152,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":153,"author":{"gitId":"wendy0107"},"content":"- Items in square brackets are optional. \\\\","lastModifiedDate":"2023-04-06"},{"lineNumber":154,"author":{"gitId":"wendy0107"},"content":"  _(eg. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`)_","lastModifiedDate":"2023-04-06"},{"lineNumber":155,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":156,"author":{"gitId":"wendy0107"},"content":"- Items with `...` after them can be used multiple times including zero times. \\\\","lastModifiedDate":"2023-04-06"},{"lineNumber":157,"author":{"gitId":"wendy0107"},"content":"  _(eg. `[t/TAG]...` can be excluded completely, or once `t/friend`, or twice `t/friend t/family`, etc.)_","lastModifiedDate":"2023-04-06"},{"lineNumber":158,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":159,"author":{"gitId":"EvitanRelta"},"content":"- Parameters can be specified in any order. \\\\","lastModifiedDate":"2023-04-08"},{"lineNumber":160,"author":{"gitId":"wendy0107"},"content":"  _(eg. if the command specifies `n/NAME p/PHONE`, `p/PHONE n/NAME` is also acceptable)_","lastModifiedDate":"2023-04-06"},{"lineNumber":161,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":162,"author":{"gitId":"wendy0107"},"content":"- If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken. \\\\","lastModifiedDate":"2023-04-06"},{"lineNumber":163,"author":{"gitId":"wendy0107"},"content":"  _(eg. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken)_","lastModifiedDate":"2023-04-06"},{"lineNumber":164,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":165,"author":{"gitId":"wendy0107"},"content":"- Extraneous words for commands that do not take in parameters (such as `help`, `list`, `redo`, `undo`, `show`, `exit` and `clear`) will be ignored. \\\\","lastModifiedDate":"2023-04-06"},{"lineNumber":166,"author":{"gitId":"wendy0107"},"content":"  _(eg. if the command entered is `help 123`, it will be interpreted as `help`)_","lastModifiedDate":"2023-04-06"},{"lineNumber":167,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":168,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":169,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":170,"author":{"gitId":"EvitanRelta"},"content":"### Autocompletion","lastModifiedDate":"2023-03-31"},{"lineNumber":171,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":172,"author":{"gitId":"wendy0107"},"content":"TeachMeSenpai has a lot of features for you to experiment with, however we understand that it might take some getting used to. Hence, we\u0027ve","lastModifiedDate":"2023-04-04"},{"lineNumber":173,"author":{"gitId":"wendy0107"},"content":"included an autocompletion feature!","lastModifiedDate":"2023-04-04"},{"lineNumber":174,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":175,"author":{"gitId":"wendy0107"},"content":"Start typing the first letters of a command to get shadow-like autocomplete suggestions.","lastModifiedDate":"2023-04-04"},{"lineNumber":176,"author":{"gitId":"wendy0107"},"content":"The format of the suggested parameters are as described in the [**Guide on using Features**](#guide-on-using-features).","lastModifiedDate":"2023-04-05"},{"lineNumber":177,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":178,"author":{"gitId":"EvitanRelta"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e**:information_source: Tip:** You can press the `TAB` to fill in the next suggested word!","lastModifiedDate":"2023-04-03"},{"lineNumber":179,"author":{"gitId":"EvitanRelta"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":180,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":181,"author":{"gitId":"EvitanRelta"},"content":"![help popup gui](images/user-guide/autocomplete.jpg)","lastModifiedDate":"2023-03-31"},{"lineNumber":182,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":183,"author":{"gitId":"EvitanRelta"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":184,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":185,"author":{"gitId":"wendy0107"},"content":"For the `module`, `tag`, `education` parameters, it will also suggest all the existing values to you.","lastModifiedDate":"2023-04-06"},{"lineNumber":186,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":187,"author":{"gitId":"EvitanRelta"},"content":"![help popup gui](images/user-guide/autocomplete_arg_values.jpg)","lastModifiedDate":"2023-03-31"},{"lineNumber":188,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":189,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":190,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":191,"author":{"gitId":"wendy0107"},"content":":bulb: **Note:** The `|` seen above are not part of the commands TeachMeSenpai accepts! They simply indicate the existing","lastModifiedDate":"2023-04-04"},{"lineNumber":192,"author":{"gitId":"wendy0107"},"content":"modules/education/tags you have in the current student list.","lastModifiedDate":"2023-04-06"},{"lineNumber":193,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":194,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":195,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":196,"author":{"gitId":"EvitanRelta"},"content":"### Viewing help: `help`","lastModifiedDate":"2023-03-26"},{"lineNumber":197,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":198,"author":{"gitId":"EvitanRelta"},"content":"Shows a URL to the `User Guide` page.","lastModifiedDate":"2023-03-26"},{"lineNumber":199,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":200,"author":{"gitId":"EvitanRelta"},"content":"![help popup gui](images/user-guide/help_popup.jpg)","lastModifiedDate":"2023-03-26"},{"lineNumber":201,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":202,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e**:information_source: Tip:** Click `F1` as a keyboard shortcut to view the help pop-up!.","lastModifiedDate":"2023-04-06"},{"lineNumber":203,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":204,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":205,"author":{"gitId":"EvitanRelta"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-26"},{"lineNumber":206,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":207,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-26"},{"lineNumber":208,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":209,"author":{"gitId":"wendy0107"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2023-04-02"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003e Format: `exit`","lastModifiedDate":"2023-02-16"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"EvitanRelta"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:bulb: **Note:** This is the same as closing the app via the top-right `x` button.","lastModifiedDate":"2023-04-03"},{"lineNumber":216,"author":{"gitId":"EvitanRelta"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":217,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":218,"author":{"gitId":"EvitanRelta"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-26"},{"lineNumber":219,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":220,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-26"},{"lineNumber":221,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"### Listing all students: `list`","lastModifiedDate":"2023-02-16"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"wendy0107"},"content":"Shows a list of all students. This is useful for displaying the full list after using commands that modifies the list _(eg. [`find`](#findfilter-students-findfilter))_.","lastModifiedDate":"2023-04-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003e Format: `list`","lastModifiedDate":"2023-02-16"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":228,"author":{"gitId":"EvitanRelta"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-26"},{"lineNumber":229,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":230,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-26"},{"lineNumber":231,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"### Adding a student: `add`","lastModifiedDate":"2023-02-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"Adds a student to the list, along with their education level and any student-specific notes.","lastModifiedDate":"2023-02-16"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":236,"author":{"gitId":"EvitanRelta"},"content":"\u003e Format: `add n/STUDENT_NAME [a/ADDRESS] [p/PHONE] [e/EMAIL] [edu/EDUCATION_LEVEL] [tele/TELEGRAM] [r/REMARK] [t/TAG]... [m/MODULE]...`","lastModifiedDate":"2023-04-08"},{"lineNumber":237,"author":{"gitId":"wendy0107"},"content":"\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":238,"author":{"gitId":"wendy0107"},"content":"\u003e - STUDENT_NAME: [Alphanumeric](#glossary) word(s).","lastModifiedDate":"2023-04-06"},{"lineNumber":239,"author":{"gitId":"wendy0107"},"content":"\u003e - ADDRESS: The student\u0027s address.","lastModifiedDate":"2023-04-06"},{"lineNumber":240,"author":{"gitId":"wendy0107"},"content":"\u003e - PHONE: A student\u0027s phone number that only contains numbers and is as least 3 numbers long.","lastModifiedDate":"2023-04-06"},{"lineNumber":241,"author":{"gitId":"wendy0107"},"content":"\u003e - EMAIL: A valid email follows the `local@domain` format.","lastModifiedDate":"2023-04-06"},{"lineNumber":242,"author":{"gitId":"wendy0107"},"content":"\u003e - EDUCATION LEVEL: [Alphanumeric](#glossary) word(s)","lastModifiedDate":"2023-04-06"},{"lineNumber":243,"author":{"gitId":"wendy0107"},"content":"\u003e - TELEGRAM: A valid telegram handle must start with `@` and follows Telegram\u0027s username specifications","lastModifiedDate":"2023-04-06"},{"lineNumber":244,"author":{"gitId":"wendy0107"},"content":"\u003e - REMARK: Can be sentences or even paragraphs.","lastModifiedDate":"2023-04-06"},{"lineNumber":245,"author":{"gitId":"wendy0107"},"content":"\u003e - TAG: A detail about a student (limited to one word long).","lastModifiedDate":"2023-04-06"},{"lineNumber":246,"author":{"gitId":"EvitanRelta"},"content":"\u003e - MODULE: The module code the student is taking (can be multiple words).","lastModifiedDate":"2023-04-08"},{"lineNumber":247,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":248,"author":{"gitId":"wendy0107"},"content":"For more details and examples on the parameters, please refer to the [Parameter descriptions](#parameter-descriptions)!","lastModifiedDate":"2023-04-06"},{"lineNumber":249,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":252,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":253,"author":{"gitId":"wendy0107"},"content":":bulb: **Note:**","lastModifiedDate":"2023-04-06"},{"lineNumber":254,"author":{"gitId":"wendy0107"},"content":"* `EDUCATION_LEVEL`, `TAG`,  and  `MODULE` will be displayed as coloured tags under the student\u0027s name.","lastModifiedDate":"2023-04-06"},{"lineNumber":255,"author":{"gitId":"wendy0107"},"content":"* Only the name ie. `n/` is compulsory. You can add/edit details for other parameters using the [`edit`](#editing-a-student-edit) command.","lastModifiedDate":"2023-04-06"},{"lineNumber":256,"author":{"gitId":"wendy0107"},"content":"* The current version of TeachMeSenpai allows you to add students with the same name (case-insensitive), phone number, and/or telegram handle! However, we have planned","lastModifiedDate":"2023-04-06"},{"lineNumber":257,"author":{"gitId":"wendy0107"},"content":"a future enhancement that will only allow unique names (case-sensitive), phone numbers, and telegram handles.","lastModifiedDate":"2023-04-06"},{"lineNumber":258,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":259,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":260,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-16"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"EvitanRelta"},"content":"- `add n/Shaun a/123 NUS Street r/Good in Japanese t/submitted m/CS2103T`","lastModifiedDate":"2023-04-08"},{"lineNumber":264,"author":{"gitId":"EvitanRelta"},"content":"- `add n/Shao Hong edu/Bachelors y2 r/Good in German m/CS2101`","lastModifiedDate":"2023-03-31"},{"lineNumber":265,"author":{"gitId":"EvitanRelta"},"content":"- `add n/Wen Li e/e07123456@u.nus.edu p/91234567 a/Kent Ridge PGPR tele/@wenlisan r/Very hardworking :)`","lastModifiedDate":"2023-04-08"},{"lineNumber":266,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":267,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":268,"author":{"gitId":"EvitanRelta"},"content":"**Using the following input** `add n/Shao Hong edu/Bachelors y2 r/Good in german m/CS2101`","lastModifiedDate":"2023-04-08"},{"lineNumber":269,"author":{"gitId":"EvitanRelta"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":270,"author":{"gitId":"EvitanRelta"},"content":"    \u003cimg alt\u003d\"add before\" src\u003d\"images/user-guide/add_before.jpg\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":271,"author":{"gitId":"EvitanRelta"},"content":"    \u003cbr\u003e\u003ci\u003e\u003cb\u003eAbove:\u003c/b\u003e Before entering \u003ccode\u003eadd\u003c/code\u003e command\u003c/i\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":272,"author":{"gitId":"EvitanRelta"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":273,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":274,"author":{"gitId":"EvitanRelta"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":275,"author":{"gitId":"EvitanRelta"},"content":"    \u003cimg alt\u003d\"add after\" src\u003d\"images/user-guide/add_after.jpg\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":276,"author":{"gitId":"EvitanRelta"},"content":"    \u003cbr\u003e\u003ci\u003e\u003cb\u003eAbove:\u003c/b\u003e After entering \u003ccode\u003eadd\u003c/code\u003e command\u003c/i\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":277,"author":{"gitId":"EvitanRelta"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":278,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":279,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":280,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":281,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-04-06"},{"lineNumber":282,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":283,"author":{"gitId":"wendy0107"},"content":"---","lastModifiedDate":"2023-04-06"},{"lineNumber":284,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":285,"author":{"gitId":"wendy0107"},"content":"### Delete a student: `delete`","lastModifiedDate":"2023-04-06"},{"lineNumber":286,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":287,"author":{"gitId":"EvitanRelta"},"content":"Deletes the student(s) at the specified index(es) from the student list.","lastModifiedDate":"2023-04-08"},{"lineNumber":288,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":289,"author":{"gitId":"wendy0107"},"content":"\u003e Format: `delete INDEX [INDEX]...`","lastModifiedDate":"2023-04-06"},{"lineNumber":290,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":291,"author":{"gitId":"wendy0107"},"content":"- Deletes the student at the specified `INDEX`.","lastModifiedDate":"2023-04-06"},{"lineNumber":292,"author":{"gitId":"wendy0107"},"content":"- More than 1 `INDEX` can be specified, and all of them will be deleted.","lastModifiedDate":"2023-04-06"},{"lineNumber":293,"author":{"gitId":"wendy0107"},"content":"- The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2023-04-06"},{"lineNumber":294,"author":{"gitId":"wendy0107"},"content":"- The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2023-04-06"},{"lineNumber":295,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":296,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:bulb: **Note:** If any one of the `INDEX` specified are invalid (do not correspond to a student in the list),","lastModifiedDate":"2023-04-06"},{"lineNumber":297,"author":{"gitId":"wendy0107"},"content":"none of the students will be deleted.","lastModifiedDate":"2023-04-06"},{"lineNumber":298,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":299,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":300,"author":{"gitId":"wendy0107"},"content":"Examples:","lastModifiedDate":"2023-04-06"},{"lineNumber":301,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":302,"author":{"gitId":"wendy0107"},"content":"- `list` followed by `delete 2` deletes the 2nd student in the student list.","lastModifiedDate":"2023-04-06"},{"lineNumber":303,"author":{"gitId":"EvitanRelta"},"content":"- `delete 1 4` deletes the 1st and 4th student in the student list.","lastModifiedDate":"2023-04-08"},{"lineNumber":304,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":305,"author":{"gitId":"EvitanRelta"},"content":"**Using the following input** `delete 1 4`","lastModifiedDate":"2023-04-08"},{"lineNumber":306,"author":{"gitId":"wendy0107"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":307,"author":{"gitId":"wendy0107"},"content":"    \u003cimg alt\u003d\"delete before\" src\u003d\"images/user-guide/delete_before.jpg\" /\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":308,"author":{"gitId":"wendy0107"},"content":"    \u003cbr\u003e\u003ci\u003e\u003cb\u003eAbove:\u003c/b\u003e Before entering \u003ccode\u003edelete\u003c/code\u003e command\u003c/i\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":309,"author":{"gitId":"wendy0107"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":310,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":311,"author":{"gitId":"wendy0107"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":312,"author":{"gitId":"wendy0107"},"content":"    \u003cimg alt\u003d\"delete after\" src\u003d\"images/user-guide/delete_after.jpg\" /\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":313,"author":{"gitId":"wendy0107"},"content":"    \u003cbr\u003e\u003ci\u003e\u003cb\u003eAbove:\u003c/b\u003e After entering \u003ccode\u003edelete\u003c/code\u003e command\u003c/i\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":314,"author":{"gitId":"wendy0107"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":315,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":316,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Tip:** You can combine `find` and `delete` when you have a very long list of students.","lastModifiedDate":"2023-04-06"},{"lineNumber":317,"author":{"gitId":"wendy0107"},"content":"\u003cbr\u003eFor instance, you can `find` the student(s) you want gone, and then `delete` using the index from the list displayed!","lastModifiedDate":"2023-04-06"},{"lineNumber":318,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":319,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":320,"author":{"gitId":"EvitanRelta"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-26"},{"lineNumber":321,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":322,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-26"},{"lineNumber":323,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":324,"author":{"gitId":"EvitanRelta"},"content":"### Editing a student: `edit`","lastModifiedDate":"2023-03-26"},{"lineNumber":325,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":326,"author":{"gitId":"wendy0107"},"content":"Edits a student\u0027s information _(all information except remarks)_. To remove a student\u0027s parameter, leave the value after the prefix blank _(eg. `a/ p/` to remove address \u0026 phone number)_.","lastModifiedDate":"2023-04-06"},{"lineNumber":327,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":328,"author":{"gitId":"wendy0107"},"content":"\u003e Format: `edit INDEX [n/STUDENT_NAME] [a/ADDRESS] [p/PHONE] [e/EMAIL] [edu/EDUCATION_LEVEL] [tele/TELEGRAM] [t/TAG]... [m/MODULE]...`","lastModifiedDate":"2023-04-06"},{"lineNumber":329,"author":{"gitId":"wendy0107"},"content":"\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":330,"author":{"gitId":"wendy0107"},"content":"\u003e - The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2023-04-06"},{"lineNumber":331,"author":{"gitId":"wendy0107"},"content":"\u003e - The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2023-04-06"},{"lineNumber":332,"author":{"gitId":"wendy0107"},"content":"\u003e - STUDENT_NAME: [Alphanumeric](#glossary) word(s).","lastModifiedDate":"2023-04-06"},{"lineNumber":333,"author":{"gitId":"wendy0107"},"content":"\u003e - ADDRESS: The student\u0027s address.","lastModifiedDate":"2023-04-06"},{"lineNumber":334,"author":{"gitId":"wendy0107"},"content":"\u003e - PHONE: A student\u0027s phone number that only contains numbers and is as least 3 numbers long.","lastModifiedDate":"2023-04-06"},{"lineNumber":335,"author":{"gitId":"wendy0107"},"content":"\u003e - EMAIL: A valid email follows the `local@domain` format.","lastModifiedDate":"2023-04-06"},{"lineNumber":336,"author":{"gitId":"wendy0107"},"content":"\u003e - EDUCATION LEVEL: [Alphanumeric](#glossary) word(s)","lastModifiedDate":"2023-04-06"},{"lineNumber":337,"author":{"gitId":"wendy0107"},"content":"\u003e - TELEGRAM: A valid telegram handle must start with `@` and follows Telegram\u0027s username specifications","lastModifiedDate":"2023-04-06"},{"lineNumber":338,"author":{"gitId":"wendy0107"},"content":"\u003e - TAG: A detail about a student (limited to one word long).","lastModifiedDate":"2023-04-06"},{"lineNumber":339,"author":{"gitId":"EvitanRelta"},"content":"\u003e - MODULE: The module code the student is taking (can be multiple words).","lastModifiedDate":"2023-04-08"},{"lineNumber":340,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":341,"author":{"gitId":"wendy0107"},"content":"For more details and examples on the parameters, please refer to the [Parameter descriptions](#parameter-descriptions)!","lastModifiedDate":"2023-04-06"},{"lineNumber":342,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":343,"author":{"gitId":"EvitanRelta"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":344,"author":{"gitId":"EvitanRelta"},"content":":bulb: **Note:**","lastModifiedDate":"2023-04-06"},{"lineNumber":345,"author":{"gitId":"wendy0107"},"content":"* `edit` command cannot edit the remark parameter of students. Use the [`remark`](#editing-remark-of-student-remark) command for editing remarks.","lastModifiedDate":"2023-04-06"},{"lineNumber":346,"author":{"gitId":"wendy0107"},"content":"* `edit` command does not allow you to change the name of a student to an existing student\u0027s name in the student list!","lastModifiedDate":"2023-04-06"},{"lineNumber":347,"author":{"gitId":"EvitanRelta"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":348,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":349,"author":{"gitId":"EvitanRelta"},"content":"Examples:","lastModifiedDate":"2023-03-26"},{"lineNumber":350,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":351,"author":{"gitId":"EvitanRelta"},"content":"- `edit 2 n/Shaun Tan r/Not good in Japanese`","lastModifiedDate":"2023-03-26"},{"lineNumber":352,"author":{"gitId":"EvitanRelta"},"content":"- `edit 1 n/Lao Hong`","lastModifiedDate":"2023-03-26"},{"lineNumber":353,"author":{"gitId":"EvitanRelta"},"content":"- `edit 3 a/ p/` _(removes student\u0027s address \u0026 phone number)_","lastModifiedDate":"2023-03-26"},{"lineNumber":354,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":355,"author":{"gitId":"EvitanRelta"},"content":"**Using the following input** `edit 4 n/Lao Hong`","lastModifiedDate":"2023-04-08"},{"lineNumber":356,"author":{"gitId":"EvitanRelta"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":357,"author":{"gitId":"EvitanRelta"},"content":"    \u003cimg alt\u003d\"edit before\" src\u003d\"images/user-guide/edit_before.jpg\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":358,"author":{"gitId":"EvitanRelta"},"content":"    \u003cbr\u003e\u003ci\u003e\u003cb\u003eAbove:\u003c/b\u003e Before entering \u003ccode\u003eedit\u003c/code\u003e command\u003c/i\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":359,"author":{"gitId":"EvitanRelta"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":360,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":361,"author":{"gitId":"EvitanRelta"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":362,"author":{"gitId":"EvitanRelta"},"content":"    \u003cimg alt\u003d\"edit after\" src\u003d\"images/user-guide/edit_after.jpg\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":363,"author":{"gitId":"EvitanRelta"},"content":"    \u003cbr\u003e\u003ci\u003e\u003cb\u003eAbove:\u003c/b\u003e After entering \u003ccode\u003eedit\u003c/code\u003e command\u003c/i\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":364,"author":{"gitId":"EvitanRelta"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":365,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":366,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e :bulb: **Note:** After using `edit`, the edited student will show up in the [result box](#guide-to-teachmesenpais-gui) to help you view all the","lastModifiedDate":"2023-04-06"},{"lineNumber":367,"author":{"gitId":"wendy0107"},"content":"edited student\u0027s details.","lastModifiedDate":"2023-04-06"},{"lineNumber":368,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":369,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":370,"author":{"gitId":"EvitanRelta"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-26"},{"lineNumber":371,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":372,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-26"},{"lineNumber":373,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":374,"author":{"gitId":"EvitanRelta"},"content":"### Editing remark of student: `remark`","lastModifiedDate":"2023-03-26"},{"lineNumber":375,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":376,"author":{"gitId":"Sheemo"},"content":"Edits a student\u0027s remarks.","lastModifiedDate":"2023-03-31"},{"lineNumber":377,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":378,"author":{"gitId":"Bentimate"},"content":"\u003e Format: `remark INDEX`","lastModifiedDate":"2023-03-31"},{"lineNumber":379,"author":{"gitId":"wendy0107"},"content":"\u003e - The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2023-04-06"},{"lineNumber":380,"author":{"gitId":"wendy0107"},"content":"\u003e - The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2023-04-06"},{"lineNumber":381,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":382,"author":{"gitId":"wendy0107"},"content":"With `remark` you can type your desired remarks and notes into the popup text box! The text box can take in","lastModifiedDate":"2023-04-04"},{"lineNumber":383,"author":{"gitId":"wendy0107"},"content":"multiple sentences, paragraphs etc. When you are done, you can simply press `Ctrl` + `S`","lastModifiedDate":"2023-04-04"},{"lineNumber":384,"author":{"gitId":"wendy0107"},"content":"and your remarks will be saved once the text box closes.","lastModifiedDate":"2023-04-04"},{"lineNumber":385,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":386,"author":{"gitId":"EvitanRelta"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":387,"author":{"gitId":"wendy0107"},"content":":bulb: **Note:** Do not edit or type commands into the command line of TeachMeSenpai while the remark text box is open!","lastModifiedDate":"2023-04-04"},{"lineNumber":388,"author":{"gitId":"wendy0107"},"content":"The current version of TeachMeSenpai requires you to close the remark text box before you continue with other commands :)","lastModifiedDate":"2023-04-04"},{"lineNumber":389,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":390,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":391,"author":{"gitId":"EvitanRelta"},"content":"Examples:","lastModifiedDate":"2023-03-26"},{"lineNumber":392,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":393,"author":{"gitId":"wendy0107"},"content":"- `remark 2`","lastModifiedDate":"2023-04-06"},{"lineNumber":394,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":395,"author":{"gitId":"EvitanRelta"},"content":"**Using the following input** `remark 2`:","lastModifiedDate":"2023-04-08"},{"lineNumber":396,"author":{"gitId":"Bentimate"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":397,"author":{"gitId":"Bentimate"},"content":"    \u003cimg alt\u003d\"remark before\" src\u003d\"images/user-guide/remark_before.jpg\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":398,"author":{"gitId":"Bentimate"},"content":"    \u003cbr\u003e\u003ci\u003e\u003cb\u003eAbove:\u003c/b\u003e Before entering \u003ccode\u003eremark\u003c/code\u003e command\u003c/i\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":399,"author":{"gitId":"Bentimate"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":400,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":401,"author":{"gitId":"Bentimate"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":402,"author":{"gitId":"Bentimate"},"content":"    \u003cimg alt\u003d\"remark after\" src\u003d\"images/user-guide/remark_during.jpg\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":403,"author":{"gitId":"Bentimate"},"content":"    \u003cbr\u003e\u003ci\u003e\u003cb\u003eAbove:\u003c/b\u003e After pressing Ctrl + S \u003ccode\u003eremark\u003c/code\u003e command\u003c/i\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":404,"author":{"gitId":"Bentimate"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":405,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":406,"author":{"gitId":"Bentimate"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":407,"author":{"gitId":"Bentimate"},"content":"    \u003cimg alt\u003d\"remark during\" src\u003d\"images/user-guide/remark_after.jpg\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":408,"author":{"gitId":"Bentimate"},"content":"    \u003cbr\u003e\u003ci\u003e\u003cb\u003eAbove:\u003c/b\u003e After entering \u003ccode\u003eremark\u003c/code\u003e command\u003c/i\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":409,"author":{"gitId":"Bentimate"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":410,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":411,"author":{"gitId":"EvitanRelta"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":412,"author":{"gitId":"wendy0107"},"content":":bulb: **Note:** Notice that remarks in the [student list](#guide-to-teachmesenpais-gui) (right panel) are truncated to make your student list more succinct :)","lastModifiedDate":"2023-04-06"},{"lineNumber":413,"author":{"gitId":"wendy0107"},"content":"To view the remarks in detail, you may use the [`show`](#showing-a-students-remark-show) feature!","lastModifiedDate":"2023-04-05"},{"lineNumber":414,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":415,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":416,"author":{"gitId":"EvitanRelta"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-26"},{"lineNumber":417,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":418,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-26"},{"lineNumber":419,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":420,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":421,"author":{"gitId":"EvitanRelta"},"content":"### Showing a student\u0027s remark: `show`","lastModifiedDate":"2023-03-26"},{"lineNumber":422,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":423,"author":{"gitId":"wendy0107"},"content":"Displays all the details, including the full remark of a specified student. This is useful for when the remark is too long to be displayed fully in the student list panel.","lastModifiedDate":"2023-04-05"},{"lineNumber":424,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":425,"author":{"gitId":"EvitanRelta"},"content":"\u003e Format: `show INDEX`","lastModifiedDate":"2023-03-26"},{"lineNumber":426,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":427,"author":{"gitId":"EvitanRelta"},"content":"Examples:","lastModifiedDate":"2023-03-26"},{"lineNumber":428,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":429,"author":{"gitId":"EvitanRelta"},"content":"- `show 4`","lastModifiedDate":"2023-04-08"},{"lineNumber":430,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":431,"author":{"gitId":"EvitanRelta"},"content":"**Using the following input** `show 4`:","lastModifiedDate":"2023-04-08"},{"lineNumber":432,"author":{"gitId":"EvitanRelta"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":433,"author":{"gitId":"EvitanRelta"},"content":"    \u003cimg alt\u003d\"show before\" src\u003d\"images/user-guide/show_before.jpg\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":434,"author":{"gitId":"EvitanRelta"},"content":"    \u003cbr\u003e\u003ci\u003e\u003cb\u003eAbove:\u003c/b\u003e Before entering \u003ccode\u003eshow\u003c/code\u003e command\u003c/i\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":435,"author":{"gitId":"EvitanRelta"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":436,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":437,"author":{"gitId":"EvitanRelta"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":438,"author":{"gitId":"EvitanRelta"},"content":"    \u003cimg alt\u003d\"show after\" src\u003d\"images/user-guide/show_after.jpg\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":439,"author":{"gitId":"EvitanRelta"},"content":"    \u003cbr\u003e\u003ci\u003e\u003cb\u003eAbove:\u003c/b\u003e After entering \u003ccode\u003eshow\u003c/code\u003e command\u003c/i\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":440,"author":{"gitId":"EvitanRelta"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":441,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":442,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Tip:** After typing a long remark with `remark`, use `show` to view the full remark in the [result box](#guide-to-teachmesenpais-gui)","lastModifiedDate":"2023-04-06"},{"lineNumber":443,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":444,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":445,"author":{"gitId":"EvitanRelta"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-26"},{"lineNumber":446,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":447,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-26"},{"lineNumber":448,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":449,"author":{"gitId":"Bentimate"},"content":"### Find/filter students: `find`/`filter`","lastModifiedDate":"2023-03-31"},{"lineNumber":450,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":451,"author":{"gitId":"wendy0107"},"content":"Finds students based on a keyword in the parameter that you want.","lastModifiedDate":"2023-04-06"},{"lineNumber":452,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":453,"author":{"gitId":"wendy0107"},"content":"The `find` and `filter` commands allow you to match keywords or partial keywords with the entries, for example:","lastModifiedDate":"2023-04-05"},{"lineNumber":454,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":455,"author":{"gitId":"EvitanRelta"},"content":"\u003ch4 style\u003d\"color:Orange\"\u003eFind\u003c/h4\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":456,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":457,"author":{"gitId":"wendy0107"},"content":"`find n/Sh` displays the students with names which contain `Sh` (case-insensitive) in them, such as `Shaun` or `Amresh`. This applies to all parameters EXCEPT tags and modules, where you will have to enter the keywords in full.","lastModifiedDate":"2023-04-06"},{"lineNumber":458,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":459,"author":{"gitId":"EvitanRelta"},"content":"The `find` command allows you to zoom in on an entry that matches **all** your `PREFIX` and `KEYWORDS`","lastModifiedDate":"2023-04-08"},{"lineNumber":460,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":461,"author":{"gitId":"EvitanRelta"},"content":"\u003e Format: \\\\","lastModifiedDate":"2023-04-08"},{"lineNumber":462,"author":{"gitId":"EvitanRelta"},"content":"\u003e `find PREFIX... KEYWORDS...`","lastModifiedDate":"2023-04-08"},{"lineNumber":463,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":464,"author":{"gitId":"EvitanRelta"},"content":"\u003ch4 style\u003d\"color:Orange\"\u003eFilter\u003c/h4\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":465,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":466,"author":{"gitId":"EvitanRelta"},"content":"`filter` will also show you those who match with **at least one** of the criteria.","lastModifiedDate":"2023-04-08"},{"lineNumber":467,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":468,"author":{"gitId":"EvitanRelta"},"content":"\u003e Format: \\\\","lastModifiedDate":"2023-04-04"},{"lineNumber":469,"author":{"gitId":"wendy0107"},"content":"\u003e `filter PREFIX... KEYWORDS...`","lastModifiedDate":"2023-04-06"},{"lineNumber":470,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":471,"author":{"gitId":"wendy0107"},"content":"* `PREFIX` refers to the type of details such as name, address, email and so on.","lastModifiedDate":"2023-04-06"},{"lineNumber":472,"author":{"gitId":"wendy0107"},"content":"* Input the parameter like so:","lastModifiedDate":"2023-04-06"},{"lineNumber":473,"author":{"gitId":"Bentimate"},"content":"  * Name: `n/`","lastModifiedDate":"2023-03-29"},{"lineNumber":474,"author":{"gitId":"Bentimate"},"content":"  * Address: `a/`","lastModifiedDate":"2023-03-29"},{"lineNumber":475,"author":{"gitId":"Bentimate"},"content":"  * Email: `e/`","lastModifiedDate":"2023-03-29"},{"lineNumber":476,"author":{"gitId":"Bentimate"},"content":"  * Phone No.: `p/`","lastModifiedDate":"2023-03-29"},{"lineNumber":477,"author":{"gitId":"Bentimate"},"content":"  * Education: `edu/`","lastModifiedDate":"2023-03-29"},{"lineNumber":478,"author":{"gitId":"Sheemo"},"content":"  * Telegram Handle: `tele/`","lastModifiedDate":"2023-03-31"},{"lineNumber":479,"author":{"gitId":"Bentimate"},"content":"  * Remark: `r/`","lastModifiedDate":"2023-03-29"},{"lineNumber":480,"author":{"gitId":"Bentimate"},"content":"  * Tags: `t/`","lastModifiedDate":"2023-03-29"},{"lineNumber":481,"author":{"gitId":"EvitanRelta"},"content":"  * Modules: `m/`","lastModifiedDate":"2023-03-31"},{"lineNumber":482,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":483,"author":{"gitId":"wendy0107"},"content":"For more details and examples on prefixes, please refer to the [Prefix Summary](#prefix-summary)!","lastModifiedDate":"2023-04-06"},{"lineNumber":484,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":485,"author":{"gitId":"EvitanRelta"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e**:information_source: Tip:** ","lastModifiedDate":"2023-04-08"},{"lineNumber":486,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":487,"author":{"gitId":"EvitanRelta"},"content":"* Using `find` without any `PREFIX`s has the same outcome as `list`! TeachMeSenpai will simply display the list of all your students.","lastModifiedDate":"2023-04-08"},{"lineNumber":488,"author":{"gitId":"EvitanRelta"},"content":"* Using `filter` without any `PREFIX`s will result in an empty list!","lastModifiedDate":"2023-04-08"},{"lineNumber":489,"author":{"gitId":"EvitanRelta"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":490,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":491,"author":{"gitId":"EvitanRelta"},"content":"Examples:","lastModifiedDate":"2023-03-26"},{"lineNumber":492,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":493,"author":{"gitId":"Sheemo"},"content":"- `find n/Sh` will display the students named \"Shao Hong\" \u0026 \"Shaun\"","lastModifiedDate":"2023-03-31"},{"lineNumber":494,"author":{"gitId":"Bentimate"},"content":"- `find a/ pas` will display students who stay at places which names that contain `pas` such as `Pasir Ris`","lastModifiedDate":"2023-03-29"},{"lineNumber":495,"author":{"gitId":"Bentimate"},"content":"- `find t/ URGENT` will display students who have the exact tag `URGENT`","lastModifiedDate":"2023-03-29"},{"lineNumber":496,"author":{"gitId":"EvitanRelta"},"content":"- `find m/ CS2101` will display students who have the exact module `CS2101`","lastModifiedDate":"2023-03-31"},{"lineNumber":497,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":498,"author":{"gitId":"wendy0107"},"content":"**Using the following input** `find n/a m/CS2103T`:","lastModifiedDate":"2023-04-06"},{"lineNumber":499,"author":{"gitId":"EvitanRelta"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":500,"author":{"gitId":"EvitanRelta"},"content":"    \u003cimg alt\u003d\"find before\" src\u003d\"images/user-guide/find_before.jpg\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":501,"author":{"gitId":"EvitanRelta"},"content":"    \u003cbr\u003e\u003ci\u003e\u003cb\u003eAbove:\u003c/b\u003e Before entering \u003ccode\u003efind\u003c/code\u003e command\u003c/i\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":502,"author":{"gitId":"EvitanRelta"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":503,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":504,"author":{"gitId":"EvitanRelta"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":505,"author":{"gitId":"EvitanRelta"},"content":"    \u003cimg alt\u003d\"find after\" src\u003d\"images/user-guide/find_after.jpg\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":506,"author":{"gitId":"EvitanRelta"},"content":"    \u003cbr\u003e\u003ci\u003e\u003cb\u003eAbove:\u003c/b\u003e After entering \u003ccode\u003efind\u003c/code\u003e command\u003c/i\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":507,"author":{"gitId":"EvitanRelta"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":508,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":509,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:bulb: **Note:** Here find shows only `Alex Yeoh` as his entry matches all criteria.","lastModifiedDate":"2023-04-06"},{"lineNumber":510,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":511,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":512,"author":{"gitId":"EvitanRelta"},"content":"**Using the following input** `filter n/a m/CS2103T` :","lastModifiedDate":"2023-04-08"},{"lineNumber":513,"author":{"gitId":"Bentimate"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":514,"author":{"gitId":"Bentimate"},"content":"    \u003cimg alt\u003d\"filter before\" src\u003d\"images/user-guide/filter_before.jpg\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":515,"author":{"gitId":"Bentimate"},"content":"    \u003cbr\u003e\u003ci\u003e\u003cb\u003eAbove:\u003c/b\u003e Before entering \u003ccode\u003efilter\u003c/code\u003e command\u003c/i\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":516,"author":{"gitId":"Bentimate"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":517,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":518,"author":{"gitId":"Bentimate"},"content":"\u003cp align\u003dcenter\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":519,"author":{"gitId":"Bentimate"},"content":"    \u003cimg alt\u003d\"filter after\" src\u003d\"images/user-guide/filter_after.jpg\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":520,"author":{"gitId":"Bentimate"},"content":"    \u003cbr\u003e\u003ci\u003e\u003cb\u003eAbove:\u003c/b\u003e After entering \u003ccode\u003efilter\u003c/code\u003e command\u003c/i\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":521,"author":{"gitId":"Bentimate"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":522,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":523,"author":{"gitId":"EvitanRelta"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:bulb: **Note:** Here, other entries that only match some criteria like `Roy Balakrishnan`, who only matches `n/a`","lastModifiedDate":"2023-04-08"},{"lineNumber":524,"author":{"gitId":"Bentimate"},"content":"are shown too.","lastModifiedDate":"2023-03-31"},{"lineNumber":525,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":526,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":527,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Tip:** `find` followed by an `edit` will result in the full student list being shown! (similar to running a third command `list`)","lastModifiedDate":"2023-04-06"},{"lineNumber":528,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":529,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":530,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-04-06"},{"lineNumber":531,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":532,"author":{"gitId":"wendy0107"},"content":"---","lastModifiedDate":"2023-03-31"},{"lineNumber":533,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":534,"author":{"gitId":"wendy0107"},"content":"### Undo a previous command: `undo`","lastModifiedDate":"2023-03-31"},{"lineNumber":535,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":536,"author":{"gitId":"wendy0107"},"content":"Did you make a mistake with a command? Don\u0027t worry, simply `undo` it!","lastModifiedDate":"2023-03-31"},{"lineNumber":537,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":538,"author":{"gitId":"wendy0107"},"content":"You can `undo` as many times as required, as long as any of your previous commmands were **undoable**. All **undoable** commands are given below!","lastModifiedDate":"2023-04-06"},{"lineNumber":539,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":540,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:bulb: **Note:** You can only undo `add`, `edit`, `delete`, `remark`, `clear`, and `redo` commands as these are the only commands that change the data of your TeachMeSenpai app! Trying to `undo` without having ANY of the above commands prior will cause TeachMeSenpai to show you an error message","lastModifiedDate":"2023-04-06"},{"lineNumber":541,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":542,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":543,"author":{"gitId":"wendy0107"},"content":"\u003e Format: `undo`","lastModifiedDate":"2023-03-31"},{"lineNumber":544,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":545,"author":{"gitId":"wendy0107"},"content":"Examples:","lastModifiedDate":"2023-04-06"},{"lineNumber":546,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":547,"author":{"gitId":"wendy0107"},"content":"- `delete 2` followed by \u0027undo\u0027 will delete the 2nd student in the list, but `undo` will reverse this deletion and add the student back.","lastModifiedDate":"2023-04-06"},{"lineNumber":548,"author":{"gitId":"wendy0107"},"content":"- `add n/Wen Li p/88889999` followed by `undo` will add a student Wen Li, but `undo` will remove this entry from the list.","lastModifiedDate":"2023-04-06"},{"lineNumber":549,"author":{"gitId":"wendy0107"},"content":"- `list` followed by `undo` will cause TeachMeSenpai to give you an error message since `list` is not **undoable**","lastModifiedDate":"2023-04-06"},{"lineNumber":550,"author":{"gitId":"wendy0107"},"content":"- `delete 2` followed by `list` then `undo` will reverse the deletion done before `list`!","lastModifiedDate":"2023-04-06"},{"lineNumber":551,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":552,"author":{"gitId":"EvitanRelta"},"content":"Example: `delete 1 4` followed by `undo`.","lastModifiedDate":"2023-04-04"},{"lineNumber":553,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":554,"author":{"gitId":"wendy0107"},"content":"### Redo a previous `undo`: `redo`","lastModifiedDate":"2023-03-31"},{"lineNumber":555,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":556,"author":{"gitId":"wendy0107"},"content":"Did you `undo` a command on accident? Fret not, you may use `redo` to reverse the changes done by `undo`!","lastModifiedDate":"2023-03-31"},{"lineNumber":557,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":558,"author":{"gitId":"EvitanRelta"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:bulb: **Note:** You can only redo an `undo` command. Trying to `redo` without ANY prior `undo` command will simply cause TeachMeSenpai to give you an error message.","lastModifiedDate":"2023-04-03"},{"lineNumber":559,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":560,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":561,"author":{"gitId":"wendy0107"},"content":"\u003eFormat: `redo`","lastModifiedDate":"2023-03-31"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":563,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-04-06"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":565,"author":{"gitId":"wendy0107"},"content":"- `delete 2`, followed by `undo`, then `redo` has the same effect as `delete 2`","lastModifiedDate":"2023-04-06"},{"lineNumber":566,"author":{"gitId":"wendy0107"},"content":"- `list` followed by `redo` will result in an error message from TeachMeSenpai.","lastModifiedDate":"2023-04-06"},{"lineNumber":567,"author":{"gitId":"wendy0107"},"content":"- `delete` 2 followed by `redo` will result in an error message from TeachMeSenpai.","lastModifiedDate":"2023-04-06"},{"lineNumber":568,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":569,"author":{"gitId":"Bentimate"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":570,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":571,"author":{"gitId":"Bentimate"},"content":"---","lastModifiedDate":"2023-03-29"},{"lineNumber":572,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":573,"author":{"gitId":"wendy0107"},"content":"### Clearing all entries: `clear`","lastModifiedDate":"2023-03-31"},{"lineNumber":574,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":575,"author":{"gitId":"wendy0107"},"content":"Need to clear all your entries? Simply use `clear` to help you delete all your entries at once!","lastModifiedDate":"2023-03-31"},{"lineNumber":576,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":577,"author":{"gitId":"wendy0107"},"content":"\u003eFormat: `clear`","lastModifiedDate":"2023-03-31"},{"lineNumber":578,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":579,"author":{"gitId":"EvitanRelta"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:bulb: **Note:** Don\u0027t worry if you cleared all your entries by accident, simply use `undo` to reverse the change! Do note that if you exit the app immediately after `clear`, using `undo` upon relaunching the app can\u0027t retrieve your data anymore :(","lastModifiedDate":"2023-04-03"},{"lineNumber":580,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":581,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":582,"author":{"gitId":"EvitanRelta"},"content":"### Saving the data","lastModifiedDate":"2023-03-06"},{"lineNumber":583,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":584,"author":{"gitId":"EvitanRelta"},"content":"TeachMeSenpai data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually 🙂","lastModifiedDate":"2023-03-06"},{"lineNumber":585,"author":{"gitId":"wendy0107"},"content":"The file containing your data can be found in the same folder `teachmesenpai.jar` is found in on your computer.","lastModifiedDate":"2023-04-06"},{"lineNumber":586,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":587,"author":{"gitId":"EvitanRelta"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-26"},{"lineNumber":588,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":589,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-26"},{"lineNumber":590,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":591,"author":{"gitId":"EvitanRelta"},"content":"### Editing the data file","lastModifiedDate":"2023-03-06"},{"lineNumber":592,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":593,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-danger\"\u003e **:exclamation: Warning:** Do not attempt to edit the data file unless you are an advanced user and understand some basic computing terminlogies.","lastModifiedDate":"2023-04-06"},{"lineNumber":594,"author":{"gitId":"wendy0107"},"content":"If your changes to the data file makes its format invalid, TeachMeSenpai will discard all data and start with an empty data file the next time you launch it.","lastModifiedDate":"2023-04-06"},{"lineNumber":595,"author":{"gitId":"wendy0107"},"content":"If you\u0027d still like to edit the data file directly, please proceed to [Appendix: Editing the data file](#appendix-editing-the-data-file).","lastModifiedDate":"2023-04-06"},{"lineNumber":596,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":597,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":598,"author":{"gitId":"EvitanRelta"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-26"},{"lineNumber":599,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":600,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-26"},{"lineNumber":601,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":602,"author":{"gitId":"wendy0107"},"content":"## Glossary","lastModifiedDate":"2023-04-05"},{"lineNumber":603,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":604,"author":{"gitId":"wendy0107"},"content":"| Term                           | Details                                                                                                         | Examples                                                                                                                                                                                                                                            |","lastModifiedDate":"2023-04-05"},{"lineNumber":605,"author":{"gitId":"wendy0107"},"content":"|--------------------------------|-----------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-06"},{"lineNumber":606,"author":{"gitId":"wendy0107"},"content":"| Alphanumeric                   | Characters that are either a numbers or letters.                                                                | 1, 2, 3, a, b, c are alphanumeric                                                                                                                                                                                                                   |","lastModifiedDate":"2023-04-05"},{"lineNumber":607,"author":{"gitId":"wendy0107"},"content":"| Command                        | Instructions for TeachMeSenpai to execute/carry out.                                                            | [Features](#features) are commands TeachMeSenpai can execute. For example, [`add`](#adding-a-student-add) is a command!                                                                                                                             |","lastModifiedDate":"2023-04-06"},{"lineNumber":608,"author":{"gitId":"wendy0107"},"content":"| Command Line Interface (CLI)   | A Command Line Interface allows users to use text as command to be executed by an application.                  | The [command line](#guide-to-teachmesenpais-gui) acts as a CLI in this case.                                                                                                                                                                        |","lastModifiedDate":"2023-04-05"},{"lineNumber":609,"author":{"gitId":"wendy0107"},"content":"| Graphical User Interface (GUI) | A Graphical User Interface allows users to interace with an application through graphics like icons, menus etc. | TeachMeSenpai acts as a GUI in this case.                                                                                                                                                                                                           |","lastModifiedDate":"2023-04-05"},{"lineNumber":610,"author":{"gitId":"wendy0107"},"content":"| Index                          | The number displayed next to the student entry\u0027s name after `list` is used.                                     | 1. Alex Yeoh, 1 would be the index for Alex Yeoh.                                                                                                                                                                                                   |","lastModifiedDate":"2023-04-05"},{"lineNumber":611,"author":{"gitId":"wendy0107"},"content":"| Integer                        | An integer is a whole number.                                                                                   | 1, 10, 100 are integers. 1.5, 0.00 are not integers!                                                                                                                                                                                                |","lastModifiedDate":"2023-04-05"},{"lineNumber":612,"author":{"gitId":"wendy0107"},"content":"| Keyword                        | The word you want to [find/filter](#findfilter-students-findfilter) by.                                         | A keyword for a student named \"Shao Hong\" could be \"Shao Hong\"                                                                                                                                                                                      |","lastModifiedDate":"2023-04-06"},{"lineNumber":613,"author":{"gitId":"wendy0107"},"content":"| Operating System               | Also known as (OS) of the computer, managers the software and hardware on the computer.                         | -                                                                                                                                                                                                                                                   |","lastModifiedDate":"2023-04-06"},{"lineNumber":614,"author":{"gitId":"wendy0107"},"content":"| Parameter                      | Parameters are information TeachMeSenpai requires you to fill in.                                               | `STUDENT_NAME`, `PHONE` are parameters you have to fill in. Relevant information to fill in could be Shaun and 999 respectively. \u003cbr/\u003e You may refer to the [Parameter descriptions](#parameter-descriptions) for more specifications and examples. |","lastModifiedDate":"2023-04-06"},{"lineNumber":615,"author":{"gitId":"wendy0107"},"content":"| Partial keyword                | Part of the word you want to [find/filter](#findfilter-students-findfilter) by.                                 | A partial keyword for a student named \"Shao Hong\" could be \"Sh\", or \"on\" etc.                                                                                                                                                                       |","lastModifiedDate":"2023-04-06"},{"lineNumber":616,"author":{"gitId":"wendy0107"},"content":"| Prefix                         | Indicators for commands. Always ends with a slash `/` and comes before a parameter.                             | `n/` is the prefix for parameter `STUDENT_NAME` which could be a name like Shaun. \u003cbr/\u003e You may refer to [Prefix Summary](#prefix-summary) to see all the prefixes used in TeachMeSenpai.                                                           |","lastModifiedDate":"2023-04-05"},{"lineNumber":617,"author":{"gitId":"wendy0107"},"content":"| Remark                         | Notes or things to take note of for a student.                                                                  | \"Not good in Japanese\", \"Has not submitted MC\" etc.                                                                                                                                                                                                 |","lastModifiedDate":"2023-04-05"},{"lineNumber":618,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":619,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":620,"author":{"gitId":"wendy0107"},"content":"## Command summary","lastModifiedDate":"2023-04-06"},{"lineNumber":621,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":622,"author":{"gitId":"EvitanRelta"},"content":"| Action | Format, Examples                                                                                                                                                                                                                                                  |","lastModifiedDate":"2023-03-06"},{"lineNumber":623,"author":{"gitId":"wendy0107"},"content":"|--------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-06"},{"lineNumber":624,"author":{"gitId":"wendy0107"},"content":"| Add    | `add n/STUDENT_NAME [a/ADDRESS] [p/PHONE] [e/EMAIL] [edu/EDUCATION_LEVEL] [tele/TELEGRAM] [r/REMARK] [t/TAG]... [m/MODULE]...`\u003cbr\u003eeg. `add n/Shaun a/123 NUS Street e/shaun123@gmail.com edu/Year 1 r/Good in Japanese t/active t/hardworking m/CS2103T m/CS2101` |","lastModifiedDate":"2023-04-06"},{"lineNumber":625,"author":{"gitId":"wendy0107"},"content":"| Clear  | `clear`                                                                                                                                                                                                                                                           |","lastModifiedDate":"2023-04-02"},{"lineNumber":626,"author":{"gitId":"Sheemo"},"content":"| Delete | `delete INDEX [INDEX]...`\u003cbr\u003eeg. `delete 3` or `delete 1 2 3 4`                                                                                                                                                                                                   |","lastModifiedDate":"2023-03-31"},{"lineNumber":627,"author":{"gitId":"wendy0107"},"content":"| Edit   | `edit INDEX [n/STUDENT_NAME] [a/ADDRESS] [p/PHONE] [e/EMAIL] [edu/EDUCATION_LEVEL] [tele/TELEGRAM] [t/TAG]... [m/MODULE]...` \u003cbr/\u003eeg. `edit 1 n/Wen Li edu/Year 2`                                                                                                |","lastModifiedDate":"2023-04-06"},{"lineNumber":628,"author":{"gitId":"wendy0107"},"content":"| Exit   | `exit`                                                                                                                                                                                                                                                            |","lastModifiedDate":"2023-04-02"},{"lineNumber":629,"author":{"gitId":"wendy0107"},"content":"| Find   | `find PREFIX/KEYWORD1 [PREFIX/KEYWORD2]` \u003cbr/\u003eeg. `find n/Sh` \u003cbr/\u003e                                                                                                                                                                                               |                                                                                                                                                                                           |","lastModifiedDate":"2023-04-02"},{"lineNumber":630,"author":{"gitId":"wendy0107"},"content":"| List   | `list`                                                                                                                                                                                                                                                            |","lastModifiedDate":"2023-04-02"},{"lineNumber":631,"author":{"gitId":"wendy0107"},"content":"| Redo   | `redo`                                                                                                                                                                                                                                                            |","lastModifiedDate":"2023-04-02"},{"lineNumber":632,"author":{"gitId":"wendy0107"},"content":"| Remark | `remark INDEX [r/REMARK]` \u003cbr/\u003eeg. `remark 2 r/Not good in Japanese`                                                                                                                                                                                              |","lastModifiedDate":"2023-04-02"},{"lineNumber":633,"author":{"gitId":"wendy0107"},"content":"| Undo   | `undo`                                                                                                                                                                                                                                                            |","lastModifiedDate":"2023-04-02"},{"lineNumber":634,"author":{"gitId":"wendy0107"},"content":"| Show   | `show INDEX` \u003cbr/\u003eeg. `show 1`                                                                                                                                                                                                                                    |","lastModifiedDate":"2023-03-29"},{"lineNumber":635,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":636,"author":{"gitId":"EvitanRelta"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-26"},{"lineNumber":637,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":638,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-26"},{"lineNumber":639,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":640,"author":{"gitId":"wendy0107"},"content":"## Prefix summary","lastModifiedDate":"2023-04-06"},{"lineNumber":641,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":642,"author":{"gitId":"EvitanRelta"},"content":"| Prefix | Meaning                                 | Example                               |","lastModifiedDate":"2023-03-26"},{"lineNumber":643,"author":{"gitId":"Sheemo"},"content":"|--------|-----------------------------------------|---------------------------------------|","lastModifiedDate":"2023-03-31"},{"lineNumber":644,"author":{"gitId":"EvitanRelta"},"content":"| n/     | Name of student                         | `n/Shao Hong`                         |","lastModifiedDate":"2023-03-26"},{"lineNumber":645,"author":{"gitId":"EvitanRelta"},"content":"| p/     | Phone number of student                 | `p/81234567`                          |","lastModifiedDate":"2023-03-26"},{"lineNumber":646,"author":{"gitId":"EvitanRelta"},"content":"| e/     | Email of student                        | `e/e07123456@u.edu.sg`                |","lastModifiedDate":"2023-03-26"},{"lineNumber":647,"author":{"gitId":"EvitanRelta"},"content":"| a/     | Address of student                      | `a/16 Bukit Timah Road, S156213`      |","lastModifiedDate":"2023-03-26"},{"lineNumber":648,"author":{"gitId":"EvitanRelta"},"content":"| edu/   | Education level of student              | `edu/P6`                              |","lastModifiedDate":"2023-03-26"},{"lineNumber":649,"author":{"gitId":"EvitanRelta"},"content":"| r/     | Remark for student                      | `r/Good in German`                    |","lastModifiedDate":"2023-03-26"},{"lineNumber":650,"author":{"gitId":"wendy0107"},"content":"| t/     | Tag of student                          | `t/active` or `t/hardworking ...`     |","lastModifiedDate":"2023-04-02"},{"lineNumber":651,"author":{"gitId":"EvitanRelta"},"content":"| m/     | Module that the student is being taught | `m/CS2101` or `m/CS2101 m/CS4243 ...` |","lastModifiedDate":"2023-03-31"},{"lineNumber":652,"author":{"gitId":"Sheemo"},"content":"| tele/  | Telegram handle of the student          | `tele/@chuuchuu` or `tele/@sO_m4nY`   |","lastModifiedDate":"2023-03-31"},{"lineNumber":653,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":654,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":655,"author":{"gitId":"EvitanRelta"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-03-26"},{"lineNumber":656,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":657,"author":{"gitId":"wendy0107"},"content":"---","lastModifiedDate":"2023-04-06"},{"lineNumber":658,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":659,"author":{"gitId":"wendy0107"},"content":"## Appendix: Editing the data file","lastModifiedDate":"2023-04-06"},{"lineNumber":660,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":661,"author":{"gitId":"wendy0107"},"content":"The default data file contains the sample data from TeachMeSenpai. To edit the data, simply follow the format for each parameter you\u0027d like to edit.","lastModifiedDate":"2023-04-06"},{"lineNumber":662,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":663,"author":{"gitId":"wendy0107"},"content":"The code below is a direct quote from the default data file.","lastModifiedDate":"2023-04-06"},{"lineNumber":664,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":665,"author":{"gitId":"wendy0107"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":666,"author":{"gitId":"wendy0107"},"content":"{","lastModifiedDate":"2023-04-06"},{"lineNumber":667,"author":{"gitId":"wendy0107"},"content":"  \"persons\" : [ {","lastModifiedDate":"2023-04-06"},{"lineNumber":668,"author":{"gitId":"wendy0107"},"content":"    \"name\" : \"Alex Yeoh\",","lastModifiedDate":"2023-04-06"},{"lineNumber":669,"author":{"gitId":"wendy0107"},"content":"    \"phone\" : \"87438807\",","lastModifiedDate":"2023-04-06"},{"lineNumber":670,"author":{"gitId":"wendy0107"},"content":"    \"email\" : \"alexyeoh@example.com\",","lastModifiedDate":"2023-04-06"},{"lineNumber":671,"author":{"gitId":"wendy0107"},"content":"    \"address\" : \"Blk 30 Geylang Street 29, #06-40\",","lastModifiedDate":"2023-04-06"},{"lineNumber":672,"author":{"gitId":"wendy0107"},"content":"    \"remark\" : \"Hasn\u0027t submitted tutorial worksheet for Week 10\",","lastModifiedDate":"2023-04-06"},{"lineNumber":673,"author":{"gitId":"wendy0107"},"content":"    \"education\" : \"P6\",","lastModifiedDate":"2023-04-06"},{"lineNumber":674,"author":{"gitId":"wendy0107"},"content":"    \"telegram\" : \"@alexyeoh30\",","lastModifiedDate":"2023-04-06"},{"lineNumber":675,"author":{"gitId":"wendy0107"},"content":"    \"modules\" : [ \"CS2103T\" ],","lastModifiedDate":"2023-04-06"},{"lineNumber":676,"author":{"gitId":"wendy0107"},"content":"    \"tagged\" : [ \"CS2101\" ]","lastModifiedDate":"2023-04-06"},{"lineNumber":677,"author":{"gitId":"wendy0107"},"content":"  }, {","lastModifiedDate":"2023-04-06"},{"lineNumber":678,"author":{"gitId":"wendy0107"},"content":"    \"name\" : \"Bernice Yu\",","lastModifiedDate":"2023-04-06"},{"lineNumber":679,"author":{"gitId":"wendy0107"},"content":"    \"phone\" : \"99272758\",","lastModifiedDate":"2023-04-06"},{"lineNumber":680,"author":{"gitId":"wendy0107"},"content":"    \"email\" : \"berniceyu@example.com\",","lastModifiedDate":"2023-04-06"},{"lineNumber":681,"author":{"gitId":"wendy0107"},"content":"    \"address\" : \"Blk 30 Lorong 3 Serangoon Gardens, #07-18\",","lastModifiedDate":"2023-04-06"},{"lineNumber":682,"author":{"gitId":"wendy0107"},"content":"    \"remark\" : \"Submitted an MC for tutorial on Week 8\",","lastModifiedDate":"2023-04-06"},{"lineNumber":683,"author":{"gitId":"wendy0107"},"content":"    \"education\" : \"P1\",","lastModifiedDate":"2023-04-06"},{"lineNumber":684,"author":{"gitId":"wendy0107"},"content":"    \"telegram\" : \"@berniceee30\",","lastModifiedDate":"2023-04-06"},{"lineNumber":685,"author":{"gitId":"wendy0107"},"content":"    \"modules\" : [ \"CS2030\" ],","lastModifiedDate":"2023-04-06"},{"lineNumber":686,"author":{"gitId":"wendy0107"},"content":"    \"tagged\" : [ \"colleagues\", \"friends\" ]","lastModifiedDate":"2023-04-06"},{"lineNumber":687,"author":{"gitId":"wendy0107"},"content":"  }, {","lastModifiedDate":"2023-04-06"},{"lineNumber":688,"author":{"gitId":"wendy0107"},"content":"    \"name\" : \"Charlotte Oliveiro\",","lastModifiedDate":"2023-04-06"},{"lineNumber":689,"author":{"gitId":"wendy0107"},"content":"    \"phone\" : \"93210283\",","lastModifiedDate":"2023-04-06"},{"lineNumber":690,"author":{"gitId":"wendy0107"},"content":"    \"email\" : \"charlotte@example.com\",","lastModifiedDate":"2023-04-06"},{"lineNumber":691,"author":{"gitId":"wendy0107"},"content":"    \"address\" : \"Blk 11 Ang Mo Kio Street 74, #11-04\",","lastModifiedDate":"2023-04-06"},{"lineNumber":692,"author":{"gitId":"wendy0107"},"content":"    \"remark\" : \"Remarks can take in multiple lines of input \\nsee!\",","lastModifiedDate":"2023-04-06"},{"lineNumber":693,"author":{"gitId":"wendy0107"},"content":"    \"education\" : \"Sec 1\",","lastModifiedDate":"2023-04-06"},{"lineNumber":694,"author":{"gitId":"wendy0107"},"content":"    \"telegram\" : \"@charlotte_07\",","lastModifiedDate":"2023-04-06"},{"lineNumber":695,"author":{"gitId":"wendy0107"},"content":"    \"modules\" : [ \"CS2040S\", \"CS2109\" ],","lastModifiedDate":"2023-04-06"},{"lineNumber":696,"author":{"gitId":"wendy0107"},"content":"    \"tagged\" : [ \"neighbours\" ]","lastModifiedDate":"2023-04-06"},{"lineNumber":697,"author":{"gitId":"wendy0107"},"content":"  }, {","lastModifiedDate":"2023-04-06"},{"lineNumber":698,"author":{"gitId":"wendy0107"},"content":"    \"name\" : \"David Li\",","lastModifiedDate":"2023-04-06"},{"lineNumber":699,"author":{"gitId":"wendy0107"},"content":"    \"phone\" : \"91031282\",","lastModifiedDate":"2023-04-06"},{"lineNumber":700,"author":{"gitId":"wendy0107"},"content":"    \"email\" : \"lidavid@example.com\",","lastModifiedDate":"2023-04-06"},{"lineNumber":701,"author":{"gitId":"wendy0107"},"content":"    \"address\" : \"Blk 436 Serangoon Gardens Street 26, #16-43\",","lastModifiedDate":"2023-04-06"},{"lineNumber":702,"author":{"gitId":"wendy0107"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2023-04-06"},{"lineNumber":703,"author":{"gitId":"wendy0107"},"content":"    \"education\" : \"Sec 4\",","lastModifiedDate":"2023-04-06"},{"lineNumber":704,"author":{"gitId":"wendy0107"},"content":"    \"telegram\" : \"@david_liiii\",","lastModifiedDate":"2023-04-06"},{"lineNumber":705,"author":{"gitId":"wendy0107"},"content":"    \"modules\" : [ \"CS2107\" ],","lastModifiedDate":"2023-04-06"},{"lineNumber":706,"author":{"gitId":"wendy0107"},"content":"    \"tagged\" : [ \"family\" ]","lastModifiedDate":"2023-04-06"},{"lineNumber":707,"author":{"gitId":"wendy0107"},"content":"  }, {","lastModifiedDate":"2023-04-06"},{"lineNumber":708,"author":{"gitId":"wendy0107"},"content":"    \"name\" : \"Irfan Ibrahim\",","lastModifiedDate":"2023-04-06"},{"lineNumber":709,"author":{"gitId":"wendy0107"},"content":"    \"phone\" : \"92492021\",","lastModifiedDate":"2023-04-06"},{"lineNumber":710,"author":{"gitId":"wendy0107"},"content":"    \"email\" : \"irfan@example.com\",","lastModifiedDate":"2023-04-06"},{"lineNumber":711,"author":{"gitId":"wendy0107"},"content":"    \"address\" : \"Blk 47 Tampines Street 20, #17-35\",","lastModifiedDate":"2023-04-06"},{"lineNumber":712,"author":{"gitId":"wendy0107"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2023-04-06"},{"lineNumber":713,"author":{"gitId":"wendy0107"},"content":"    \"education\" : \"P5\",","lastModifiedDate":"2023-04-06"},{"lineNumber":714,"author":{"gitId":"wendy0107"},"content":"    \"telegram\" : \"@irfanlove\",","lastModifiedDate":"2023-04-06"},{"lineNumber":715,"author":{"gitId":"wendy0107"},"content":"    \"modules\" : [ \"CS2040S\", \"CS2105\" ],","lastModifiedDate":"2023-04-06"},{"lineNumber":716,"author":{"gitId":"wendy0107"},"content":"    \"tagged\" : [ \"classmates\" ]","lastModifiedDate":"2023-04-06"},{"lineNumber":717,"author":{"gitId":"wendy0107"},"content":"  }, {","lastModifiedDate":"2023-04-06"},{"lineNumber":718,"author":{"gitId":"wendy0107"},"content":"    \"name\" : \"Roy Balakrishnan\",","lastModifiedDate":"2023-04-06"},{"lineNumber":719,"author":{"gitId":"wendy0107"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2023-04-06"},{"lineNumber":720,"author":{"gitId":"wendy0107"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2023-04-06"},{"lineNumber":721,"author":{"gitId":"wendy0107"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2023-04-06"},{"lineNumber":722,"author":{"gitId":"wendy0107"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2023-04-06"},{"lineNumber":723,"author":{"gitId":"wendy0107"},"content":"    \"education\" : \"P3\",","lastModifiedDate":"2023-04-06"},{"lineNumber":724,"author":{"gitId":"wendy0107"},"content":"    \"telegram\" : \"@royyy123\",","lastModifiedDate":"2023-04-06"},{"lineNumber":725,"author":{"gitId":"wendy0107"},"content":"    \"modules\" : [ \"CS4243\" ],","lastModifiedDate":"2023-04-06"},{"lineNumber":726,"author":{"gitId":"wendy0107"},"content":"    \"tagged\" : [ \"colleagues\" ]","lastModifiedDate":"2023-04-06"},{"lineNumber":727,"author":{"gitId":"wendy0107"},"content":"  } ]","lastModifiedDate":"2023-04-06"},{"lineNumber":728,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":729,"author":{"gitId":"wendy0107"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":730,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":731,"author":{"gitId":"wendy0107"},"content":"`persons` is an array containing every student entry as an element. Each element is enclosed in curly braces `{}`","lastModifiedDate":"2023-04-06"},{"lineNumber":732,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":733,"author":{"gitId":"wendy0107"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e**:exclamation: Warning:** The values you input should adhere to the parameter requirements.","lastModifiedDate":"2023-04-06"},{"lineNumber":734,"author":{"gitId":"wendy0107"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":735,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":736,"author":{"gitId":"wendy0107"},"content":"The parameters in the braces indicate which parameter in the [Parameter descriptions](#parameter-descriptions) the input should adhere to.","lastModifiedDate":"2023-04-06"},{"lineNumber":737,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":738,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":739,"author":{"gitId":"wendy0107"},"content":"- `name`: Represents the student\u0027s name. If empty, input`\"\"`. (STUDENT_NAME)","lastModifiedDate":"2023-04-06"},{"lineNumber":740,"author":{"gitId":"wendy0107"},"content":"- `phone`: Represents the student\u0027s phone number. If empty, input`\"\"`. (PHONE)","lastModifiedDate":"2023-04-06"},{"lineNumber":741,"author":{"gitId":"wendy0107"},"content":"- `email`: Represents the student\u0027s email. If empty, input`\"\"`. (EMAIL)","lastModifiedDate":"2023-04-06"},{"lineNumber":742,"author":{"gitId":"wendy0107"},"content":"- `address`: Represents the student\u0027s address. If empty, input`\"\"`. (ADDRESS)","lastModifiedDate":"2023-04-06"},{"lineNumber":743,"author":{"gitId":"wendy0107"},"content":"- `remark`: Represents the remark or notes for a student and can contain the newline character `\\n`. If empty, input`\"\"`. (REMARK)","lastModifiedDate":"2023-04-06"},{"lineNumber":744,"author":{"gitId":"wendy0107"},"content":"- `education`: Represents the education level of a student. If empty, input`\"\"`. (EDUCATION_LEVEL)","lastModifiedDate":"2023-04-06"},{"lineNumber":745,"author":{"gitId":"wendy0107"},"content":"- `telegram`: Represents the telegram handle of a student. If empty, input`\"\"`. (TELEGRAM)","lastModifiedDate":"2023-04-06"},{"lineNumber":746,"author":{"gitId":"wendy0107"},"content":"- `modules`: Represents an array of modules the student takes. If empty, input`[ ]`. (MODULE)","lastModifiedDate":"2023-04-06"},{"lineNumber":747,"author":{"gitId":"wendy0107"},"content":"- `tagged`: Represents an array of tags the student is labelled with. If empty, input`[ ]`. (TAG)","lastModifiedDate":"2023-04-06"},{"lineNumber":748,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":749,"author":{"gitId":"wendy0107"},"content":"After making the desired changes, simply save the data file, and re-launch TeachMeSenpai again.","lastModifiedDate":"2023-04-06"},{"lineNumber":750,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":751,"author":{"gitId":"wendy0107"},"content":"[↑ Back to top](#table-of-contents)","lastModifiedDate":"2023-04-06"},{"lineNumber":752,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":753,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"Sheemo":14,"wendy0107":426,"Bentimate":47,"EvitanRelta":233,"-":33}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"@startuml","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"!include style.puml","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"participant \"AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"participant \":AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"end box","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"participant \":VersionedAddressBook\" as VersionedAddressBook MODEL_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"end box","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"[-\u003e LogicManager : execute(\"add n/Alice edu/Year 1\")","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"activate LogicManager","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add n/Alice edu/Year 1\")","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"create AddCommandParser","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"activate AddCommandParser","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"AddressBookParser -\u003e AddCommandParser : parse(\"n/Alice edu/Year 1\")","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"activate AddCommandParser","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"create AddCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"activate AddCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"AddCommand --\u003e AddCommandParser","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"deactivate AddCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"destroy AddCommandParser","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"activate AddCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"AddCommand -\u003e ModelManager : addPerson(toAdd)","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"activate ModelManager","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"ModelManager -\u003e VersionedAddressBook : addPerson(person)","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"activate VersionedAddressBook","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"VersionedAddressBook --\u003e ModelManager","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"deactivate VersionedAddressBook","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"ModelManager --\u003e AddCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"deactivate ModelManager","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"AddCommand --\u003e LogicManager: result","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"deactivate AddCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"AddCommand -[hidden]-\u003e LogicManager: result","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"destroy AddCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"@enduml","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"wendy0107":67}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"AddressBook *--right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"UniqueTagList -[hidden]down- Module","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"UniqueTagList -[hidden]down- Tag","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"Tag -[hidden]right- Module","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"UniqueTagList -down-\u003e \"*\" Module","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"UniquePersonList -right-\u003e Student","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"Student *-up-\u003e \"*\" Tag","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"EvitanRelta"},"content":"Student *-up-\u003e \"*\" Module","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"EvitanRelta"},"content":"Student -[hidden]right-\u003e Module","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"Student -[hidden]up-\u003e Module","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e Name","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e Phone","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e Email","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e Address","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e Telegram","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e Education","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e Remark","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wendy0107":11,"EvitanRelta":6,"-":15}},{"path":"docs/diagrams/DeleteSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"!include style.puml","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"activate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"create DeleteCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"create DeleteCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"activate DeleteCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"deactivate DeleteCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"activate DeleteCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"activate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"deactivate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"deactivate DeleteCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"DeleteCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"destroy DeleteCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wendy0107":63}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"participant \":EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"participant \":EditPersonDescriptor\" as Descriptor LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"[-\u003e LogicManager : execute(\"edit 1 n/Bob edu/Primary 5\")","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"activate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit 1 n/Bob edu/Primary 5\")","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"create EditCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"AddressBookParser -\u003e EditCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"activate EditCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"EditCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"deactivate EditCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"AddressBookParser -\u003e EditCommandParser : parse(\"1 n/Bob edu/Primary 5\")","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"activate EditCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"create EditCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"EditCommandParser -\u003e EditCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"activate EditCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"create Descriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"EditCommand -\u003e Descriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"activate Descriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"Descriptor --\u003e EditCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"deactivate Descriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"EditCommand --\u003e EditCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"deactivate EditCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"EditCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"deactivate EditCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"EditCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"destroy EditCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"LogicManager -\u003e EditCommand : execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"activate EditCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"EditCommand -\u003e Descriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"activate Descriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"Descriptor --\u003e EditCommand : edited","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"deactivate Descriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"Descriptor -[hidden]-\u003e EditCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"destroy Descriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"EditCommand -\u003e ModelManager : setPerson(target, editedPerson)","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"activate ModelManager","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"\u0027ADD MORE HERE","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"ModelManager -\u003e AddressBook : setPerson(target, editedPerson)","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"activate AddressBook","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"AddressBook --\u003e ModelManager","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"deactivate AddressBook","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"ModelManager --\u003e EditCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"deactivate ModelManager","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"EditCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"deactivate EditCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"EditCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"wendy0107"},"content":"destroy EditCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"wendy0107"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"wendy0107"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"wendy0107":80}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"!include style.puml","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"participant \"f:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"participant \"p:MultiFieldContainsKeywordsPredicate\" as Predicate MODEL_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"[-\u003e LogicManager : execute(\"find Alice\")","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"activate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find Alice\")","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"create FindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"activate FindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"deactivate FindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\"find Alice\")","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"activate FindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"create Predicate","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"FindCommandParser -\u003e Predicate","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"activate Predicate","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"Predicate --\u003e FindCommandParser : predicate","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"deactivate Predicate","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"create FindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"activate FindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"FindCommand --\u003e FindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"deactivate FindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"FindCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"deactivate  FindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"FindCommandParser -[hidden]\u003e AddressBookParser : f","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"destroy FindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"AddressBookParser --\u003e LogicManager :","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"activate FindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"activate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"deactivate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"deactivate FindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"FindCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"destroy FindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wendy0107":71}},{"path":"docs/diagrams/ListSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"!include style.puml","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"participant \":ListCommand\" as ListCommand LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"[-\u003e LogicManager : execute(\"list\")","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"activate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"list\")","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"create ListCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"AddressBookParser -\u003e ListCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"activate ListCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"ListCommand --\u003e AddressBookParser :","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"deactivate ListCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"AddressBookParser --\u003e LogicManager :","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"LogicManager -\u003e ListCommand : execute(model)","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"activate ListCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"ListCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"activate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"Model --\u003e ListCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"deactivate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"ListCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"deactivate ListCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"ListCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"destroy ListCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"ListCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wendy0107":49}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"Class VersionedAddressBook","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"Class Student","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"Class Education","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"Class Module","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"Class Telegram","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"Class Remark","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"VersionedAddressBook .up.|\u003e AddressBook","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"ModelManager -left-\u003e \"1\" VersionedAddressBook","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"VersionedAddressBook -[hidden]up-\u003e ModelManager","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"VersionedAddressBook -[hidden]right-\u003e AddressBook","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"UniquePersonList --\u003e \"~* all\" Student","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e Name","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e Phone","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e Email","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e Address","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e Education","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e Telegram","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e Remark","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e \"*\" Tag","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"EvitanRelta"},"content":"Student *--\u003e \"*\" Module","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"ModelManager --\u003e\"~* filtered\" Student","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wendy0107":19,"EvitanRelta":2,"-":41}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"Class JsonAdaptedModule","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"EvitanRelta"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedModule","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"EvitanRelta"},"content":"JsonAdaptedModule -[hidden]right-\u003e JsonAdaptedTag","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EvitanRelta":3,"-":42}},{"path":"docs/diagrams/StudentClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"@startuml","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"!include style.puml","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"Student *-right-\u003e \"*\" Tag","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"Student *-left-\u003e \"*\" Module","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e \"1\" Name","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e \"0..1\" Phone","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e \"0..1\" Email","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e \"0..1\" Address","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e \"0..1\" Education","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e \"0..1\" Telegram","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"Student *--\u003e \"0..1\" Remark","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"@enduml","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"wendy0107":17,"EvitanRelta":1}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"Class ResultPersonCard","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"Class ResultPersonListPanel","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"MainWindow *-down-\u003e \"1\" ResultPersonListPanel","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"ResultPersonListPanel -down-\u003e \"0..1\" ResultPersonCard","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"ResultPersonCard --|\u003e UiPart","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"ResultPersonListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"ResultPersonCard ..\u003e Model","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wendy0107":7,"-":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"title: TeachMeSenpai","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"**TeachMeSenpai is a desktop application for teaching assistants to manage their students\u0027 details and monitor their progress.** While it has a GUI (Graphical User Interface), most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"* If you are interested in using TeachMeSenpai, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"* If you are interested about developing TeachMeSenpai, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wendy0107":4,"-":15}},{"path":"docs/team/alextang809.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"EvitanRelta"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dalextang809\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"EvitanRelta"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"EvitanRelta"},"content":"  * User Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"EvitanRelta"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"EvitanRelta"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"* **Community**:","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"EvitanRelta"},"content":"  * Responded to forum posts ([\\#42]())","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"  * Reported bugs found in other team\u0027s products ([\\#42]())","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"EvitanRelta":33}},{"path":"docs/team/bentimate.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"EvitanRelta"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dbentimate\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"EvitanRelta"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"EvitanRelta"},"content":"  * User Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"EvitanRelta"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"EvitanRelta"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"* **Community**:","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"EvitanRelta"},"content":"  * Responded to forum posts ([\\#42]())","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"  * Reported bugs found in other team\u0027s products ([\\#42]())","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"EvitanRelta":33}},{"path":"docs/team/evitanrelta.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"EvitanRelta"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"title: Shaun Tan\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"### Project: TeachMeSenpai","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"TeachMeSenpai **is a student managing application** specially customised for **teaching assistants** who have a lot of","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"students to keep track of. It is tailored to assist the user in monitoring their students\u0027 progress, and details. TeachMeSenpai is optimised for fast-typists with a **Command Line Interface (CLI)** so users can easily edit their student\u0027s details, with the benefits of a **Graphical User Interface (GUI)** so users can conveniently view their student entries.","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003devitanrelta\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"  * Added autocompletion feature _([#130], [#136], [#137])_","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"EvitanRelta"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"EvitanRelta"},"content":"  * User Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"EvitanRelta"},"content":"    * Added autocompletion section _([#155])_","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"EvitanRelta"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"    * _(TO BE ADDED)_","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"  * Others:","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"    * Update the [AboutUs page] _([#21])_","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"    * Added profile pics for all my team members _([#5])_","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"* **Community**:","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"  * PRs reviewed (with non-trivial review comments): _(TO BE ADDED)_","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"  * Responded to [forum posts]","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"EvitanRelta"},"content":"  * Reported bugs found in other team\u0027s products _([AY2223S2-CS2103T-W12-4/tp#142])_","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"[#5]: https://github.com/AY2223S2-CS2103T-W12-2/tp/pull/5","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"[#21]: https://github.com/AY2223S2-CS2103T-W12-2/tp/pull/21","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"EvitanRelta"},"content":"[#130]: https://github.com/AY2223S2-CS2103T-W12-2/tp/pull/130","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"EvitanRelta"},"content":"[#136]: https://github.com/AY2223S2-CS2103T-W12-2/tp/pull/136","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"EvitanRelta"},"content":"[#137]: https://github.com/AY2223S2-CS2103T-W12-2/tp/pull/137","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"EvitanRelta"},"content":"[#155]: https://github.com/AY2223S2-CS2103T-W12-2/tp/pull/155","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"[AY2223S2-CS2103T-W12-4/tp#142]: https://github.com/AY2223S2-CS2103T-W12-4/tp/issues/142","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"[forum posts]: https://github.com/nus-cs2103-AY2223S2/forum/issues?q\u003dis%3Aissue+involves%3Aevitanrelta","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"EvitanRelta"},"content":"[AboutUs page]: https://ay2223s2-cs2103t-w12-2.github.io/tp/AboutUs.html","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"EvitanRelta":43}},{"path":"docs/team/sheemo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"EvitanRelta"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dsheemo\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"EvitanRelta"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"EvitanRelta"},"content":"  * User Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"EvitanRelta"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"EvitanRelta"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"* **Community**:","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"EvitanRelta"},"content":"  * Responded to forum posts ([\\#42]())","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"  * Reported bugs found in other team\u0027s products ([\\#42]())","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"EvitanRelta":33}},{"path":"docs/team/wendy0107.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"EvitanRelta"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"title: Wen Li\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"### Project: TeachMeSenpai","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"TeachMeSenpai **is a student managing application** specially customised for **teaching assistants** who have a lot of","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"students to keep track of. It is tailored to assist the user in monitoring their students\u0027 progress, and details. TeachMeSenpai is optimised for fast-typists with a **Command Line Interface (CLI)** so users can easily edit their student\u0027s details, with the benefits of a **Graphical User Interface (GUI)** so users can conveniently view their student entries.","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dwendy0107\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"  * Made phone number an optional field for `add` and `edit` (Pull request [\\#42]())","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"  * Created the `Subject` class to include the details of a student\u0027s subejcts (Pull request [\\#54]())","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"  * Added icons to Person Card (Ui) (Pull request [\\#64]())","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"  * Implemented the Ui to support the `show` command and fixed bugs on unexpected behaviour of Ui (Pull request [\\#94](), [\\#98]())","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"  * Improved the Ui to support the empty optional fields as well as differentiate the tag colours between education, subject and tags (Pull request [\\#103]())","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"  * Implemented the `undo` and `redo` feature (Pull request [\\#120]())","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"  * Improved the `remark` feature by including a keyboard shortcut `Ctrl + Z` to exit the remark window (Pull request [\\#121]())","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"  * Updated Ui with an app icon and new icons for student details, and truncated remarks shown in the student list (Pull request [\\#122]())","lastModifiedDate":"2023-04-03"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"  * Add sample data for remarks (Pull request [\\#138]())","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"  * Update Ui to support `Telegram` field for student entries (Pull request [\\#145]())","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"  * Fixed bug for `show` where the Ui does not update when `show` is used on newly added student entries (Pull request [\\#189]())","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"  * Fixed `undo` `redo` bug where the student list updates irregularly when used in succession and removed some unused code (Pull request [\\#206]())","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"  * Fixed `add` and `edit` bug where duplicate students are allowed to be added due to case-sensitve naming and made students unique by telegram handle, phone number","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"  and case-insensitive name (Pull requests [\\#207](), [\\#209]())","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"  * Fixed bug for `show` where editing a shown student\u0027s name results in the entry disappearing (Pull request [\\#212]())","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"  * Fixed bug for `show` where deleting a shown student\u0027s name doesn\u0027t remove it from the shown list (Pull request [\\#212]())","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"  * User Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"    * Update the command and prefix summary (Pull requests [\\#104](), [\\#108]())","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"    * Improved navigability and user-friendliness by adding a table on parameters, markdown summary, and an About section (Pull requests [\\#106](), [\\#109](), [\\#111]())","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"    * Fixed broken hyperlinks (Pull request [\\#108]())","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"    * Updated the user guide with features `undo`, `redo`, `clear` and updated the website landing page (Pull request [\\#152]())","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"    * Fixed broken hyperlinks, typos, and issues with markdown rendering and images not loading (Pull requests [\\#207](), [\\#208]())","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"    * Added UML diagrams, implementation details and design considerations for `add`, `edit`, `delete`, `find`, `list` (Pull requests [\\#66](), [\\#79](), [\\#99]())","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"    * Updated the Ui, model, storage, and student class diagram. (Pull requests [\\#66](), [\\#79](), [\\#99]())","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"    * Included proposed feature implementations for `undo`, `redo`, `delete` by multiple indexes, `find` by fields, and `sort` (Pull requests [\\#66](), [\\#79](), [\\#99]())","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"    * Updated the About section, improved navigability with table of contents and hyperlinks (Pull request [\\#99]())","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"    * Updated the proposed feature implementation for `undo` and `redo` (Pull request [\\#206]())","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"  * Set up the GitHub team organisation and repo, codecoverage and issue tracker","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"  * Created the Ui mock up (Pull request [\\#33]())","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"  * Changed product icon","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"  * Managed releases for v1.2, v1.3","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#74](), [\\#102](), [\\#151]()","lastModifiedDate":"2023-04-03"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"* **Contributions beyond the project team** (not updated):","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"EvitanRelta"},"content":"  * Responded to forum posts ([\\#42]())","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"EvitanRelta"},"content":"  * Reported bugs found in other team\u0027s products ([\\#42]())","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"wendy0107":38,"EvitanRelta":19}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"wendy0107"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/teachmesenpai.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-03-30"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"wendy0107":1,"-":400}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 2, true);","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wendy0107":1,"-":182}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"    public static final String MESSAGE_DUPLICATE_PERSONS_INDEX \u003d \"Duplicate indexes are not allowed\";","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EvitanRelta":1,"-":13}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"Bentimate"},"content":"    public static boolean containsFullIgnoreCase(String sentence, String word) {","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"Bentimate"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"Bentimate"},"content":"     * Returns true if the given text contains the keyword, ignoring case.","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Bentimate"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"Bentimate"},"content":"     * @param text the text to search for the keyword","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Bentimate"},"content":"     * @param keyword the keyword to search for in the text","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"Bentimate"},"content":"     * @return true if the text contains the keyword, ignoring case","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Bentimate"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"Bentimate"},"content":"    public static boolean containsPartialIgnoreCase(String text, String keyword) {","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"Bentimate"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Bentimate"},"content":"            return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"Bentimate"},"content":"        if (text \u003d\u003d null || text.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"Bentimate"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"Bentimate"},"content":"        String textLowerCase \u003d text.toLowerCase();","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"Bentimate"},"content":"        String keywordLowerCase \u003d keyword.toLowerCase();","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"Bentimate"},"content":"        return textLowerCase.contains(keywordLowerCase);","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":90,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Bentimate":23,"alextang809":1,"-":67}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"     * Suggest a possible autocomplete value based on the user input.","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"     * The returned suggestion also contains the user input","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"     * (ie. user input \"ad\" returns the suggestion \"add ...\" which includes the input \"ad\")","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"     * @param userInput The current user input.","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"     * @return An autocomplete suggestion.","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"EvitanRelta"},"content":"     * @throws ParseException If {@code userInput} likely has syntax errors (based on heuristics).","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"    String suggestCommand(String userInput) throws ParseException;","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"EvitanRelta"},"content":"     * Autocomplete a user input based on the current command suggestion.","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"EvitanRelta"},"content":"     * @param userInput The current user input.","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"EvitanRelta"},"content":"     * @param commandSuggestion The current command suggestion.","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"     * @return The new user input after autocompleting.","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"    String autocompleteCommand(String userInput, String commandSuggestion);","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"     * Returns the person to be shown.","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"     * @return Person to be shown.","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"    ObservableList\u003cPerson\u003e getShowPerson();","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wendy0107":6,"EvitanRelta":18,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.commands.AutocompleteEngine;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"    private final AutocompleteEngine autocompleteEngine;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"        autocompleteEngine \u003d new AutocompleteEngine(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"EvitanRelta"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"EvitanRelta"},"content":"    public String suggestCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"EvitanRelta"},"content":"        return autocompleteEngine.suggestCommand(userInput);","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"EvitanRelta"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"EvitanRelta"},"content":"    public String autocompleteCommand(String userInput, String commandSuggestion) {","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"EvitanRelta"},"content":"        return autocompleteEngine.autocompleteCommand(userInput, commandSuggestion);","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":79,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"wendy0107"},"content":"    public ObservableList\u003cPerson\u003e getShowPerson() {","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"wendy0107"},"content":"        return model.getShowPerson();","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wendy0107":5,"EvitanRelta":13,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_NAME.setExamples(\"John Doe\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_PHONE.asOptional().setExamples(\"98765432\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_EMAIL.asOptional().setExamples(\"johnd@example.com\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_ADDRESS.asOptional().setExamples(\"311, Clementi Ave 2, #02-25\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_EDUCATION.asOptional().setExamples(\"Year 1\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_TELEGRAM.asOptional().setExamples(\"@johndtele\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_REMARK.asOptional().setExamples(\"Have submitted tutorial worksheet for Week 10\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_TAG.asOptional().asRepeatable().setExamples(\"Tut1\", \"hasSubmitted\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_MODULE.asOptional().asRepeatable().setExamples(\"CS2103T\")","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"EvitanRelta"},"content":"    ));","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book.\"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"            + \"\\n\" + getParameterUsage(ARGUMENT_PREFIXES)","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"            + \"\\n\" + getExampleUsage(COMMAND_WORD, ARGUMENT_PREFIXES);","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"EvitanRelta"},"content":"        model.commitAddressBook(COMMAND_WORD);","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Sheemo":1,"EvitanRelta":20,"-":55}},{"path":"src/main/java/seedu/address/logic/commands/AutocompleteEngine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EvitanRelta"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.INDEX_PLACEHOLDER;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.KEYWORD_PLACEHOLDER;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.REMARK_PLACEHOLDER;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"EvitanRelta"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"EvitanRelta"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"EvitanRelta"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"EvitanRelta"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"//Solution below adapted from https://github.com/AY2223S1-CS2103T-T12-2/tp","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"// with almost complete overhauling, including refactoring, bug-fixing, adding","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"// of asserts, and changing the behaviour of the feature to suit our needs.","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"EvitanRelta"},"content":" * Suggests and autocompletes command/argument based on the user input.","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"public class AutocompleteEngine {","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"EvitanRelta"},"content":"    private static final ArrayList\u003cString\u003e COMMAND_LIST \u003d new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"EvitanRelta"},"content":"            AddCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"EvitanRelta"},"content":"            ClearCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"EvitanRelta"},"content":"            DeleteCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"            EditCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"            ExitCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"            FindCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"EvitanRelta"},"content":"            FilterCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"EvitanRelta"},"content":"            HelpCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"EvitanRelta"},"content":"            ListCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"EvitanRelta"},"content":"            RemarkCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"EvitanRelta"},"content":"            ShowRemarkCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"EvitanRelta"},"content":"            RedoCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"EvitanRelta"},"content":"            UndoCommand.COMMAND_WORD","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"EvitanRelta"},"content":"    ));","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"EvitanRelta"},"content":"    private static final Map\u003cString, ArrayList\u003cPrefix\u003e\u003e ARGUMENT_PREFIX_MAP \u003d Map.ofEntries(","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"EvitanRelta"},"content":"            Map.entry(AddCommand.COMMAND_WORD, AddCommand.ARGUMENT_PREFIXES),","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"EvitanRelta"},"content":"            Map.entry(ClearCommand.COMMAND_WORD, ClearCommand.ARGUMENT_PREFIXES),","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"EvitanRelta"},"content":"            Map.entry(DeleteCommand.COMMAND_WORD, DeleteCommand.ARGUMENT_PREFIXES),","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"EvitanRelta"},"content":"            Map.entry(EditCommand.COMMAND_WORD, EditCommand.ARGUMENT_PREFIXES),","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"EvitanRelta"},"content":"            Map.entry(ExitCommand.COMMAND_WORD, ExitCommand.ARGUMENT_PREFIXES),","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"EvitanRelta"},"content":"            Map.entry(FindCommand.COMMAND_WORD, FindCommand.ARGUMENT_PREFIXES),","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"EvitanRelta"},"content":"            Map.entry(FilterCommand.COMMAND_WORD, FilterCommand.ARGUMENT_PREFIXES),","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"EvitanRelta"},"content":"            Map.entry(HelpCommand.COMMAND_WORD, HelpCommand.ARGUMENT_PREFIXES),","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"EvitanRelta"},"content":"            Map.entry(ListCommand.COMMAND_WORD, ListCommand.ARGUMENT_PREFIXES),","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"EvitanRelta"},"content":"            Map.entry(RemarkCommand.COMMAND_WORD, RemarkCommand.ARGUMENT_PREFIXES),","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"EvitanRelta"},"content":"            Map.entry(ShowRemarkCommand.COMMAND_WORD, ShowRemarkCommand.ARGUMENT_PREFIXES),","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"EvitanRelta"},"content":"            Map.entry(RedoCommand.COMMAND_WORD, RedoCommand.ARGUMENT_PREFIXES),","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"EvitanRelta"},"content":"            Map.entry(UndoCommand.COMMAND_WORD, UndoCommand.ARGUMENT_PREFIXES)","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"EvitanRelta"},"content":"    );","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"EvitanRelta"},"content":"    private final Model model;","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"EvitanRelta"},"content":"     * Constructs a {@code CommandSuggestor} with predefined commands and argument prompts.","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"EvitanRelta"},"content":"    public AutocompleteEngine(Model model) {","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"EvitanRelta"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"EvitanRelta"},"content":"        // Assert that \u0027commandArgPrefixes\u0027 keys and \u0027commandList\u0027 both contains only the same","lastModifiedDate":"2023-04-03"},{"lineNumber":77,"author":{"gitId":"EvitanRelta"},"content":"        // values and nothing else, with no duplicates.","lastModifiedDate":"2023-04-03"},{"lineNumber":78,"author":{"gitId":"EvitanRelta"},"content":"        assert COMMAND_LIST.stream().allMatch(ARGUMENT_PREFIX_MAP::containsKey)","lastModifiedDate":"2023-04-03"},{"lineNumber":79,"author":{"gitId":"EvitanRelta"},"content":"                : \"\u0027commandArgPrefixes\u0027 keys should contains all the elements in \u0027commandList\u0027\";","lastModifiedDate":"2023-04-03"},{"lineNumber":80,"author":{"gitId":"EvitanRelta"},"content":"        assert ARGUMENT_PREFIX_MAP.keySet().stream().allMatch(COMMAND_LIST::contains)","lastModifiedDate":"2023-04-03"},{"lineNumber":81,"author":{"gitId":"EvitanRelta"},"content":"                : \"\u0027commandList\u0027 should contains all the elements in \u0027commandArgPrefixes\u0027 keys\";","lastModifiedDate":"2023-04-03"},{"lineNumber":82,"author":{"gitId":"EvitanRelta"},"content":"        assert ARGUMENT_PREFIX_MAP.keySet().size() \u003d\u003d COMMAND_LIST.size()","lastModifiedDate":"2023-04-03"},{"lineNumber":83,"author":{"gitId":"EvitanRelta"},"content":"                : \"The number of \u0027commandArgPrefixes\u0027 keys should equal the size of \u0027commandList\u0027\";","lastModifiedDate":"2023-04-03"},{"lineNumber":84,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":85,"author":{"gitId":"EvitanRelta"},"content":"        assert ARGUMENT_PREFIX_MAP.values().stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"EvitanRelta"},"content":"                .allMatch(argPrefix -\u003e argPrefix.stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"EvitanRelta"},"content":"                        .dropWhile(Prefix::isPlaceholder)","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"EvitanRelta"},"content":"                        .noneMatch(Prefix::isPlaceholder))","lastModifiedDate":"2023-04-03"},{"lineNumber":89,"author":{"gitId":"EvitanRelta"},"content":"                : \"All prefix-less arguments (eg. index/keywords) should come before prefixed args\";","lastModifiedDate":"2023-04-03"},{"lineNumber":90,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"EvitanRelta"},"content":"        assert ARGUMENT_PREFIX_MAP.values().stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"EvitanRelta"},"content":"                .allMatch(argPrefix -\u003e argPrefix.stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"EvitanRelta"},"content":"                        .dropWhile(INDEX_PLACEHOLDER::equals)","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"EvitanRelta"},"content":"                        .noneMatch(INDEX_PLACEHOLDER::equals))","lastModifiedDate":"2023-04-03"},{"lineNumber":95,"author":{"gitId":"EvitanRelta"},"content":"                : \"All index arguments should come before any other type of args\";","lastModifiedDate":"2023-04-03"},{"lineNumber":96,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"EvitanRelta"},"content":"        assert ARGUMENT_PREFIX_MAP.values().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"EvitanRelta"},"content":"                .allMatch(argPrefix -\u003e argPrefix.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"EvitanRelta"},"content":"                        .dropWhile(prefix -\u003e !prefix.isOptional())","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"EvitanRelta"},"content":"                        .allMatch(Prefix::isOptional))","lastModifiedDate":"2023-04-03"},{"lineNumber":101,"author":{"gitId":"EvitanRelta"},"content":"                : \"All optional arguments should come after any compulsory args\";","lastModifiedDate":"2023-04-03"},{"lineNumber":102,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"EvitanRelta"},"content":"        assert ARGUMENT_PREFIX_MAP.values().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"EvitanRelta"},"content":"                .allMatch(argPrefix -\u003e argPrefix.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"EvitanRelta"},"content":"                        .dropWhile(prefix -\u003e !prefix.isRepeatable())","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"EvitanRelta"},"content":"                        .allMatch(Prefix::isRepeatable))","lastModifiedDate":"2023-04-03"},{"lineNumber":107,"author":{"gitId":"EvitanRelta"},"content":"                : \"All repeatable arguments should come after any non-repeatable args\";","lastModifiedDate":"2023-04-03"},{"lineNumber":108,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"EvitanRelta"},"content":"     * Suggests a command based on the user input.","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"EvitanRelta"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"EvitanRelta"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"EvitanRelta"},"content":"     * @return Suggested command (including the user input).","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"EvitanRelta"},"content":"     * @throws ParseException If {@code userInput} is likely invalid (based on heuristics).","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"EvitanRelta"},"content":"    public String suggestCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"EvitanRelta"},"content":"        assert userInput !\u003d null : \"\u0027userInput\u0027 should not be \u0027null\u0027\";","lastModifiedDate":"2023-04-03"},{"lineNumber":119,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"EvitanRelta"},"content":"        if (userInput.isBlank()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"EvitanRelta"},"content":"            return userInput;","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"EvitanRelta"},"content":"        String strippedLeadingInput \u003d userInput.stripLeading();","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"EvitanRelta"},"content":"        String inputLeadingSpaces \u003d userInput.substring(","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"EvitanRelta"},"content":"                0, userInput.length() - strippedLeadingInput.length());","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"EvitanRelta"},"content":"        String[] splitArr \u003d strippedLeadingInput.split(\" \", 2);","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"EvitanRelta"},"content":"        String commandWord \u003d splitArr[0];","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"EvitanRelta"},"content":"        String commandBody \u003d splitArr.length \u003e 1 ? \" \" + splitArr[1] : \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"EvitanRelta"},"content":"        ParseException unknownParseException \u003d new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-04-08"},{"lineNumber":133,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"EvitanRelta"},"content":"        boolean isCommandComplete \u003d strippedLeadingInput.contains(\" \");","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"EvitanRelta"},"content":"        if (!isCommandComplete) {","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"EvitanRelta"},"content":"            String suggestedCommand \u003d COMMAND_LIST.stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"EvitanRelta"},"content":"                    .filter(command -\u003e command.startsWith(commandWord))","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"EvitanRelta"},"content":"                    .findFirst()","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"EvitanRelta"},"content":"                    .orElseThrow(() -\u003e unknownParseException);","lastModifiedDate":"2023-04-08"},{"lineNumber":140,"author":{"gitId":"EvitanRelta"},"content":"            return inputLeadingSpaces + suggestedCommand + suggestArguments(suggestedCommand, commandBody);","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"EvitanRelta"},"content":"        boolean isInvalidCommand \u003d !COMMAND_LIST.contains(commandWord);","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"EvitanRelta"},"content":"        if (isInvalidCommand) {","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"EvitanRelta"},"content":"            throw unknownParseException;","lastModifiedDate":"2023-04-08"},{"lineNumber":146,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"EvitanRelta"},"content":"        return userInput + suggestArguments(commandWord, commandBody);","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"EvitanRelta"},"content":"     * Returns the new user input when user auto-completes the command.","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"EvitanRelta"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"EvitanRelta"},"content":"     * @param userInput Current user input.","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"EvitanRelta"},"content":"     * @param commandSuggestion Current command suggestion.","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"EvitanRelta"},"content":"     * @return New user input.","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"EvitanRelta"},"content":"    public String autocompleteCommand(String userInput, String commandSuggestion) {","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"EvitanRelta"},"content":"        // Command suggested but not yet entered by user","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"EvitanRelta"},"content":"        String remainingSuggestion \u003d commandSuggestion.substring(userInput.length());","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"EvitanRelta"},"content":"        Pattern nextAutocompleteRegex \u003d Pattern.compile(\"^ *\\\\[*[a-z0-9_]*\\\\/*\", Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"EvitanRelta"},"content":"        String nextAutocomplete \u003d Optional.of(nextAutocompleteRegex.matcher(remainingSuggestion))","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"EvitanRelta"},"content":"                .filter(Matcher::find)","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"EvitanRelta"},"content":"                .map(Matcher::group)","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"EvitanRelta"},"content":"                .map(match -\u003e match.replaceAll(\"[\\\\[\\\\]\\\\.]\", \"\")) // Remove optional/repeating prefix artifacts.","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"EvitanRelta"},"content":"                .filter(match -\u003e !match.trim().equals(INDEX_PLACEHOLDER.toPlaceholderString()))","lastModifiedDate":"2023-04-07"},{"lineNumber":167,"author":{"gitId":"EvitanRelta"},"content":"                .filter(match -\u003e !match.trim().equals(KEYWORD_PLACEHOLDER.toPlaceholderString()))","lastModifiedDate":"2023-04-07"},{"lineNumber":168,"author":{"gitId":"EvitanRelta"},"content":"                .filter(match -\u003e !match.trim().equals(REMARK_PLACEHOLDER.toPlaceholderString()))","lastModifiedDate":"2023-04-07"},{"lineNumber":169,"author":{"gitId":"EvitanRelta"},"content":"                .orElse(\"\");","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"EvitanRelta"},"content":"        return userInput + nextAutocomplete;","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"EvitanRelta"},"content":"    private Map\u003cPrefix, ArrayList\u003cString\u003e\u003e getExistingArgValuesForAutocomplete() {","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"EvitanRelta"},"content":"        return new HashMap\u003c\u003e(Map.of(","lastModifiedDate":"2023-03-31"},{"lineNumber":175,"author":{"gitId":"EvitanRelta"},"content":"                PREFIX_TAG, model.getExistingTagValues(),","lastModifiedDate":"2023-03-31"},{"lineNumber":176,"author":{"gitId":"EvitanRelta"},"content":"                PREFIX_MODULE, model.getExistingModuleValues(),","lastModifiedDate":"2023-03-31"},{"lineNumber":177,"author":{"gitId":"EvitanRelta"},"content":"                PREFIX_EDUCATION, model.getExistingEducationValues()","lastModifiedDate":"2023-03-31"},{"lineNumber":178,"author":{"gitId":"EvitanRelta"},"content":"        ));","lastModifiedDate":"2023-03-31"},{"lineNumber":179,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"EvitanRelta"},"content":"     * Suggests prompts for arguments for {@code command} based on the user input.","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"EvitanRelta"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"EvitanRelta"},"content":"     * @param command The command to suggest arguments for.","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"EvitanRelta"},"content":"     * @param commmandBody The command body of the current user input.","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"EvitanRelta"},"content":"     * @return Suggested arguments.","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"EvitanRelta"},"content":"     * @throws ParseException If the user input is invalid.","lastModifiedDate":"2023-04-08"},{"lineNumber":188,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"EvitanRelta"},"content":"    private String suggestArguments(String command, String commmandBody) throws ParseException {","lastModifiedDate":"2023-04-08"},{"lineNumber":190,"author":{"gitId":"EvitanRelta"},"content":"        ArrayList\u003cPrefix\u003e argPrefixes \u003d ARGUMENT_PREFIX_MAP.get(command);","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"EvitanRelta"},"content":"        assert argPrefixes !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"EvitanRelta"},"content":"        ArgumentMultimap argumentMultimap \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"EvitanRelta"},"content":"                ArgumentTokenizer.tokenize(\" \" + commmandBody, argPrefixes.toArray(Prefix[]::new));","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"EvitanRelta"},"content":"        Map\u003cPrefix, ArrayList\u003cString\u003e\u003e existingArgValues \u003d getExistingArgValuesForAutocomplete();","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"EvitanRelta"},"content":"        if (commmandBody.isBlank()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"EvitanRelta"},"content":"            String allArgs \u003d argPrefixes.stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"EvitanRelta"},"content":"                    .map(Prefix::toPlaceholderString)","lastModifiedDate":"2023-04-07"},{"lineNumber":199,"author":{"gitId":"EvitanRelta"},"content":"                    .collect(Collectors.joining(\" \"));","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"EvitanRelta"},"content":"            String leadingPadding \u003d commmandBody.isEmpty() ? \" \" : \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"EvitanRelta"},"content":"            return leadingPadding + allArgs;","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"EvitanRelta"},"content":"        String[] splitArr \u003d commmandBody.trim().split(\" +\");","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"EvitanRelta"},"content":"        ArrayList\u003cString\u003e words \u003d new ArrayList\u003c\u003e(Arrays.asList(splitArr));","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"EvitanRelta"},"content":"        int numOfWords \u003d splitArr.length;","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"EvitanRelta"},"content":"        assert numOfWords \u003e 0 : \"\u0027numOfWords\u0027 should be \u003e 0\";","lastModifiedDate":"2023-04-03"},{"lineNumber":208,"author":{"gitId":"EvitanRelta"},"content":"        String firstWord \u003d splitArr[0];","lastModifiedDate":"2023-03-29"},{"lineNumber":209,"author":{"gitId":"EvitanRelta"},"content":"        String lastWord \u003d splitArr[splitArr.length - 1];","lastModifiedDate":"2023-03-29"},{"lineNumber":210,"author":{"gitId":"EvitanRelta"},"content":"        assert !firstWord.isBlank() : \"\u0027firstWord\u0027 should not be blank\";","lastModifiedDate":"2023-04-03"},{"lineNumber":211,"author":{"gitId":"EvitanRelta"},"content":"        assert !firstWord.contains(\" \") : \"\u0027firstWord\u0027 should not contain any spaces\";","lastModifiedDate":"2023-04-03"},{"lineNumber":212,"author":{"gitId":"EvitanRelta"},"content":"        assert !lastWord.isBlank() : \"\u0027lastWord\u0027 should not be blank\";","lastModifiedDate":"2023-04-03"},{"lineNumber":213,"author":{"gitId":"EvitanRelta"},"content":"        assert !lastWord.contains(\" \") : \"\u0027lastWord\u0027 should not contain any spaces\";","lastModifiedDate":"2023-04-03"},{"lineNumber":214,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":215,"author":{"gitId":"EvitanRelta"},"content":"        boolean isIndexRequired \u003d argPrefixes.contains(INDEX_PLACEHOLDER);","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"EvitanRelta"},"content":"        if (isIndexRequired) {","lastModifiedDate":"2023-03-29"},{"lineNumber":217,"author":{"gitId":"EvitanRelta"},"content":"            long numOfIndexRequired \u003d argPrefixes.stream().filter(INDEX_PLACEHOLDER::equals).count();","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"EvitanRelta"},"content":"            boolean areAllValidIndexes \u003d words.stream().limit(numOfIndexRequired)","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"EvitanRelta"},"content":"                    .allMatch(word -\u003e word.matches(\"\\\\d+\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":221,"author":{"gitId":"EvitanRelta"},"content":"            if (!areAllValidIndexes) {","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"EvitanRelta"},"content":"                throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":223,"author":{"gitId":"EvitanRelta"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":224,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":225,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":226,"author":{"gitId":"EvitanRelta"},"content":"        boolean hasNoTrailingSpace \u003d !commmandBody.endsWith(\" \");","lastModifiedDate":"2023-03-29"},{"lineNumber":227,"author":{"gitId":"EvitanRelta"},"content":"        if (hasNoTrailingSpace) {","lastModifiedDate":"2023-03-29"},{"lineNumber":228,"author":{"gitId":"EvitanRelta"},"content":"            Prefix currPrefix \u003d new Prefix(lastWord.replaceAll(\"[^\\\\/]*$\", \"\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":229,"author":{"gitId":"EvitanRelta"},"content":"            boolean toAutocompleteArgValue \u003d existingArgValues.containsKey(currPrefix);","lastModifiedDate":"2023-03-30"},{"lineNumber":230,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":231,"author":{"gitId":"EvitanRelta"},"content":"            if (toAutocompleteArgValue) {","lastModifiedDate":"2023-03-30"},{"lineNumber":232,"author":{"gitId":"EvitanRelta"},"content":"                String argValue \u003d lastWord.replaceAll(\"^.*\\\\/\", \"\");","lastModifiedDate":"2023-03-30"},{"lineNumber":233,"author":{"gitId":"EvitanRelta"},"content":"                String matchingExistingValues \u003d existingArgValues.get(currPrefix)","lastModifiedDate":"2023-03-30"},{"lineNumber":234,"author":{"gitId":"EvitanRelta"},"content":"                        .stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":235,"author":{"gitId":"EvitanRelta"},"content":"                        .filter(value -\u003e value.startsWith(argValue))","lastModifiedDate":"2023-03-30"},{"lineNumber":236,"author":{"gitId":"EvitanRelta"},"content":"                        .filter(value -\u003e argumentMultimap.getAllValues(currPrefix).stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":237,"author":{"gitId":"EvitanRelta"},"content":"                                .noneMatch(value::equals))","lastModifiedDate":"2023-03-31"},{"lineNumber":238,"author":{"gitId":"EvitanRelta"},"content":"                        .collect(Collectors.joining(\" | \"));","lastModifiedDate":"2023-03-30"},{"lineNumber":239,"author":{"gitId":"EvitanRelta"},"content":"                return matchingExistingValues.isEmpty()","lastModifiedDate":"2023-03-30"},{"lineNumber":240,"author":{"gitId":"EvitanRelta"},"content":"                        ? \"\"","lastModifiedDate":"2023-03-30"},{"lineNumber":241,"author":{"gitId":"EvitanRelta"},"content":"                        : matchingExistingValues.substring(argValue.length());","lastModifiedDate":"2023-03-30"},{"lineNumber":242,"author":{"gitId":"EvitanRelta"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":243,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":244,"author":{"gitId":"EvitanRelta"},"content":"            // Example of filling the value:","lastModifiedDate":"2023-03-30"},{"lineNumber":245,"author":{"gitId":"EvitanRelta"},"content":"            // \"add n/Sha\" or \"add n/\", where user is halfway filling the name field.","lastModifiedDate":"2023-03-30"},{"lineNumber":246,"author":{"gitId":"EvitanRelta"},"content":"            boolean isFillingPrefixValue \u003d lastWord.contains(\"/\");","lastModifiedDate":"2023-03-30"},{"lineNumber":247,"author":{"gitId":"EvitanRelta"},"content":"            if (isFillingPrefixValue) {","lastModifiedDate":"2023-03-29"},{"lineNumber":248,"author":{"gitId":"EvitanRelta"},"content":"                // Don\u0027t suggest anything if user is filling.","lastModifiedDate":"2023-03-29"},{"lineNumber":249,"author":{"gitId":"EvitanRelta"},"content":"                return \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":250,"author":{"gitId":"EvitanRelta"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":251,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":252,"author":{"gitId":"EvitanRelta"},"content":"            String matchingArgs \u003d argPrefixes.stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":253,"author":{"gitId":"EvitanRelta"},"content":"                    // Excludes prefix-less arguments like index/keywords.","lastModifiedDate":"2023-03-29"},{"lineNumber":254,"author":{"gitId":"EvitanRelta"},"content":"                    .filter(prefix -\u003e !prefix.isPlaceholder())","lastModifiedDate":"2023-03-29"},{"lineNumber":255,"author":{"gitId":"EvitanRelta"},"content":"                    // Remove filled non-repeating prefixed arguments.","lastModifiedDate":"2023-03-30"},{"lineNumber":256,"author":{"gitId":"EvitanRelta"},"content":"                    .filter(prefix -\u003e argumentMultimap.getValue(prefix).isEmpty()","lastModifiedDate":"2023-03-30"},{"lineNumber":257,"author":{"gitId":"EvitanRelta"},"content":"                            || prefix.isRepeatable())","lastModifiedDate":"2023-03-30"},{"lineNumber":258,"author":{"gitId":"EvitanRelta"},"content":"                    .filter(prefix -\u003e prefix.getPrefix().startsWith(lastWord))","lastModifiedDate":"2023-03-30"},{"lineNumber":259,"author":{"gitId":"EvitanRelta"},"content":"                    .map(Prefix::toPlaceholderString)","lastModifiedDate":"2023-04-07"},{"lineNumber":260,"author":{"gitId":"EvitanRelta"},"content":"                    .collect(Collectors.joining(\" \"));","lastModifiedDate":"2023-03-29"},{"lineNumber":261,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":262,"author":{"gitId":"EvitanRelta"},"content":"            return matchingArgs.isEmpty()","lastModifiedDate":"2023-03-29"},{"lineNumber":263,"author":{"gitId":"EvitanRelta"},"content":"                    ? \"\"","lastModifiedDate":"2023-03-29"},{"lineNumber":264,"author":{"gitId":"EvitanRelta"},"content":"                    : matchingArgs.replaceFirst(\"^\\\\[\", \"\") // If first arg is optional, remove it\u0027s opening bracket.","lastModifiedDate":"2023-03-30"},{"lineNumber":265,"author":{"gitId":"EvitanRelta"},"content":"                            .substring(lastWord.length());","lastModifiedDate":"2023-03-30"},{"lineNumber":266,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":267,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":268,"author":{"gitId":"EvitanRelta"},"content":"        long numOfNonRepeatingPrefixlessArgs \u003d argPrefixes.stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":269,"author":{"gitId":"EvitanRelta"},"content":"                .filter(Prefix::isPlaceholder)","lastModifiedDate":"2023-03-30"},{"lineNumber":270,"author":{"gitId":"EvitanRelta"},"content":"                .filter(prefix -\u003e !prefix.isRepeatable())","lastModifiedDate":"2023-03-30"},{"lineNumber":271,"author":{"gitId":"EvitanRelta"},"content":"                .count();","lastModifiedDate":"2023-03-30"},{"lineNumber":272,"author":{"gitId":"EvitanRelta"},"content":"        String remainingArgs \u003d argPrefixes.stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":273,"author":{"gitId":"EvitanRelta"},"content":"                // Skip the filled prefix-less arguments.","lastModifiedDate":"2023-03-30"},{"lineNumber":274,"author":{"gitId":"EvitanRelta"},"content":"                .skip(Math.min(numOfWords, numOfNonRepeatingPrefixlessArgs))","lastModifiedDate":"2023-03-30"},{"lineNumber":275,"author":{"gitId":"EvitanRelta"},"content":"                // Remove filled non-repeating prefixed arguments.","lastModifiedDate":"2023-03-30"},{"lineNumber":276,"author":{"gitId":"EvitanRelta"},"content":"                .filter(prefix -\u003e argumentMultimap.getValue(prefix).isEmpty()","lastModifiedDate":"2023-03-30"},{"lineNumber":277,"author":{"gitId":"EvitanRelta"},"content":"                        || prefix.isPlaceholder()","lastModifiedDate":"2023-03-30"},{"lineNumber":278,"author":{"gitId":"EvitanRelta"},"content":"                        || prefix.isRepeatable())","lastModifiedDate":"2023-03-30"},{"lineNumber":279,"author":{"gitId":"EvitanRelta"},"content":"                .map(Prefix::toPlaceholderString)","lastModifiedDate":"2023-04-07"},{"lineNumber":280,"author":{"gitId":"EvitanRelta"},"content":"                .collect(Collectors.joining(\" \"));","lastModifiedDate":"2023-03-29"},{"lineNumber":281,"author":{"gitId":"EvitanRelta"},"content":"        return remainingArgs;","lastModifiedDate":"2023-03-29"},{"lineNumber":282,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":283,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":284,"author":{"gitId":"EvitanRelta"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"EvitanRelta":284}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"EvitanRelta"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"        model.commitAddressBook(COMMAND_WORD);","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EvitanRelta":5,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"import java.util.List;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"    protected static String getParameterUsage(List\u003cPrefix\u003e argumentPrefixes) {","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"        return \"Parameters:\\n\" + argumentPrefixes.stream()","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"                .map(Prefix::toPlaceholderString)","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"                .collect(Collectors.joining(\" \"));","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"    protected static String getExampleUsage(String commandWord, List\u003cPrefix\u003e argumentPrefixes) {","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"EvitanRelta"},"content":"        return \"Example:\\n\" + commandWord + \" \" + argumentPrefixes.stream()","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"                .map(Prefix::toExampleString)","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"                .filter(Predicate.not(String::isEmpty))","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"                .collect(Collectors.joining(\" \"));","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EvitanRelta":17,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"    /** The application should handle remarks. */","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"    private final String remark;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, String remark) {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"        this(feedbackToUser, false, false, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"    public boolean isRemark() {","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"        return remark !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"    public String getRemark() {","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"        return remark;","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Sheemo":14,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.INDEX_PLACEHOLDER;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":" * Deletes multiple persons identified using their displayed indexes from the address book.","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"            INDEX_PLACEHOLDER.setExamples(\"1\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"            INDEX_PLACEHOLDER.asOptional().asRepeatable().setExamples(\"3\", \"5\")","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"    ));","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"            + \": Delete the persons identified by the index numbers used in the displayed person list.\"","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"            + \"\\n\" + getParameterUsage(ARGUMENT_PREFIXES)","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"            + \"\\n\" + getExampleUsage(COMMAND_WORD, ARGUMENT_PREFIXES);","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Persons: %1$s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"    private final List\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"    public DeleteCommand(List\u003cIndex\u003e targetIndexes) {","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"alextang809"},"content":"        List\u003cPerson\u003e personsToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"alextang809"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"alextang809"},"content":"            personsToDelete.add(lastShownList.get(targetIndex.getZeroBased()));","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"alextang809"},"content":"        for (Person personToDelete : personsToDelete) {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"alextang809"},"content":"        String deletedPersons \u003d String.join(\", \", personsToDelete.stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"alextang809"},"content":"                .map(Person::toString)","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"alextang809"},"content":"                .toArray(String[]::new));","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"EvitanRelta"},"content":"        model.commitAddressBook(COMMAND_WORD);","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"        model.setDefaultShowPerson();","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"alextang809"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, deletedPersons));","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"alextang809"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"alextang809"},"content":"                || (other instanceof DeleteCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"alextang809"},"content":"                \u0026\u0026 targetIndexes.equals(((DeleteCommand) other).targetIndexes));","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wendy0107":2,"EvitanRelta":11,"alextang809":18,"-":42}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.INDEX_PLACEHOLDER;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.FullNamePredicate;","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.tag.Module;","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"EvitanRelta"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"EvitanRelta"},"content":"            INDEX_PLACEHOLDER.setExamples(\"1\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_NAME.asOptional(),","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_PHONE.asOptional().setExamples(\"91234567\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_EMAIL.asOptional().setExamples(\"johndoe@example.com\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_ADDRESS.asOptional(),","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_EDUCATION.asOptional(),","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_TELEGRAM.asOptional().setExamples(\"@john_goh\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_TAG.asOptional().asRepeatable(),","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_MODULE.asOptional().asRepeatable()","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"EvitanRelta"},"content":"    ));","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":60,"author":{"gitId":"EvitanRelta"},"content":"            + \"Existing values will be overwritten by the input values.\"","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"EvitanRelta"},"content":"            + \"\\n\" + getParameterUsage(ARGUMENT_PREFIXES)","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"EvitanRelta"},"content":"            + \"\\n\" + getExampleUsage(COMMAND_WORD, ARGUMENT_PREFIXES);","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"EvitanRelta"},"content":"        if (model.canReplacePerson(personToEdit, editedPerson)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"wendy0107"},"content":"        model.updateShowPerson(new FullNamePredicate(editedPerson.getName().fullName));","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"EvitanRelta"},"content":"        model.commitAddressBook(COMMAND_WORD);","lastModifiedDate":"2023-04-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":114,"author":{"gitId":"EvitanRelta"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getOptionalPhone()).orElse(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"EvitanRelta"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getOptionalEmail()).orElse(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"EvitanRelta"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getOptionalAddress())","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"EvitanRelta"},"content":"                .orElse(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"EvitanRelta"},"content":"        Education updatedEducation \u003d editPersonDescriptor.getEducation()","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"EvitanRelta"},"content":"                .orElse(personToEdit.getOptionalEducation()).orElse(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"EvitanRelta"},"content":"        Remark oldRemark \u003d personToEdit.getOptionalRemark().orElse(null); // edit command does not allow editing remarks","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"EvitanRelta"},"content":"        Telegram updatedTelegram \u003d editPersonDescriptor.getTelegram()","lastModifiedDate":"2023-04-03"},{"lineNumber":122,"author":{"gitId":"EvitanRelta"},"content":"                .orElse(personToEdit.getOptionalTelegram()).orElse(null);","lastModifiedDate":"2023-04-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":124,"author":{"gitId":"EvitanRelta"},"content":"        Set\u003cModule\u003e updatedModules \u003d editPersonDescriptor.getModules().orElse(personToEdit.getModules());","lastModifiedDate":"2023-03-31"},{"lineNumber":125,"author":{"gitId":"EvitanRelta"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedEducation, oldRemark,","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"Sheemo"},"content":"                    updatedTelegram, updatedModules, updatedTags);","lastModifiedDate":"2023-03-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"EvitanRelta"},"content":"        private Optional\u003cPhone\u003e phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":154,"author":{"gitId":"EvitanRelta"},"content":"        private Optional\u003cEmail\u003e email;","lastModifiedDate":"2023-03-22"},{"lineNumber":155,"author":{"gitId":"EvitanRelta"},"content":"        private Optional\u003cAddress\u003e address;","lastModifiedDate":"2023-03-22"},{"lineNumber":156,"author":{"gitId":"EvitanRelta"},"content":"        private Optional\u003cEducation\u003e education;","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"Bentimate"},"content":"        private Optional\u003cRemark\u003e remark;","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"Sheemo"},"content":"        private Optional\u003cTelegram\u003e telegram;","lastModifiedDate":"2023-03-31"},{"lineNumber":159,"author":{"gitId":"EvitanRelta"},"content":"        private Set\u003cModule\u003e modules;","lastModifiedDate":"2023-03-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":172,"author":{"gitId":"EvitanRelta"},"content":"            setEducation(toCopy.education);","lastModifiedDate":"2023-03-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":174,"author":{"gitId":"EvitanRelta"},"content":"            setModules(toCopy.modules);","lastModifiedDate":"2023-03-31"},{"lineNumber":175,"author":{"gitId":"Sheemo"},"content":"            setTelegram(toCopy.telegram);","lastModifiedDate":"2023-03-31"},{"lineNumber":176,"author":{"gitId":"Bentimate"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"Sheemo"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, education, telegram, modules, tags);","lastModifiedDate":"2023-03-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"EvitanRelta"},"content":"            this.phone \u003d Optional.ofNullable(phone);","lastModifiedDate":"2023-03-22"},{"lineNumber":197,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":198,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":199,"author":{"gitId":"EvitanRelta"},"content":"        public void setPhone(Optional\u003cPhone\u003e phone) {","lastModifiedDate":"2023-03-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"EvitanRelta"},"content":"        public Optional\u003cOptional\u003cPhone\u003e\u003e getPhone() {","lastModifiedDate":"2023-03-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"EvitanRelta"},"content":"            this.email \u003d Optional.ofNullable(email);","lastModifiedDate":"2023-03-22"},{"lineNumber":209,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":210,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":211,"author":{"gitId":"EvitanRelta"},"content":"        public void setEmail(Optional\u003cEmail\u003e email) {","lastModifiedDate":"2023-03-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"EvitanRelta"},"content":"        public Optional\u003cOptional\u003cEmail\u003e\u003e getEmail() {","lastModifiedDate":"2023-03-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"EvitanRelta"},"content":"            this.address \u003d Optional.ofNullable(address);","lastModifiedDate":"2023-03-22"},{"lineNumber":221,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":222,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":223,"author":{"gitId":"EvitanRelta"},"content":"        public void setAddress(Optional\u003cAddress\u003e address) {","lastModifiedDate":"2023-03-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"EvitanRelta"},"content":"        public Optional\u003cOptional\u003cAddress\u003e\u003e getAddress() {","lastModifiedDate":"2023-03-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"EvitanRelta"},"content":"        public void setEducation(Education education) {","lastModifiedDate":"2023-03-17"},{"lineNumber":232,"author":{"gitId":"EvitanRelta"},"content":"            this.education \u003d Optional.ofNullable(education);","lastModifiedDate":"2023-03-22"},{"lineNumber":233,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":234,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":235,"author":{"gitId":"EvitanRelta"},"content":"        public void setEducation(Optional\u003cEducation\u003e education) {","lastModifiedDate":"2023-03-22"},{"lineNumber":236,"author":{"gitId":"EvitanRelta"},"content":"            this.education \u003d education;","lastModifiedDate":"2023-03-17"},{"lineNumber":237,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":238,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":239,"author":{"gitId":"EvitanRelta"},"content":"        public Optional\u003cOptional\u003cEducation\u003e\u003e getEducation() {","lastModifiedDate":"2023-03-22"},{"lineNumber":240,"author":{"gitId":"EvitanRelta"},"content":"            return Optional.ofNullable(education);","lastModifiedDate":"2023-03-17"},{"lineNumber":241,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":242,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":243,"author":{"gitId":"Bentimate"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2023-03-27"},{"lineNumber":244,"author":{"gitId":"Bentimate"},"content":"            this.remark \u003d Optional.ofNullable(remark);","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":246,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":247,"author":{"gitId":"Bentimate"},"content":"        public void setRemark(Optional\u003cRemark\u003e remark) {","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"Bentimate"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2023-03-27"},{"lineNumber":249,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"Bentimate"},"content":"        public Optional\u003cOptional\u003cRemark\u003e\u003e getRemark() {","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"Bentimate"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2023-03-27"},{"lineNumber":253,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":255,"author":{"gitId":"Sheemo"},"content":"        public void setTelegram(Telegram telegram) {","lastModifiedDate":"2023-03-31"},{"lineNumber":256,"author":{"gitId":"Sheemo"},"content":"            this.telegram \u003d Optional.ofNullable(telegram);","lastModifiedDate":"2023-03-31"},{"lineNumber":257,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":258,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":259,"author":{"gitId":"Sheemo"},"content":"        public void setTelegram(Optional\u003cTelegram\u003e telegram) {","lastModifiedDate":"2023-03-31"},{"lineNumber":260,"author":{"gitId":"Sheemo"},"content":"            this.telegram \u003d telegram;","lastModifiedDate":"2023-03-31"},{"lineNumber":261,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":262,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":263,"author":{"gitId":"Sheemo"},"content":"        public Optional\u003cOptional\u003cTelegram\u003e\u003e getTelegram() {","lastModifiedDate":"2023-03-31"},{"lineNumber":264,"author":{"gitId":"Sheemo"},"content":"            return Optional.ofNullable(telegram);","lastModifiedDate":"2023-03-31"},{"lineNumber":265,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":266,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":275,"author":{"gitId":"wendy0107"},"content":"        /**","lastModifiedDate":"2023-03-16"},{"lineNumber":276,"author":{"gitId":"EvitanRelta"},"content":"         * Sets {@code modules} to this object\u0027s {@code modules}.","lastModifiedDate":"2023-03-31"},{"lineNumber":277,"author":{"gitId":"EvitanRelta"},"content":"         * A defensive copy of {@code modules} is used internally.","lastModifiedDate":"2023-03-31"},{"lineNumber":278,"author":{"gitId":"wendy0107"},"content":"         */","lastModifiedDate":"2023-03-16"},{"lineNumber":279,"author":{"gitId":"EvitanRelta"},"content":"        public void setModules(Set\u003cModule\u003e modules) {","lastModifiedDate":"2023-03-31"},{"lineNumber":280,"author":{"gitId":"EvitanRelta"},"content":"            this.modules \u003d (modules !\u003d null) ? new HashSet\u003c\u003e(modules) : null;","lastModifiedDate":"2023-03-31"},{"lineNumber":281,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":282,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":285,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":292,"author":{"gitId":"wendy0107"},"content":"        /**","lastModifiedDate":"2023-03-16"},{"lineNumber":293,"author":{"gitId":"EvitanRelta"},"content":"         * Returns an unmodifiable module set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-31"},{"lineNumber":294,"author":{"gitId":"wendy0107"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-16"},{"lineNumber":295,"author":{"gitId":"EvitanRelta"},"content":"         * Returns {@code Optional#empty()} if {@code modules} is null.","lastModifiedDate":"2023-03-31"},{"lineNumber":296,"author":{"gitId":"wendy0107"},"content":"         */","lastModifiedDate":"2023-03-16"},{"lineNumber":297,"author":{"gitId":"EvitanRelta"},"content":"        public Optional\u003cSet\u003cModule\u003e\u003e getModules() {","lastModifiedDate":"2023-03-31"},{"lineNumber":298,"author":{"gitId":"EvitanRelta"},"content":"            return (modules !\u003d null) ? Optional.of(Collections.unmodifiableSet(modules)) : Optional.empty();","lastModifiedDate":"2023-03-31"},{"lineNumber":299,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":300,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":320,"author":{"gitId":"Sheemo"},"content":"                    \u0026\u0026 getTelegram().equals(e.getTelegram())","lastModifiedDate":"2023-03-31"},{"lineNumber":321,"author":{"gitId":"EvitanRelta"},"content":"                    \u0026\u0026 getModules().equals(e.getModules())","lastModifiedDate":"2023-03-31"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Sheemo":18,"wendy0107":10,"Bentimate":14,"EvitanRelta":80,"-":203}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Sheemo":1,"EvitanRelta":4,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bentimate"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"import java.util.List;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"Bentimate"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.parser.predicates.ContainsKeywordsPredicate;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"Bentimate"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"Bentimate"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"Bentimate"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"Bentimate"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"Bentimate"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"Bentimate"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_NAME.asOptional().asRepeatable().setExamples(\"alice\", \"tan\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_PHONE.asOptional().asRepeatable(),","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_EMAIL.asOptional().asRepeatable(),","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_ADDRESS.asOptional().asRepeatable(),","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_EDUCATION.asOptional().asRepeatable(),","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_TELEGRAM.asOptional().asRepeatable(),","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_REMARK.asOptional().asRepeatable(),","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_TAG.asOptional().asRepeatable().setExamples(\"hasSubmitted\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_MODULE.asOptional().asRepeatable()","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"EvitanRelta"},"content":"    ));","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain ANY of \"","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\"","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"EvitanRelta"},"content":"            + \"\\n\" + getParameterUsage(ARGUMENT_PREFIXES)","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"EvitanRelta"},"content":"            + \"\\n\" + getExampleUsage(COMMAND_WORD, ARGUMENT_PREFIXES);","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"Bentimate"},"content":"    private final ContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"Bentimate"},"content":"    public FilterCommand(ContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"Bentimate"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"Bentimate"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"EvitanRelta"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"Bentimate"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"Bentimate"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"Bentimate"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"Bentimate"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"Bentimate"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"Bentimate"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"Bentimate"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"Bentimate"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"Bentimate"},"content":"                \u0026\u0026 predicate.equals(((FilterCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"Bentimate"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"Bentimate":35,"EvitanRelta":31}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":18,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.parser.predicates.FullMatchKeywordsPredicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_NAME.asOptional().asRepeatable().setExamples(\"alice\", \"tan\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_PHONE.asOptional().asRepeatable(),","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_EMAIL.asOptional().asRepeatable(),","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_ADDRESS.asOptional().asRepeatable(),","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_EDUCATION.asOptional().asRepeatable(),","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_TELEGRAM.asOptional().asRepeatable(),","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_REMARK.asOptional().asRepeatable(),","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_TAG.asOptional().asRepeatable().setExamples(\"hasSubmitted\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"EvitanRelta"},"content":"            PREFIX_MODULE.asOptional().asRepeatable()","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"EvitanRelta"},"content":"    ));","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain ALL of \"","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\"","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"EvitanRelta"},"content":"            + \"\\n\" + getParameterUsage(ARGUMENT_PREFIXES)","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"EvitanRelta"},"content":"            + \"\\n\" + getExampleUsage(COMMAND_WORD, ARGUMENT_PREFIXES);","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"Bentimate"},"content":"    private final FullMatchKeywordsPredicate predicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"Bentimate"},"content":"    public FindCommand(FullMatchKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Bentimate":3,"EvitanRelta":28,"-":35}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Sheemo":1,"wendy0107":1,"EvitanRelta":4,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"EvitanRelta"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EvitanRelta":4,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author wendy0107-reused","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Reused from https://github.com/AY2223S1-CS2103T-W17-4 and adapted from proposed implementation in AB3\u0027s Developer","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// Guide https://se-education.org/addressbook-level3/DeveloperGuide.html","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"// with minor modifications such as renaming and some different implementation.","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Redo the changes done by a prior undo command.","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The command %s has been redone!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FAILURE \u003d","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \"TeachMeSenpai is already in the latest version! There is no recent undo to redo\";","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String commandToRedo;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (!model.checkRedoable()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            commandToRedo \u003d model.redoAddressBook();","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            String message \u003d String.format(MESSAGE_SUCCESS, commandToRedo);","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return new CommandResult(message);","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"wendy0107":7,"EvitanRelta":4,"-":30}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bentimate"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.INDEX_PLACEHOLDER;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.REMARK_PLACEHOLDER;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Bentimate"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Bentimate"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Bentimate"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Bentimate"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Bentimate"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Bentimate"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Bentimate"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Bentimate"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"            INDEX_PLACEHOLDER.setExamples(\"1\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"            REMARK_PLACEHOLDER.asOptional().setExamples(\"Likes to swim.\")","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"    ));","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Bentimate"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Bentimate"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Bentimate"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"            + \"Existing remark will be overwritten by the input.\"","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"            + \"\\n\" + getParameterUsage(ARGUMENT_PREFIXES)","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"EvitanRelta"},"content":"            + \"\\n\" + getExampleUsage(COMMAND_WORD, ARGUMENT_PREFIXES);","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Bentimate"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Bentimate"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Bentimate"},"content":"    private final Index index;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Bentimate"},"content":"    private final Remark remark;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Bentimate"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Bentimate"},"content":"     * Constructor for RemarkCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Bentimate"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Bentimate"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Bentimate"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Bentimate"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"EvitanRelta"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"Bentimate"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Bentimate"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Bentimate"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"Bentimate"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"        if (this.remark \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"            return new CommandResult(\"Editing remark...\", false, false,","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"                    personToEdit.getOptionalRemark().map(String::valueOf).orElse(\"\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Bentimate"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Sheemo"},"content":"                personToEdit.getName(),","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"Sheemo"},"content":"                personToEdit.getOptionalPhone().orElse(null),","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"Sheemo"},"content":"                personToEdit.getOptionalEmail().orElse(null),","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"                personToEdit.getOptionalAddress().orElse(null),","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"EvitanRelta"},"content":"                personToEdit.getOptionalEducation().orElse(null),","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"EvitanRelta"},"content":"                remark.value.equals(\"\\0\") ? null : remark,","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"Sheemo"},"content":"                personToEdit.getOptionalTelegram().orElse(null),","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"EvitanRelta"},"content":"                personToEdit.getModules(),","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"EvitanRelta"},"content":"                personToEdit.getTags()","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"EvitanRelta"},"content":"        );","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"Bentimate"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"Bentimate"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"EvitanRelta"},"content":"        model.commitAddressBook(COMMAND_WORD);","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"Bentimate"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"Bentimate"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"Bentimate"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"Bentimate"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"Bentimate"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"Bentimate"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"Bentimate"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"EvitanRelta"},"content":"        String message \u003d personToEdit.getOptionalRemark().isPresent()","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"EvitanRelta"},"content":"                ? MESSAGE_ADD_REMARK_SUCCESS","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"EvitanRelta"},"content":"                : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"Bentimate"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"Bentimate"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"Bentimate"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"Bentimate"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"Bentimate"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"Bentimate"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"Bentimate"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"Bentimate"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"Bentimate"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"Bentimate"},"content":"        // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"Bentimate"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"Bentimate"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"Sheemo"},"content":"                \u0026\u0026 (remark \u003d\u003d e.remark // handles when remark is null","lastModifiedDate":"2023-04-05"},{"lineNumber":113,"author":{"gitId":"Sheemo"},"content":"                || remark.equals(e.remark));","lastModifiedDate":"2023-04-05"},{"lineNumber":114,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"Bentimate"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Sheemo":11,"wendy0107":2,"Bentimate":81,"EvitanRelta":21}},{"path":"src/main/java/seedu/address/logic/commands/ShowRemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bentimate"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"Bentimate"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.INDEX_PLACEHOLDER;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Bentimate"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Bentimate"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Bentimate"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.person.FullNamePredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Bentimate"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Bentimate"},"content":" * Shows the remark of an existing person in the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Bentimate"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"Bentimate"},"content":"public class ShowRemarkCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"Bentimate"},"content":"    public static final String COMMAND_WORD \u003d \"show\";","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"            INDEX_PLACEHOLDER.setExamples(\"1\")","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"    ));","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows the remarks added to a person.\"","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"            + \"\\n\" + getParameterUsage(ARGUMENT_PREFIXES)","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"            + \"\\n\" + getExampleUsage(COMMAND_WORD, ARGUMENT_PREFIXES);","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Bentimate"},"content":"    public static final String MESSAGE_SHOWN_REMARK_SUCCESS \u003d \"Remarks: %1$s\";","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"Bentimate"},"content":"    public static final String MESSAGE_SHOWN_REMARK_EMPTY \u003d \"No remarks yet...\";","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Bentimate"},"content":"    private final Index index;","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"    private Person personToShow;","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"Bentimate"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"Bentimate"},"content":"     * Constructor for ShowRemarkCommand command","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"Bentimate"},"content":"     * @param index","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"Bentimate"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"Bentimate"},"content":"    public ShowRemarkCommand(Index index) {","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"Bentimate"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Bentimate"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"EvitanRelta"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"Bentimate"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"Bentimate"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"Bentimate"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"        personToShow \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"EvitanRelta"},"content":"        assert personToShow !\u003d null;","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"        model.updateShowPerson(new FullNamePredicate(personToShow.getName().toString()));","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"EvitanRelta"},"content":"        Remark toBeShown \u003d personToShow.getOptionalRemark().orElse(new Remark(\"\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"Bentimate"},"content":"        String message \u003d !toBeShown.value.isEmpty() ? MESSAGE_SHOWN_REMARK_SUCCESS : MESSAGE_SHOWN_REMARK_EMPTY;","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"Bentimate"},"content":"        return new CommandResult(String.format(message, toBeShown));","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"Bentimate"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"Bentimate"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"Bentimate"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"Bentimate"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"Bentimate"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"Bentimate"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"Bentimate"},"content":"        if (!(other instanceof ShowRemarkCommand)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"Bentimate"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"Bentimate"},"content":"        // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"Bentimate"},"content":"        ShowRemarkCommand e \u003d (ShowRemarkCommand) other;","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"Bentimate"},"content":"        return index.equals(e.index);","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"Bentimate"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"wendy0107":7,"Bentimate":63,"EvitanRelta":13}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author wendy0107-reused","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Reused from https://github.com/AY2223S1-CS2103T-W17-4 and adapted from proposed implementation in AB3\u0027s Developer","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// Guide https://se-education.org/addressbook-level3/DeveloperGuide.html","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"// with minor modifications such as renaming and some different implementation.","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Undos the last command that changed TeachMeSenpai\u0027s data history.","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final ArrayList\u003cPrefix\u003e ARGUMENT_PREFIXES \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The last undoable command %s has successfully been undone!\";","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FAILURE \u003d \"There has not been a recent modification to TeachMeSenpai to undo!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String commandToUndo;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!model.checkUndoable()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            commandToUndo \u003d model.undoAddressBook();","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            String message \u003d String.format(MESSAGE_SUCCESS, commandToUndo);","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return new CommandResult(message);","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"wendy0107":7,"EvitanRelta":4,"-":31}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.logic.parser.ParserUtil.parsePrefixIfPresent;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.tag.Module;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_EDUCATION, PREFIX_REMARK, PREFIX_MODULE, PREFIX_TAG,","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"                PREFIX_TELEGRAM);","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"Bentimate"},"content":"        Phone phone \u003d ParserUtil.parsePrefixIfPresent(argMultimap, PREFIX_PHONE, ParserUtil::parsePhone);","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"        Email email \u003d parsePrefixIfPresent(argMultimap, PREFIX_EMAIL, ParserUtil::parseEmail);","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"        Address address \u003d parsePrefixIfPresent(argMultimap, PREFIX_ADDRESS, ParserUtil::parseAddress);","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"EvitanRelta"},"content":"        Education education \u003d parsePrefixIfPresent(argMultimap, PREFIX_EDUCATION, ParserUtil::parseEducation);","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"EvitanRelta"},"content":"        Remark remark \u003d parsePrefixIfPresent(argMultimap, PREFIX_REMARK, ParserUtil::parseRemark);","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"        Telegram telegram \u003d parsePrefixIfPresent(argMultimap, PREFIX_TELEGRAM, ParserUtil::parseTelegram);","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"EvitanRelta"},"content":"        Set\u003cModule\u003e moduleList \u003d ParserUtil.parseModules(argMultimap.getAllValues(PREFIX_MODULE));","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"        Person person \u003d new Person(name, phone, email, address, education, remark, telegram, moduleList, tagList);","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Sheemo":9,"wendy0107":1,"Bentimate":4,"EvitanRelta":9,"-":43}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.commands.ShowRemarkCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"            \"^\\\\s*(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*?\\\\x00?)\\\\s*$\", Pattern.DOTALL);","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"EvitanRelta"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput);","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"EvitanRelta"},"content":"        assert !commandWord.startsWith(\" \") : \"\u0027commandWord\u0027 should have had it\u0027s leading spaces trimmed\";","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"EvitanRelta"},"content":"        assert !arguments.endsWith(\" \") : \"\u0027arguments\u0027 should have had it\u0027s trailing spaces trimmed\";","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"Bentimate"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"Bentimate"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"Bentimate"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Bentimate"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"Bentimate"},"content":"        case ShowRemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"Bentimate"},"content":"            return new ShowRemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":87,"author":{"gitId":"wendy0107"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"wendy0107"},"content":"            return new UndoCommand();","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"wendy0107"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"wendy0107"},"content":"            return new RedoCommand();","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wendy0107":8,"Bentimate":12,"EvitanRelta":5,"-":72}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"EvitanRelta"},"content":"    @Override","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"EvitanRelta"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"EvitanRelta"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"EvitanRelta"},"content":"            return true;","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"EvitanRelta"},"content":"        if (!(other instanceof ArgumentMultimap)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"EvitanRelta"},"content":"            return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"EvitanRelta"},"content":"        ArgumentMultimap otherArgMultiMap \u003d (ArgumentMultimap) other;","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"EvitanRelta"},"content":"        return argMultimap.equals(otherArgMultiMap.argMultimap);","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"EvitanRelta":12,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\", \"NAME\");","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\", \"PHONE\");","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\", \"EMAIL\");","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\", \"ADDRESS\");","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"    public static final Prefix PREFIX_EDUCATION \u003d new Prefix(\"edu/\", \"EDUCATION\");","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\", \"REMARK\");","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\", \"TAG\");","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"    public static final Prefix PREFIX_MODULE \u003d new Prefix(\"m/\", \"MODULE\");","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    public static final Prefix PREFIX_TELEGRAM \u003d new Prefix(\"tele/\", \"TELEGRAM_HANDLE\");","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"EvitanRelta"},"content":"    /** Not a prefix, but a placeholder for a keyword argument. */","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"EvitanRelta"},"content":"    public static final Prefix KEYWORD_PLACEHOLDER \u003d new Prefix(\"\", \"KEYWORD\");","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"    /** Not a prefix, but a placeholder for a index argument. */","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"    public static final Prefix INDEX_PLACEHOLDER \u003d new Prefix(\"\", \"INDEX\");","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"    /** Not a prefix, but a placeholder for a index argument. */","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"    public static final Prefix REMARK_PLACEHOLDER \u003d new Prefix(\"\", PREFIX_REMARK.getPlaceholderText());","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Bentimate"},"content":"    private static final Prefix[] prefixList \u003d {PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"        PREFIX_ADDRESS, PREFIX_EDUCATION, PREFIX_REMARK, PREFIX_TAG, PREFIX_MODULE};","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Bentimate"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Bentimate"},"content":"     * Checks if the specified prefix is a valid prefix implemented in the program.","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Bentimate"},"content":"     * @param prefix","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Bentimate"},"content":"     * @return","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Bentimate"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Bentimate"},"content":"    public static boolean isPrefix(Prefix prefix) {","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Bentimate"},"content":"        boolean isPrefix \u003d false;","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Bentimate"},"content":"        for (Prefix curr : prefixList) {","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Bentimate"},"content":"            if (curr.equals(prefix)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Bentimate"},"content":"                isPrefix \u003d true;","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Bentimate"},"content":"                break;","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"Bentimate"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Bentimate"},"content":"        return isPrefix;","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Sheemo":1,"Bentimate":17,"EvitanRelta":17,"-":11}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"alextang809"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"Bentimate"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"        List\u003cIndex\u003e indexes \u003d ParserUtil.parseIndexes(args);","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"        return new DeleteCommand(indexes);","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Bentimate":1,"EvitanRelta":4,"alextang809":4,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.tag.Module;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"     * @throws ParseException if the user input does not conform to the expected format, or if the index is invalid.","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"EvitanRelta"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_EDUCATION, PREFIX_REMARK, PREFIX_MODULE, PREFIX_TAG,","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"                PREFIX_TELEGRAM);","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"EvitanRelta"},"content":"        if (argMultimap.getPreamble().isEmpty() | argMultimap.getPreamble().contains(\" \")) {","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"EvitanRelta"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"EvitanRelta"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"EvitanRelta"},"content":"        if (argMultimap.getValue(PREFIX_EDUCATION).isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"EvitanRelta"},"content":"            editPersonDescriptor.setEducation(ParserUtil.parseEducation(argMultimap.getValue(PREFIX_EDUCATION).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"Bentimate"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"Bentimate"},"content":"            editPersonDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"Sheemo"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"Sheemo"},"content":"            editPersonDescriptor.setTelegram(ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get()));","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"EvitanRelta"},"content":"        parseModulesForEdit(argMultimap.getAllValues(PREFIX_MODULE)).ifPresent(editPersonDescriptor::setModules);","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"EvitanRelta"},"content":"     * Parses {@code Collection\u003cString\u003e modules} into a {@code Set\u003cModule\u003e} if {@code modules} is non-empty.","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"EvitanRelta"},"content":"     * If {@code modules} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"EvitanRelta"},"content":"     * {@code Set\u003cModule\u003e} containing zero modules.","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"EvitanRelta"},"content":"    private Optional\u003cSet\u003cModule\u003e\u003e parseModulesForEdit(Collection\u003cString\u003e modules) throws ParseException {","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"EvitanRelta"},"content":"        assert modules !\u003d null;","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"EvitanRelta"},"content":"        if (modules.isEmpty()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"wendy0107"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"EvitanRelta"},"content":"        Collection\u003cString\u003e moduleSet \u003d modules.size() \u003d\u003d 1 \u0026\u0026 modules.contains(\"\")","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"EvitanRelta"},"content":"                ? Collections.emptySet() : modules;","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"EvitanRelta"},"content":"        return Optional.of(ParserUtil.parseModules(moduleSet));","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Sheemo":8,"wendy0107":8,"Bentimate":3,"EvitanRelta":21,"-":73}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bentimate"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.parser.predicates.ContainsKeywordsPredicate;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"Bentimate"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"Bentimate"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"Bentimate"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"Bentimate"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"Bentimate"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"Bentimate"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"Bentimate"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"Bentimate"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"Bentimate"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"Bentimate"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"Bentimate"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"Bentimate"},"content":"                PREFIX_ADDRESS, PREFIX_TELEGRAM, PREFIX_EDUCATION, PREFIX_REMARK, PREFIX_MODULE, PREFIX_TAG);","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"Bentimate"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"Bentimate"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"Bentimate"},"content":"        return new FilterCommand(new ContainsKeywordsPredicate(argMultimap));","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"Bentimate"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"Bentimate":27,"EvitanRelta":11}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.predicates.FullMatchKeywordsPredicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"Bentimate"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"Bentimate"},"content":"                PREFIX_ADDRESS, PREFIX_EDUCATION, PREFIX_TELEGRAM, PREFIX_REMARK, PREFIX_MODULE, PREFIX_TAG);","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"Bentimate"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Bentimate"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Bentimate"},"content":"        return new FindCommand(new FullMatchKeywordsPredicate(argMultimap));","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Bentimate":6,"EvitanRelta":10,"-":22}},{"path":"src/main/java/seedu/address/logic/parser/ParserFunction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":" * Provides an interface for anonymous functions to obey general","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":" * syntactic rules for parsing of queries.","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":" *","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":" * @param \u003cT\u003e Type parameter for the function parameters","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":" * @param \u003cR\u003e Type parameter for the function return type","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"@FunctionalInterface","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"public interface ParserFunction\u003cT, R\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"    R apply(T t) throws ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"Sheemo":15}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DUPLICATE_PERSONS_INDEX;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"Bentimate"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"Bentimate"},"content":"import java.util.List;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"Bentimate"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.tag.Module;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"            throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"EvitanRelta"},"content":"        if (trimmedPhone.isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"EvitanRelta"},"content":"            return null;","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"EvitanRelta"},"content":"        if (trimmedAddress.isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"EvitanRelta"},"content":"            return null;","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"Sheemo"},"content":"     * Parses a {@code String telegram} into an {@code Telegram}.","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"Sheemo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"Sheemo"},"content":"     * @throws ParseException if the given {@code telegram} is invalid.","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":102,"author":{"gitId":"Sheemo"},"content":"    public static Telegram parseTelegram(String telegram) throws ParseException {","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"Sheemo"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"Sheemo"},"content":"        String trimmedHandle \u003d telegram.trim();","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"Sheemo"},"content":"        if (trimmedHandle.isEmpty()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"Sheemo"},"content":"            return null;","lastModifiedDate":"2023-03-31"},{"lineNumber":107,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"Sheemo"},"content":"        if (!Telegram.isValidHandle(trimmedHandle)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"Sheemo"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"Sheemo"},"content":"        return new Telegram(trimmedHandle);","lastModifiedDate":"2023-03-31"},{"lineNumber":112,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"EvitanRelta"},"content":"        if (trimmedEmail.isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"EvitanRelta"},"content":"            return null;","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"EvitanRelta"},"content":"     * Parses a {@code String education} into an {@code Education}.","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"EvitanRelta"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"EvitanRelta"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"EvitanRelta"},"content":"     * @throws ParseException if the given {@code education} is invalid.","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"EvitanRelta"},"content":"    public static Education parseEducation(String education) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"EvitanRelta"},"content":"        requireNonNull(education);","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"EvitanRelta"},"content":"        String trimmedEducation \u003d education.trim();","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"EvitanRelta"},"content":"        if (!Education.isValidEducation(trimmedEducation)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"EvitanRelta"},"content":"            throw new ParseException(Education.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"EvitanRelta"},"content":"        return new Education(trimmedEducation);","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"EvitanRelta"},"content":"     * Parses a {@code String remark} into an {@code Remark}.","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"EvitanRelta"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"EvitanRelta"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"EvitanRelta"},"content":"     * Doesn\u0027t throw {@code ParseException} as {@code remark} allows all characters,","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"EvitanRelta"},"content":"     * and thus is never invalid.","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"EvitanRelta"},"content":"    public static Remark parseRemark(String remark) {","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"EvitanRelta"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"EvitanRelta"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"EvitanRelta"},"content":"        if (trimmedRemark.isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"EvitanRelta"},"content":"            return null;","lastModifiedDate":"2023-03-22"},{"lineNumber":159,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":160,"author":{"gitId":"EvitanRelta"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2023-03-17"},{"lineNumber":161,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":162,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":190,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":191,"author":{"gitId":"wendy0107"},"content":"    //@@author wendy0107","lastModifiedDate":"2023-03-31"},{"lineNumber":192,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":193,"author":{"gitId":"wendy0107"},"content":"     * Parses a {@code String module} into a {@code Module}.","lastModifiedDate":"2023-03-31"},{"lineNumber":194,"author":{"gitId":"wendy0107"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-16"},{"lineNumber":195,"author":{"gitId":"wendy0107"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":196,"author":{"gitId":"wendy0107"},"content":"     * @throws ParseException if the given {@code module} is invalid.","lastModifiedDate":"2023-03-31"},{"lineNumber":197,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":198,"author":{"gitId":"wendy0107"},"content":"    public static Module parseModule(String module) throws ParseException {","lastModifiedDate":"2023-03-31"},{"lineNumber":199,"author":{"gitId":"wendy0107"},"content":"        requireNonNull(module);","lastModifiedDate":"2023-03-31"},{"lineNumber":200,"author":{"gitId":"wendy0107"},"content":"        String trimmedModule \u003d module.trim();","lastModifiedDate":"2023-03-31"},{"lineNumber":201,"author":{"gitId":"wendy0107"},"content":"        if (!Module.isValidModuleName(trimmedModule)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":202,"author":{"gitId":"wendy0107"},"content":"            throw new ParseException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":203,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":204,"author":{"gitId":"wendy0107"},"content":"        return new Module(trimmedModule);","lastModifiedDate":"2023-03-31"},{"lineNumber":205,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":206,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":207,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":208,"author":{"gitId":"wendy0107"},"content":"     * Parses {@code Collection\u003cString\u003e modules} into a {@code Set\u003cModule\u003e}.","lastModifiedDate":"2023-03-31"},{"lineNumber":209,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":210,"author":{"gitId":"wendy0107"},"content":"    public static Set\u003cModule\u003e parseModules(Collection\u003cString\u003e modules) throws ParseException {","lastModifiedDate":"2023-03-31"},{"lineNumber":211,"author":{"gitId":"wendy0107"},"content":"        requireNonNull(modules);","lastModifiedDate":"2023-03-31"},{"lineNumber":212,"author":{"gitId":"wendy0107"},"content":"        final Set\u003cModule\u003e moduleSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":213,"author":{"gitId":"wendy0107"},"content":"        for (String moduleName : modules) {","lastModifiedDate":"2023-03-31"},{"lineNumber":214,"author":{"gitId":"wendy0107"},"content":"            moduleSet.add(parseModule(moduleName));","lastModifiedDate":"2023-03-31"},{"lineNumber":215,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":216,"author":{"gitId":"wendy0107"},"content":"        return moduleSet;","lastModifiedDate":"2023-03-31"},{"lineNumber":217,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":218,"author":{"gitId":"wendy0107"},"content":"    //@@author","lastModifiedDate":"2023-03-31"},{"lineNumber":219,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"Bentimate"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"Bentimate"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"Bentimate"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-30"},{"lineNumber":223,"author":{"gitId":"Bentimate"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":224,"author":{"gitId":"Bentimate"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-30"},{"lineNumber":225,"author":{"gitId":"Bentimate"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-30"},{"lineNumber":226,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":227,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":228,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":229,"author":{"gitId":"EvitanRelta"},"content":"     * Parse a prefix in {@code argMultimap} with {@code parserFunction} only if","lastModifiedDate":"2023-03-31"},{"lineNumber":230,"author":{"gitId":"EvitanRelta"},"content":"     * it\u0027s present in {@code argMultimap}.","lastModifiedDate":"2023-03-31"},{"lineNumber":231,"author":{"gitId":"EvitanRelta"},"content":"     * {@code Optional} class can\u0027t be used for this, as {@code parserFunction}","lastModifiedDate":"2023-03-31"},{"lineNumber":232,"author":{"gitId":"EvitanRelta"},"content":"     * throws a checked exception.","lastModifiedDate":"2023-03-31"},{"lineNumber":233,"author":{"gitId":"EvitanRelta"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":234,"author":{"gitId":"EvitanRelta"},"content":"     * @throws ParseException if {@code parserFunction} throws one.","lastModifiedDate":"2023-03-31"},{"lineNumber":235,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":236,"author":{"gitId":"Bentimate"},"content":"    public static \u003cT\u003e T parsePrefixIfPresent(ArgumentMultimap argMultimap, Prefix prefix,","lastModifiedDate":"2023-03-30"},{"lineNumber":237,"author":{"gitId":"EvitanRelta"},"content":"            ParserFunction\u003cString, ? extends T\u003e parserFunction) throws ParseException {","lastModifiedDate":"2023-03-31"},{"lineNumber":238,"author":{"gitId":"Bentimate"},"content":"        String retArg \u003d argMultimap.getValue(prefix).orElse(null);","lastModifiedDate":"2023-03-30"},{"lineNumber":239,"author":{"gitId":"Bentimate"},"content":"        if (retArg \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":240,"author":{"gitId":"Bentimate"},"content":"            return null;","lastModifiedDate":"2023-03-30"},{"lineNumber":241,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":242,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":243,"author":{"gitId":"Bentimate"},"content":"        return parserFunction.apply(retArg);","lastModifiedDate":"2023-03-30"},{"lineNumber":244,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":245,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":246,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":247,"author":{"gitId":"alextang809"},"content":"     * Parses {@code oneBasedIndexes} into a list of {@code Index} and returns it.","lastModifiedDate":"2023-03-29"},{"lineNumber":248,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":249,"author":{"gitId":"EvitanRelta"},"content":"     * @throws ParseException if any of the specified indexes are invalid (not positive integers).","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":251,"author":{"gitId":"alextang809"},"content":"    public static List\u003cIndex\u003e parseIndexes(String oneBasedIndexes) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":252,"author":{"gitId":"alextang809"},"content":"        String[] indexStrings \u003d oneBasedIndexes.trim().split(\"\\\\s+\");","lastModifiedDate":"2023-03-29"},{"lineNumber":253,"author":{"gitId":"alextang809"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":254,"author":{"gitId":"Bentimate"},"content":"            List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":255,"author":{"gitId":"Bentimate"},"content":"            for (String index : indexStrings) {","lastModifiedDate":"2023-04-07"},{"lineNumber":256,"author":{"gitId":"Bentimate"},"content":"                int indexNo \u003d Integer.parseInt(index);","lastModifiedDate":"2023-04-07"},{"lineNumber":257,"author":{"gitId":"Bentimate"},"content":"                Index ind \u003d Index.fromOneBased(indexNo);","lastModifiedDate":"2023-04-07"},{"lineNumber":258,"author":{"gitId":"Bentimate"},"content":"                if (indexes.contains(ind)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":259,"author":{"gitId":"Bentimate"},"content":"                    throw new ParseException(MESSAGE_DUPLICATE_PERSONS_INDEX);","lastModifiedDate":"2023-04-07"},{"lineNumber":260,"author":{"gitId":"Bentimate"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":261,"author":{"gitId":"Bentimate"},"content":"                indexes.add(ind);","lastModifiedDate":"2023-04-07"},{"lineNumber":262,"author":{"gitId":"Bentimate"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":263,"author":{"gitId":"Bentimate"},"content":"            return indexes;","lastModifiedDate":"2023-04-07"},{"lineNumber":264,"author":{"gitId":"EvitanRelta"},"content":"        } catch (NumberFormatException // Not an int, thrown by \u0027Integer.parseInt\u0027.","lastModifiedDate":"2023-04-08"},{"lineNumber":265,"author":{"gitId":"EvitanRelta"},"content":"                | IndexOutOfBoundsException e // Not positive int, thrown by \u0027Index.fromOneBased\u0027.","lastModifiedDate":"2023-04-08"},{"lineNumber":266,"author":{"gitId":"EvitanRelta"},"content":"        ) {","lastModifiedDate":"2023-04-08"},{"lineNumber":267,"author":{"gitId":"EvitanRelta"},"content":"            throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":268,"author":{"gitId":"alextang809"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":269,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Sheemo":18,"wendy0107":33,"Bentimate":31,"EvitanRelta":60,"alextang809":7,"-":121}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import java.util.List;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"    private final String placeholderText;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"    private final boolean isOptionalPrefix;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"    private final boolean isRepeatablePrefix;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"    private final List\u003cString\u003e examples;","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"EvitanRelta"},"content":"    private Prefix(String prefix, String placeholderText, boolean isOptionalPrefix,","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"EvitanRelta"},"content":"            boolean isRepeatablePrefix, List\u003cString\u003e examples) {","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"EvitanRelta"},"content":"        this.placeholderText \u003d placeholderText;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"        this.isOptionalPrefix \u003d isOptionalPrefix;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"        this.isRepeatablePrefix \u003d isRepeatablePrefix;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"        this.examples \u003d List.copyOf(examples);","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"     * Constructs a {@code Prefix} with given prefix and placeholder text.","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"     * @param prefix Prefix value.","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"     * @param placeholderText Placeholder text describing the expected data for the prefix.","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"EvitanRelta"},"content":"    public Prefix(String prefix, String placeholderText) {","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"        //Solution below adapted from https://github.com/AY2223S1-CS2103T-T12-2/tp","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"        this(prefix, placeholderText, false, false, List.of());","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"EvitanRelta"},"content":"     * Constructs a {@code Prefix} with given prefix and an no placeholder text.","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"EvitanRelta"},"content":"     * @param prefix Prefix value.","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"        this(prefix, \"\");","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"EvitanRelta"},"content":"     * Returns true if this {@code Prefix} is just a placeholder for","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"EvitanRelta"},"content":"     * index/keywords arguments.","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"EvitanRelta"},"content":"     * @return Whether this is a placeholder.","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"EvitanRelta"},"content":"    public boolean isPlaceholder() {","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"EvitanRelta"},"content":"        return getPrefix().isEmpty();","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"EvitanRelta"},"content":"    public String getPlaceholderText() {","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"EvitanRelta"},"content":"        return placeholderText;","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"EvitanRelta"},"content":"    /** Returns the example values that this {@code Prefix} can take. */","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"EvitanRelta"},"content":"    public List\u003cString\u003e getExamples() {","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"EvitanRelta"},"content":"        return examples;","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"EvitanRelta"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":72,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"EvitanRelta"},"content":"     * Returns true if this prefix is optional in a command.","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"EvitanRelta"},"content":"    public boolean isOptional() {","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"EvitanRelta"},"content":"        return isOptionalPrefix;","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"EvitanRelta"},"content":"     * Returns true if this prefix can be repeated multiple times in a command.","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"EvitanRelta"},"content":"    public boolean isRepeatable() {","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"EvitanRelta"},"content":"        return isRepeatablePrefix;","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"EvitanRelta"},"content":"     * Returns a copy of this {@code Prefix}, but as an optional prefix.","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"EvitanRelta"},"content":"    public Prefix asOptional() {","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"EvitanRelta"},"content":"        return new Prefix(getPrefix(), getPlaceholderText(), true, isRepeatable(), getExamples());","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"EvitanRelta"},"content":"     * Returns a copy of this {@code Prefix}, but as an optional prefix.","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"EvitanRelta"},"content":"    public Prefix asRepeatable() {","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"EvitanRelta"},"content":"        return new Prefix(getPrefix(), getPlaceholderText(), isOptional(), true, getExamples());","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"EvitanRelta"},"content":"     * Returns a copy of this {@code Prefix}, but set the stored example values","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"EvitanRelta"},"content":"     * to {@code exampleValues}. The examples won\u0027t be accounted for in {@code Prefix::equals}.","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"EvitanRelta"},"content":"     * @param exampleValues Example values that the prefix can take.","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"EvitanRelta"},"content":"    public Prefix setExamples(List\u003cString\u003e exampleValues) {","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"EvitanRelta"},"content":"        return new Prefix(getPrefix(), getPlaceholderText(), isOptional(), isRepeatable(), exampleValues);","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":108,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"EvitanRelta"},"content":"    public Prefix setExamples(String... exampleValues) {","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"EvitanRelta"},"content":"        return this.setExamples(Arrays.asList(exampleValues));","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"EvitanRelta"},"content":"    /** Returns the example usage of this {@code Prefix}. */","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"EvitanRelta"},"content":"    public String toExampleString() {","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"EvitanRelta"},"content":"        return getExamples().isEmpty()","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"EvitanRelta"},"content":"            ? \"\"","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"EvitanRelta"},"content":"            : getExamples().stream()","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"EvitanRelta"},"content":"                    .map(example -\u003e getPrefix() + example)","lastModifiedDate":"2023-04-08"},{"lineNumber":119,"author":{"gitId":"EvitanRelta"},"content":"                    .collect(Collectors.joining(\" \"));","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"EvitanRelta"},"content":"    /** Returns the prefix with it\u0027s a placeholder text as the value. (eg. n/NAME, p/PHONE) */","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"EvitanRelta"},"content":"    public String toPlaceholderString() {","lastModifiedDate":"2023-04-07"},{"lineNumber":124,"author":{"gitId":"EvitanRelta"},"content":"        String output \u003d getPrefix() + getPlaceholderText();","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"EvitanRelta"},"content":"        output \u003d isOptional() ? String.format(\"[%s]\", output) : output;","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"EvitanRelta"},"content":"        output \u003d isRepeatable() ? output + \"...\" : output;","lastModifiedDate":"2023-04-07"},{"lineNumber":127,"author":{"gitId":"EvitanRelta"},"content":"        return output;","lastModifiedDate":"2023-04-07"},{"lineNumber":128,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":129,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":145,"author":{"gitId":"EvitanRelta"},"content":"        return !getPrefix().isBlank()","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"EvitanRelta"},"content":"                ? otherPrefix.getPrefix().equals(getPrefix())","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"EvitanRelta"},"content":"                : otherPrefix.getPrefix().isBlank()","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"EvitanRelta"},"content":"                        \u0026\u0026 otherPrefix.getPlaceholderText().equals(getPlaceholderText());","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"EvitanRelta":112,"-":38}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bentimate"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Bentimate"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"// import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Bentimate"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Bentimate"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Bentimate"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Bentimate"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Bentimate"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Bentimate"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Bentimate"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Bentimate"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Bentimate"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Bentimate"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Bentimate"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Bentimate"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"        String[] splitArr \u003d args.stripLeading().split(\"\\\\s+\", 2);","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"        assert splitArr.length \u003e\u003d 1 : \"\u0027splitArr\u0027 should have at least 1 element\";","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"        String indexStr \u003d splitArr[0];","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"        Remark remark \u003d splitArr.length !\u003d 2","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"            ? null","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"            : new Remark(splitArr[1]);","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"        if (indexStr.isEmpty()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"EvitanRelta"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"        Index index \u003d ParserUtil.parseIndex(indexStr);","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"        return new RemarkCommand(index, remark);","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Bentimate"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Sheemo":3,"Bentimate":26,"EvitanRelta":9}},{"path":"src/main/java/seedu/address/logic/parser/ShowRemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bentimate"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Bentimate"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.commands.ShowRemarkCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Bentimate"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Bentimate"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Bentimate"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"Bentimate"},"content":"public class ShowRemarkCommandParser implements Parser\u003cShowRemarkCommand\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Bentimate"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Bentimate"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Bentimate"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Bentimate"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Bentimate"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Bentimate"},"content":"    public ShowRemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"EvitanRelta"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"        if (args.isBlank() || args.trim().contains(\" \")) {","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowRemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"Bentimate"},"content":"        Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"Bentimate"},"content":"        return new ShowRemarkCommand(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"Bentimate"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"Bentimate":22,"EvitanRelta":7}},{"path":"src/main/java/seedu/address/logic/parser/predicates/ContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bentimate"},"content":"package seedu.address.logic.parser.predicates;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"Bentimate"},"content":"import java.util.List;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"Bentimate"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"Bentimate"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"Bentimate"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.tag.Module;","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"Bentimate"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"Bentimate"},"content":" * Predicate that returns true if all keywords are contained in the Person\u0027s fields (Name, Address, Phone).","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"Bentimate"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"Bentimate"},"content":"public class ContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"Bentimate"},"content":"    private final ArgumentMultimap keywords;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"Bentimate"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"Bentimate"},"content":"     * Constructs a FullMatchKeywordsPredicate.","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"Bentimate"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"Bentimate"},"content":"     * @param keywords list of keywords to match with the Person\u0027s fields","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"Bentimate"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"Bentimate"},"content":"    public ContainsKeywordsPredicate(ArgumentMultimap keywords) {","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"Bentimate"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"Bentimate"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"Bentimate"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"Bentimate"},"content":"        boolean hasMatching \u003d false;","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"Bentimate"},"content":"            hasMatching \u003d hasMatching || values.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"Bentimate"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsPartialIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"Bentimate"},"content":"                            person.getName().fullName, keyword));","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_PHONE);","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"Bentimate"},"content":"            hasMatching \u003d hasMatching || values.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"Bentimate"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsPartialIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"Bentimate"},"content":"                            person.getOptionalPhone().map(phone -\u003e phone.value).orElse(null), keyword));","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_EMAIL);","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"Bentimate"},"content":"            hasMatching \u003d hasMatching || values.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"Bentimate"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsPartialIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"Bentimate"},"content":"                            person.getOptionalEmail().map(email -\u003e email.value).orElse(null), keyword));","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_ADDRESS);","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"Bentimate"},"content":"            hasMatching \u003d hasMatching || values.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"Bentimate"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsPartialIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"Bentimate"},"content":"                            person.getOptionalAddress().map(address -\u003e address.value).orElse(null), keyword));","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_EDUCATION).isPresent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_EDUCATION);","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"Bentimate"},"content":"            hasMatching \u003d hasMatching || values.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"Bentimate"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsPartialIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"Bentimate"},"content":"                            person.getOptionalEducation().map(education -\u003e education.value)","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"Bentimate"},"content":"                                    .orElse(null), keyword));","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_TELEGRAM);","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"Bentimate"},"content":"            hasMatching \u003d hasMatching || values.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"Bentimate"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsPartialIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"Bentimate"},"content":"                            person.getOptionalTelegram().map(telegram -\u003e telegram.value)","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"Bentimate"},"content":"                                    .orElse(null), keyword));","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_REMARK);","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"Bentimate"},"content":"            hasMatching \u003d hasMatching || values.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"Bentimate"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsPartialIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"Bentimate"},"content":"                            person.getOptionalRemark().map(remark -\u003e remark.value)","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"Bentimate"},"content":"                                    .orElse(null), keyword));","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":95,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_TAG);","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"Bentimate"},"content":"            Set\u003cTag\u003e personTags \u003d person.getTags();","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e personTagNames \u003d personTags.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"Bentimate"},"content":"                    .map(tag -\u003e tag.tagName)","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"Bentimate"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"Bentimate"},"content":"            hasMatching \u003d hasMatching || values.stream().anyMatch(tag -\u003e personTagNames.contains(tag));","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":102,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_MODULE).isPresent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_MODULE);","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"Bentimate"},"content":"            Set\u003cModule\u003e personModules \u003d person.getModules();","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e personModuleNames \u003d personModules.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":107,"author":{"gitId":"Bentimate"},"content":"                    .map(module -\u003e module.moduleName)","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"Bentimate"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"EvitanRelta"},"content":"            hasMatching \u003d hasMatching || values.stream().anyMatch(module -\u003e personModuleNames.contains(module));","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":112,"author":{"gitId":"Bentimate"},"content":"        return hasMatching;","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":114,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":115,"author":{"gitId":"Bentimate"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":116,"author":{"gitId":"Bentimate"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-31"},{"lineNumber":117,"author":{"gitId":"Bentimate"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"Bentimate"},"content":"                || (other instanceof ContainsKeywordsPredicate","lastModifiedDate":"2023-03-31"},{"lineNumber":119,"author":{"gitId":"Bentimate"},"content":"                \u0026\u0026 keywords.equals(((ContainsKeywordsPredicate) other).keywords));","lastModifiedDate":"2023-03-31"},{"lineNumber":120,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":121,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":122,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":123,"author":{"gitId":"Bentimate"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"Bentimate":108,"EvitanRelta":15}},{"path":"src/main/java/seedu/address/logic/parser/predicates/FullMatchKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bentimate"},"content":"package seedu.address.logic.parser.predicates;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"alextang809"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Bentimate"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"alextang809"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Bentimate"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"alextang809"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.tag.Module;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"alextang809"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"alextang809"},"content":" * Predicate that returns true if all keywords are contained in the Person\u0027s fields (Name, Address, Phone).","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"alextang809"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"Bentimate"},"content":"public class FullMatchKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Bentimate"},"content":"    private final ArgumentMultimap keywords;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"Bentimate"},"content":"     * Constructs a FullMatchKeywordsPredicate.","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"alextang809"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"alextang809"},"content":"     * @param keywords list of keywords to match with the Person\u0027s fields","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"Bentimate"},"content":"    public FullMatchKeywordsPredicate(ArgumentMultimap keywords) {","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"alextang809"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"alextang809"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Bentimate"},"content":"        boolean hasMatching \u003d true;","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"Bentimate"},"content":"            hasMatching \u003d hasMatching \u0026\u0026 values.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"EvitanRelta"},"content":"                    .allMatch(keyword -\u003e StringUtil.containsPartialIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"Bentimate"},"content":"                            person.getName().fullName, keyword));","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_PHONE);","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Bentimate"},"content":"            hasMatching \u003d hasMatching \u0026\u0026 values.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"EvitanRelta"},"content":"                    .allMatch(keyword -\u003e StringUtil.containsPartialIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"Bentimate"},"content":"                            person.getOptionalPhone().map(phone -\u003e phone.value).orElse(null), keyword));","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_EMAIL);","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Bentimate"},"content":"            hasMatching \u003d hasMatching \u0026\u0026 values.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"EvitanRelta"},"content":"                    .allMatch(keyword -\u003e StringUtil.containsPartialIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"Bentimate"},"content":"                            person.getOptionalEmail().map(email -\u003e email.value).orElse(null), keyword));","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_ADDRESS);","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Bentimate"},"content":"            hasMatching \u003d hasMatching \u0026\u0026 values.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"EvitanRelta"},"content":"                    .allMatch(keyword -\u003e StringUtil.containsPartialIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"Bentimate"},"content":"                            person.getOptionalAddress().map(address -\u003e address.value).orElse(null), keyword));","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_EDUCATION).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_EDUCATION);","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"Bentimate"},"content":"            hasMatching \u003d hasMatching \u0026\u0026 values.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"EvitanRelta"},"content":"                    .allMatch(keyword -\u003e StringUtil.containsPartialIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"Bentimate"},"content":"                            person.getOptionalEducation().map(education -\u003e education.value)","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"Bentimate"},"content":"                                    .orElse(null), keyword));","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_TELEGRAM);","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"Bentimate"},"content":"            hasMatching \u003d hasMatching \u0026\u0026 values.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"Bentimate"},"content":"                    .allMatch(keyword -\u003e StringUtil.containsPartialIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"Bentimate"},"content":"                            person.getOptionalTelegram().map(telegram -\u003e telegram.value)","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"Bentimate"},"content":"                                    .orElse(null), keyword));","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_REMARK);","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"Bentimate"},"content":"            hasMatching \u003d hasMatching \u0026\u0026 values.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"EvitanRelta"},"content":"                    .allMatch(keyword -\u003e StringUtil.containsPartialIgnoreCase(","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"Bentimate"},"content":"                            person.getOptionalRemark().map(remark -\u003e remark.value)","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"Bentimate"},"content":"                                    .orElse(null), keyword));","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_TAG);","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Bentimate"},"content":"            Set\u003cTag\u003e personTags \u003d person.getTags();","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e personTagNames \u003d personTags.stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"Bentimate"},"content":"                    .map(tag -\u003e tag.tagName)","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"Bentimate"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"EvitanRelta"},"content":"            hasMatching \u003d hasMatching \u0026\u0026 values.stream().allMatch(tag -\u003e personTagNames.contains(tag));","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"Bentimate"},"content":"        //@@author Bentimate","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"Bentimate"},"content":"        if (keywords.getValue(PREFIX_MODULE).isPresent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e values \u003d keywords.getAllValues(PREFIX_MODULE);","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"Bentimate"},"content":"            Set\u003cModule\u003e personModules \u003d person.getModules();","lastModifiedDate":"2023-03-31"},{"lineNumber":107,"author":{"gitId":"Bentimate"},"content":"            List\u003cString\u003e personModuleNames \u003d personModules.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"Bentimate"},"content":"                    .map(module -\u003e module.moduleName)","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"Bentimate"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"Bentimate"},"content":"            hasMatching \u003d hasMatching \u0026\u0026 values.stream().allMatch(module -\u003e personModuleNames.contains(module));","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"Bentimate"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"Bentimate"},"content":"        //@@author","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"Bentimate"},"content":"        return hasMatching;","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"alextang809"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"alextang809"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"alextang809"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"Bentimate"},"content":"                || (other instanceof FullMatchKeywordsPredicate","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"Bentimate"},"content":"                \u0026\u0026 keywords.equals(((FullMatchKeywordsPredicate) other).keywords));","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"alextang809"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"alextang809"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"Bentimate":81,"EvitanRelta":18,"alextang809":26}},{"path":"src/main/java/seedu/address/logic/parser/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bentimate"},"content":"package seedu.address.logic.parser.predicates;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"Bentimate"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsFullIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Bentimate":3,"-":29}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"EvitanRelta"},"content":"     * Returns true if a person in the address book can be replaced by another","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"EvitanRelta"},"content":"     * without causing any duplicates of person in the address book.","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"EvitanRelta"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"EvitanRelta"},"content":"     * @param toBeReplaced The person to be replaced.","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"EvitanRelta"},"content":"     * @param replacement The replacement person.","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"EvitanRelta"},"content":"    public boolean canReplacePerson(Person toBeReplaced, Person replacement) {","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"EvitanRelta"},"content":"        requireAllNonNull(toBeReplaced, replacement);","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"EvitanRelta"},"content":"        return persons.willHaveDuplicatesAftReplacement(toBeReplaced, replacement);","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"EvitanRelta"},"content":"     * Returns a list of all existing tag values (without duplicates) contained","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"EvitanRelta"},"content":"     * in the person list.","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"EvitanRelta"},"content":"    public ArrayList\u003cString\u003e getExistingTagValues() {","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"EvitanRelta"},"content":"        return persons.getExistingTagValues();","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":119,"author":{"gitId":"EvitanRelta"},"content":"     * Returns a list of all existing module values (without duplicates) contained","lastModifiedDate":"2023-03-31"},{"lineNumber":120,"author":{"gitId":"EvitanRelta"},"content":"     * in the person list.","lastModifiedDate":"2023-03-31"},{"lineNumber":121,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":122,"author":{"gitId":"EvitanRelta"},"content":"    public ArrayList\u003cString\u003e getExistingModuleValues() {","lastModifiedDate":"2023-03-31"},{"lineNumber":123,"author":{"gitId":"EvitanRelta"},"content":"        return persons.getExistingModuleValues();","lastModifiedDate":"2023-03-31"},{"lineNumber":124,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":125,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":126,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":127,"author":{"gitId":"EvitanRelta"},"content":"     * Returns a list of all existing education values (without duplicates) contained","lastModifiedDate":"2023-03-31"},{"lineNumber":128,"author":{"gitId":"EvitanRelta"},"content":"     * in the person list.","lastModifiedDate":"2023-03-31"},{"lineNumber":129,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":130,"author":{"gitId":"EvitanRelta"},"content":"    public ArrayList\u003cString\u003e getExistingEducationValues() {","lastModifiedDate":"2023-03-31"},{"lineNumber":131,"author":{"gitId":"EvitanRelta"},"content":"        return persons.getExistingEducationValues();","lastModifiedDate":"2023-03-31"},{"lineNumber":132,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":133,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"EvitanRelta":38,"-":120}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"EvitanRelta"},"content":"     * Returns true if a person in the address book can be replaced by another","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"EvitanRelta"},"content":"     * without causing any duplicates of person in the address book.","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"EvitanRelta"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"EvitanRelta"},"content":"     * @param toBeReplaced The person to be replaced.","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"EvitanRelta"},"content":"     * @param replacement The replacement person.","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"EvitanRelta"},"content":"    boolean canReplacePerson(Person toBeReplaced, Person replacement);","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":98,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"wendy0107"},"content":"     * Updates the person to be shown as an empty person.","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"wendy0107"},"content":"    void setDefaultShowPerson();","lastModifiedDate":"2023-04-02"},{"lineNumber":102,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":103,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"wendy0107"},"content":"     * Updates the person to be shown as the person who matches the predicate.","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"wendy0107"},"content":"     * @param predicate Full name of person to be shown.","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":107,"author":{"gitId":"wendy0107"},"content":"    void updateShowPerson(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":110,"author":{"gitId":"wendy0107"},"content":"     * Returns the person to be shown in an ObservableList.","lastModifiedDate":"2023-04-04"},{"lineNumber":111,"author":{"gitId":"wendy0107"},"content":"     * @return ObservableList containing the person be shown.","lastModifiedDate":"2023-04-04"},{"lineNumber":112,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":113,"author":{"gitId":"wendy0107"},"content":"    ObservableList\u003cPerson\u003e getShowPerson();","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":116,"author":{"gitId":"wendy0107"},"content":"     * Checks if the versionedAddressBook has prior history to be undone.","lastModifiedDate":"2023-04-04"},{"lineNumber":117,"author":{"gitId":"wendy0107"},"content":"     * @return true if undo is possible and false otherwise.","lastModifiedDate":"2023-04-04"},{"lineNumber":118,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":119,"author":{"gitId":"wendy0107"},"content":"    boolean checkUndoable();","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"wendy0107"},"content":"     * Checks if the versionedAddressBook has recent undo history to be redone.","lastModifiedDate":"2023-04-04"},{"lineNumber":123,"author":{"gitId":"wendy0107"},"content":"     * @return true if redo is possible and false otherwise.","lastModifiedDate":"2023-04-04"},{"lineNumber":124,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":125,"author":{"gitId":"wendy0107"},"content":"    boolean checkRedoable();","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":128,"author":{"gitId":"EvitanRelta"},"content":"     * Restores a previous version of AddressBook, and returns the name of the","lastModifiedDate":"2023-04-07"},{"lineNumber":129,"author":{"gitId":"EvitanRelta"},"content":"     * command that was undone.","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"EvitanRelta"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":131,"author":{"gitId":"EvitanRelta"},"content":"     * @return The name of the command that was undone.","lastModifiedDate":"2023-04-07"},{"lineNumber":132,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":133,"author":{"gitId":"EvitanRelta"},"content":"    String undoAddressBook();","lastModifiedDate":"2023-04-07"},{"lineNumber":134,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":136,"author":{"gitId":"EvitanRelta"},"content":"     * Restores an undone version of AddressBook, and returns the name of the command","lastModifiedDate":"2023-04-07"},{"lineNumber":137,"author":{"gitId":"EvitanRelta"},"content":"     * that was redone.","lastModifiedDate":"2023-04-07"},{"lineNumber":138,"author":{"gitId":"EvitanRelta"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"EvitanRelta"},"content":"     * @return The name of the command that was redone.","lastModifiedDate":"2023-04-07"},{"lineNumber":140,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":141,"author":{"gitId":"EvitanRelta"},"content":"    String redoAddressBook();","lastModifiedDate":"2023-04-07"},{"lineNumber":142,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":144,"author":{"gitId":"EvitanRelta"},"content":"     * Saves the current version of AddressBook and the last executed command.","lastModifiedDate":"2023-04-06"},{"lineNumber":145,"author":{"gitId":"EvitanRelta"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":146,"author":{"gitId":"EvitanRelta"},"content":"     * @param lastExecutedCommand The name of the command to be updated to the command history.","lastModifiedDate":"2023-04-06"},{"lineNumber":147,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":148,"author":{"gitId":"EvitanRelta"},"content":"    void commitAddressBook(String lastExecutedCommand);","lastModifiedDate":"2023-04-06"},{"lineNumber":149,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"EvitanRelta"},"content":"     * Returns a list of all existing tag values (without duplicates) contained","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"EvitanRelta"},"content":"     * in the person list.","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"EvitanRelta"},"content":"    ArrayList\u003cString\u003e getExistingTagValues();","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":156,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":157,"author":{"gitId":"EvitanRelta"},"content":"     * Returns a list of all existing module values (without duplicates) contained","lastModifiedDate":"2023-03-31"},{"lineNumber":158,"author":{"gitId":"EvitanRelta"},"content":"     * in the person list.","lastModifiedDate":"2023-03-31"},{"lineNumber":159,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":160,"author":{"gitId":"EvitanRelta"},"content":"    ArrayList\u003cString\u003e getExistingModuleValues();","lastModifiedDate":"2023-03-31"},{"lineNumber":161,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":162,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":163,"author":{"gitId":"EvitanRelta"},"content":"     * Returns a list of all existing education values (without duplicates) contained","lastModifiedDate":"2023-03-31"},{"lineNumber":164,"author":{"gitId":"EvitanRelta"},"content":"     * in the person list.","lastModifiedDate":"2023-03-31"},{"lineNumber":165,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":166,"author":{"gitId":"EvitanRelta"},"content":"    ArrayList\u003cString\u003e getExistingEducationValues();","lastModifiedDate":"2023-03-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wendy0107":39,"EvitanRelta":41,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.person.FullNamePredicate;","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"    private static final FullNamePredicate DEFAULT_EMPTY_NAME_PREDICATE \u003d new FullNamePredicate(\"\");","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"    private final FilteredList\u003cPerson\u003e targetPerson;","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"    private final VersionedAddressBook versionedAddressBook;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"EvitanRelta"},"content":"        versionedAddressBook \u003d new VersionedAddressBook(addressBook);","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"        targetPerson \u003d new FilteredList\u003cPerson\u003e(versionedAddressBook.getPersonList());","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"        setDefaultShowPerson();","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(versionedAddressBook.getPersonList());","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"wendy0107"},"content":"        versionedAddressBook.resetData(addressBook);","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"wendy0107"},"content":"        return versionedAddressBook;","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"wendy0107"},"content":"        return versionedAddressBook.hasPerson(person);","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"EvitanRelta"},"content":"    @Override","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"EvitanRelta"},"content":"    public boolean canReplacePerson(Person toBeReplaced, Person replacement) {","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"EvitanRelta"},"content":"        requireAllNonNull(toBeReplaced, replacement);","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"EvitanRelta"},"content":"        return versionedAddressBook.canReplacePerson(toBeReplaced, replacement);","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"wendy0107"},"content":"        versionedAddressBook.removePerson(target);","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"wendy0107"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-04-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":116,"author":{"gitId":"wendy0107"},"content":"        versionedAddressBook.addPerson(person);","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":123,"author":{"gitId":"wendy0107"},"content":"        versionedAddressBook.setPerson(target, editedPerson);","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"wendy0107"},"content":"    public boolean checkUndoable() {","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"wendy0107"},"content":"        return versionedAddressBook.checkUndoable();","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"wendy0107"},"content":"    public boolean checkRedoable() {","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"wendy0107"},"content":"        return versionedAddressBook.checkRedoable();","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"EvitanRelta"},"content":"    public String undoAddressBook() {","lastModifiedDate":"2023-04-07"},{"lineNumber":138,"author":{"gitId":"EvitanRelta"},"content":"        return versionedAddressBook.undo();","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":141,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"EvitanRelta"},"content":"    public String redoAddressBook() {","lastModifiedDate":"2023-04-07"},{"lineNumber":143,"author":{"gitId":"EvitanRelta"},"content":"        return versionedAddressBook.redo();","lastModifiedDate":"2023-04-07"},{"lineNumber":144,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"EvitanRelta"},"content":"    public void commitAddressBook(String lastExecutedCommand) {","lastModifiedDate":"2023-04-06"},{"lineNumber":148,"author":{"gitId":"EvitanRelta"},"content":"        versionedAddressBook.commit(lastExecutedCommand);","lastModifiedDate":"2023-04-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":153,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":171,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":172,"author":{"gitId":"wendy0107"},"content":"    public void setDefaultShowPerson() {","lastModifiedDate":"2023-04-02"},{"lineNumber":173,"author":{"gitId":"wendy0107"},"content":"        targetPerson.setPredicate(DEFAULT_EMPTY_NAME_PREDICATE);","lastModifiedDate":"2023-04-02"},{"lineNumber":174,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":175,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":176,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":177,"author":{"gitId":"wendy0107"},"content":"    public void updateShowPerson(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-26"},{"lineNumber":178,"author":{"gitId":"wendy0107"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-26"},{"lineNumber":179,"author":{"gitId":"wendy0107"},"content":"        targetPerson.setPredicate(predicate);","lastModifiedDate":"2023-03-26"},{"lineNumber":180,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":181,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":182,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":183,"author":{"gitId":"wendy0107"},"content":"    public ObservableList\u003cPerson\u003e getShowPerson() {","lastModifiedDate":"2023-03-26"},{"lineNumber":184,"author":{"gitId":"wendy0107"},"content":"        return targetPerson;","lastModifiedDate":"2023-03-26"},{"lineNumber":185,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":186,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":187,"author":{"gitId":"EvitanRelta"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"EvitanRelta"},"content":"    public ArrayList\u003cString\u003e getExistingTagValues() {","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"EvitanRelta"},"content":"        return versionedAddressBook.getExistingTagValues();","lastModifiedDate":"2023-04-04"},{"lineNumber":190,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"EvitanRelta"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":193,"author":{"gitId":"EvitanRelta"},"content":"    public ArrayList\u003cString\u003e getExistingModuleValues() {","lastModifiedDate":"2023-03-31"},{"lineNumber":194,"author":{"gitId":"EvitanRelta"},"content":"        return versionedAddressBook.getExistingModuleValues();","lastModifiedDate":"2023-04-04"},{"lineNumber":195,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":196,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":197,"author":{"gitId":"EvitanRelta"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":198,"author":{"gitId":"EvitanRelta"},"content":"    public ArrayList\u003cString\u003e getExistingEducationValues() {","lastModifiedDate":"2023-03-31"},{"lineNumber":199,"author":{"gitId":"EvitanRelta"},"content":"        return versionedAddressBook.getExistingEducationValues();","lastModifiedDate":"2023-04-04"},{"lineNumber":200,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":201,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"EvitanRelta"},"content":"        return versionedAddressBook.equals(other.versionedAddressBook)","lastModifiedDate":"2023-04-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wendy0107":48,"EvitanRelta":29,"-":144}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"teachmesenpai.json\");","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wendy0107":1,"-":86}},{"path":"src/main/java/seedu/address/model/VersionedAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"//@@author wendy0107-reused","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Reused from https://github.com/AY2223S1-CS2103T-W17-4 and adapted from proposed implementation in AB3\u0027s Developer","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"// Guide https://se-education.org/addressbook-level3/DeveloperGuide.html","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"// with minor modifications such as renaming, having some different implementation,","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"// and the inclusion of a variable to track the undone/redone commands \u0027commandHistory\u0027.","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * {@code AddressBook} that keeps track of its own version history.","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class VersionedAddressBook extends AddressBook {","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String UNDO_VERSION_FAILURE \u003d \"Dont have older version to restore\";","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String REDO_VERSION_FAILURE \u003d \"Dont have new version to restore\";","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final List\u003cReadOnlyAddressBook\u003e versionStateHistory;","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e commandHistory;","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private int currentVersionPointer;","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a new instance of VersionedAddressBook.","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param addressbook addressbook is the initial state of AddressBook.","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public VersionedAddressBook(ReadOnlyAddressBook addressbook) {","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(addressbook); // first version of versionaddressbook","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        versionStateHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        commandHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        versionStateHistory.add(new AddressBook(addressbook)); // add initial state","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        currentVersionPointer \u003d 0;","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Saves a copy of the current {@code AddressBook} state and the last","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * executed command, and clears any outdated undone versions.","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param lastExecutedCommand The last executed command.","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void commit(String lastExecutedCommand) {","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        for (int i \u003d versionStateHistory.size() - 1; i \u003e currentVersionPointer; i--) {","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            versionStateHistory.remove(i);","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        versionStateHistory.add(new AddressBook(this));","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandHistory.subList(currentVersionPointer, commandHistory.size()).clear();","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandHistory.add(lastExecutedCommand);","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assert commandHistory.size() \u003d\u003d versionStateHistory.size() - 1;","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        currentVersionPointer++;","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Restores the previous state of AddressBook, and returns the name of the","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * command that was undone.","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @return The name of the command that was undone.","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String undo() {","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assert commandHistory.size() \u003d\u003d versionStateHistory.size() - 1;","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (checkUndoable()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            currentVersionPointer--;","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            resetData(versionStateHistory.get(currentVersionPointer));","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return commandHistory.get(currentVersionPointer);","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new RuntimeException(UNDO_VERSION_FAILURE);","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Restores an undone AddressBook state, and returns the name of the command","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * that was redone.","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @return The name of the command that was redone.","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public String redo() {","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assert commandHistory.size() \u003d\u003d versionStateHistory.size() - 1;","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // can only redo after an undo is done","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (checkRedoable()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            currentVersionPointer++;","lastModifiedDate":"2023-04-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            resetData(versionStateHistory.get(currentVersionPointer));","lastModifiedDate":"2023-04-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return commandHistory.get(currentVersionPointer - 1);","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new RuntimeException(REDO_VERSION_FAILURE);","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Checks if versionStateHistory has states to undo.","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @return true if there are states to undo and false otherwise.","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean checkUndoable() {","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return currentVersionPointer \u003e 0;","lastModifiedDate":"2023-04-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Checks if versionStateHistory has undone states to redo.","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @return true if there are undone states to redo and false otherwise.","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean checkRedoable() {","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        int numberOfStates \u003d versionStateHistory.size();","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return numberOfStates - 1 \u003e currentVersionPointer;","lastModifiedDate":"2023-04-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!(other instanceof VersionedAddressBook)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        VersionedAddressBook otherVersionedAddressBook \u003d (VersionedAddressBook) other;","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return super.equals(otherVersionedAddressBook)","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 currentVersionPointer \u003d\u003d otherVersionedAddressBook.currentVersionPointer;","lastModifiedDate":"2023-04-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2023-04-02"},{"lineNumber":122,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"wendy0107":6,"-":116}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    public static final String EMPTY \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wendy0107":1,"-":57}},{"path":"src/main/java/seedu/address/model/person/Education.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EvitanRelta"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":" * Represents a Education level in the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":" * Guarantees: immutable; value is valid as declared in {@link #isValidEducation(String)}","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"public class Education {","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"            \"Education levels should only contain alphanumeric characters and spaces\";","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"    public final String value;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"EvitanRelta"},"content":"     * Constructs a {@code Education}.","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"EvitanRelta"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"EvitanRelta"},"content":"     * @param education A valid tag name.","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"    public Education(String education) {","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"        requireNonNull(education);","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"        checkArgument(isValidEducation(education), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"        this.value \u003d education;","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"EvitanRelta"},"content":"    public static boolean isValidEducation(String test) {","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"EvitanRelta"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"EvitanRelta"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"EvitanRelta"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"EvitanRelta"},"content":"                || (other instanceof Education // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"                \u0026\u0026 value.equals(((Education) other).value)); // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"EvitanRelta"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"EvitanRelta"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"EvitanRelta"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"EvitanRelta"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"EvitanRelta"},"content":"    public String toString() {","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"EvitanRelta"},"content":"        return value;","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"EvitanRelta"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"EvitanRelta":55}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    public static final String EMPTY \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wendy0107":1,"-":71}},{"path":"src/main/java/seedu/address/model/person/FullNamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":" * Tests that a {@code Person}\u0027s entire {@code Name} exactly matches the","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":" * {@code fullname}.","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"public class FullNamePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    private final String fullName;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    public FullNamePredicate(String fullName) {","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"        this.fullName \u003d fullName;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"        return person.getName().fullName.equals(this.fullName);","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"                || (other instanceof FullNamePredicate","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"                \u0026\u0026 fullName.equals(((FullNamePredicate) other).fullName));","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"wendy0107":23,"EvitanRelta":4}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import java.util.Optional;","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.tag.Module;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"    private final Optional\u003cPhone\u003e phone;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"    private final Optional\u003cEmail\u003e email;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"    private final Optional\u003cAddress\u003e address;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"    private final Optional\u003cRemark\u003e remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"    private final Optional\u003cTelegram\u003e telegram;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"    private final Optional\u003cEducation\u003e education;","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"    private final Set\u003cModule\u003e modules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"EvitanRelta"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Education education, Remark remark,","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"            Telegram telegram, Set\u003cModule\u003e modules, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"EvitanRelta"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"        this.phone \u003d Optional.ofNullable(phone);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"        this.email \u003d Optional.ofNullable(email);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"        this.address \u003d Optional.ofNullable(address);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"EvitanRelta"},"content":"        this.education \u003d Optional.ofNullable(education);","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"EvitanRelta"},"content":"        this.remark \u003d Optional.ofNullable(remark);","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"        this.telegram \u003d Optional.ofNullable(telegram);","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"EvitanRelta"},"content":"        this.modules.addAll(modules);","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"    public Optional\u003cPhone\u003e getOptionalPhone() {","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"    public Optional\u003cEmail\u003e getOptionalEmail() {","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"    public Optional\u003cAddress\u003e getOptionalAddress() {","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"EvitanRelta"},"content":"    public Optional\u003cEducation\u003e getOptionalEducation() {","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"EvitanRelta"},"content":"        return education;","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"EvitanRelta"},"content":"    public Optional\u003cRemark\u003e getOptionalRemark() {","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"Bentimate"},"content":"        return remark;","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"Sheemo"},"content":"    public Optional\u003cTelegram\u003e getOptionalTelegram() {","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"Sheemo"},"content":"        return telegram;","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"wendy0107"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"wendy0107"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"EvitanRelta"},"content":"    public Set\u003cModule\u003e getModules() {","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"EvitanRelta"},"content":"        return Collections.unmodifiableSet(modules);","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":123,"author":{"gitId":"Sheemo"},"content":"                \u0026\u0026 otherPerson.getOptionalPhone().equals(getOptionalPhone())","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"Sheemo"},"content":"                \u0026\u0026 otherPerson.getOptionalEmail().equals(getOptionalEmail())","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"Sheemo"},"content":"                \u0026\u0026 otherPerson.getOptionalAddress().equals(getOptionalAddress())","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"EvitanRelta"},"content":"                \u0026\u0026 otherPerson.getOptionalEducation().equals(getOptionalEducation())","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"EvitanRelta"},"content":"                \u0026\u0026 otherPerson.getModules().equals(getModules())","lastModifiedDate":"2023-03-31"},{"lineNumber":128,"author":{"gitId":"wendy0107"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2023-03-21"},{"lineNumber":129,"author":{"gitId":"Sheemo"},"content":"                \u0026\u0026 otherPerson.getOptionalRemark().equals(getOptionalRemark())","lastModifiedDate":"2023-03-31"},{"lineNumber":130,"author":{"gitId":"Sheemo"},"content":"                \u0026\u0026 otherPerson.getOptionalTelegram().equals(getOptionalTelegram());","lastModifiedDate":"2023-03-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"Sheemo"},"content":"        return Objects.hash(name, phone, email, address, education, modules, remark, tags, telegram);","lastModifiedDate":"2023-03-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"EvitanRelta"},"content":"        builder.append(getName());","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"EvitanRelta"},"content":"        getOptionalPhone().ifPresent(phone -\u003e builder.append(\"; Phone: \").append(phone));","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"EvitanRelta"},"content":"        getOptionalEmail().ifPresent(email -\u003e builder.append(\"; Email: \").append(email));","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"EvitanRelta"},"content":"        getOptionalAddress().ifPresent(address -\u003e builder.append(\"; Address: \").append(address));","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"EvitanRelta"},"content":"        getOptionalEducation().ifPresent(education -\u003e builder.append(\"; Education: \").append(education));","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"Sheemo"},"content":"        getOptionalTelegram().ifPresent(telegram -\u003e builder.append(\"; Telegram: \").append(telegram));","lastModifiedDate":"2023-03-31"},{"lineNumber":149,"author":{"gitId":"EvitanRelta"},"content":"        getOptionalRemark().ifPresent(remark -\u003e builder.append(\"; Remark: \").append(remark));","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"EvitanRelta"},"content":"        Set\u003cModule\u003e modules \u003d getModules();","lastModifiedDate":"2023-03-31"},{"lineNumber":152,"author":{"gitId":"EvitanRelta"},"content":"        if (!modules.isEmpty()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":153,"author":{"gitId":"EvitanRelta"},"content":"            builder.append(\" ; Modules: \");","lastModifiedDate":"2023-03-31"},{"lineNumber":154,"author":{"gitId":"EvitanRelta"},"content":"            modules.forEach(builder::append);","lastModifiedDate":"2023-03-31"},{"lineNumber":155,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":162,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Sheemo":17,"wendy0107":16,"Bentimate":3,"EvitanRelta":30,"-":100}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    public static final String EMPTY \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wendy0107":1,"-":52}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bentimate"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Bentimate"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Bentimate"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Bentimate"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Bentimate"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Bentimate"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Bentimate"},"content":"public class Remark {","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Bentimate"},"content":"    public final String value;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Bentimate"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"     * Creates a new Remark with specified text.","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"     * @param remark Specified remark to use","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Bentimate"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Bentimate"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Bentimate"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Bentimate"},"content":"        value \u003d remark;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"     * Truncates a person\u0027s remark to 30 characters or if it contains a newline character.","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"     * @return truncated Remark string.","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    public String truncateRemark() {","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"        String ellipsis \u003d \"...\";","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"            return value;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"        } else if (containsNewLine()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"            // remark has more than one line","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"            String firstLine \u003d value.split(\"\\n\", 2)[0];","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"            if (canTruncate(firstLine)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"                // first line has more than 30 chars.","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"                return firstLine.substring(0, 30) + ellipsis;","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"            } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"                // first lie is less than 30 chars.","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"                return firstLine + ellipsis;","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"        } else if (canTruncate(value)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"            // longer than 30 characters.","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"            return value.substring(0, 30) + ellipsis;","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"            // short remark \u003c 30 characters","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"            return value;","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"     * Checks if remark can be truncated.","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"     * @param str Remark as a string.","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"     * @return true if remark can be truncated and false otherwise.","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"    public boolean canTruncate(String str) {","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"EvitanRelta"},"content":"        assert str !\u003d null;","lastModifiedDate":"2023-04-03"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"        return str.length() \u003e 30;","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"     * Checks if remark contains a newline character.","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"     * @return true if contains at least one newline character and false otherwise.","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"    public boolean containsNewLine() {","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"EvitanRelta"},"content":"        assert value !\u003d null;","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"        return value.contains(\"\\n\");","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Bentimate"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Bentimate"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Bentimate"},"content":"        return value;","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Bentimate"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Bentimate"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"Bentimate"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"Bentimate"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"Bentimate"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"Bentimate"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"Bentimate"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"Bentimate"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"Bentimate"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Sheemo":2,"wendy0107":44,"Bentimate":34,"EvitanRelta":2}},{"path":"src/main/java/seedu/address/model/person/Telegram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":" * Represents a Person\u0027s telegram handle in the address book.","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidHandle(String)}","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"public class Telegram {","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"            \"Telegram handle can take any valid Telegram handle, and it should not be blank\";","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"    /*","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"     * Matches a valid telegram handle. Currently, asserts (or tries to) the following constraints:","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"     *   Begins with an alphabetic character","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"     *   Has a minimum length of 5 and a maximum length of 32","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"     *   Consists of only alphanumeric characters and underscores","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"     *   Does not have consecutive underscores","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"     *   Does not end on an underscore.","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"    public static final String VALIDATION_REGEX \u003d \"^@(?\u003d[a-zA-Z]\\\\w{4,31}\\\\b)[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*$\";","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"    public final String value;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"     * Constructs a {@code Telegram}.","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"     * @param telegram A valid telegram handle.","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"    public Telegram(String telegram) {","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"        checkArgument(isValidHandle(telegram), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"        value \u003d telegram;","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"    public static boolean isValidHandle(String test) {","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"    public String toString() {","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"        return value;","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"                || (other instanceof Telegram // instanceof handles nulls","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"                \u0026\u0026 value.equals(((Telegram) other).value)); // state check","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"Sheemo":60,"EvitanRelta":2}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"EvitanRelta"},"content":"     * Returns true if the list will contain duplicates after replacing","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"EvitanRelta"},"content":"     * {@code toReplace} with {@code replacement}.","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"EvitanRelta"},"content":"    public boolean willHaveDuplicatesAftReplacement(Person toBeReplaced, Person replacement) {","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"EvitanRelta"},"content":"        requireAllNonNull(toBeReplaced, replacement);","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"EvitanRelta"},"content":"        assert contains(toBeReplaced) : \"list should contain the person to replace\";","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"EvitanRelta"},"content":"        return internalList.stream()","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"EvitanRelta"},"content":"            .filter(Predicate.not(toBeReplaced::isSamePerson))","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"EvitanRelta"},"content":"            .anyMatch(replacement::isSamePerson);","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"EvitanRelta"},"content":"     * Returns a list of all existing tag values (without duplicates) contained","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"EvitanRelta"},"content":"     * in the person list.","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"EvitanRelta"},"content":"    public ArrayList\u003cString\u003e getExistingTagValues() {","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"EvitanRelta"},"content":"        return internalList.stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"EvitanRelta"},"content":"                .map(Person::getTags)","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"EvitanRelta"},"content":"                .flatMap(set -\u003e set.stream())","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"EvitanRelta"},"content":"                .distinct()","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"EvitanRelta"},"content":"                .map(tag -\u003e tag.tagName)","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"EvitanRelta"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":138,"author":{"gitId":"EvitanRelta"},"content":"     * Returns a list of all existing module values (without duplicates) contained","lastModifiedDate":"2023-03-31"},{"lineNumber":139,"author":{"gitId":"EvitanRelta"},"content":"     * in the person list.","lastModifiedDate":"2023-03-31"},{"lineNumber":140,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":141,"author":{"gitId":"EvitanRelta"},"content":"    public ArrayList\u003cString\u003e getExistingModuleValues() {","lastModifiedDate":"2023-03-31"},{"lineNumber":142,"author":{"gitId":"EvitanRelta"},"content":"        return internalList.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":143,"author":{"gitId":"EvitanRelta"},"content":"                .map(Person::getModules)","lastModifiedDate":"2023-03-31"},{"lineNumber":144,"author":{"gitId":"EvitanRelta"},"content":"                .flatMap(set -\u003e set.stream())","lastModifiedDate":"2023-03-31"},{"lineNumber":145,"author":{"gitId":"EvitanRelta"},"content":"                .distinct()","lastModifiedDate":"2023-03-31"},{"lineNumber":146,"author":{"gitId":"EvitanRelta"},"content":"                .map(module -\u003e module.moduleName)","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"EvitanRelta"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-03-31"},{"lineNumber":148,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":149,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":150,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":151,"author":{"gitId":"EvitanRelta"},"content":"     * Returns a list of all existing education values (without duplicates) contained","lastModifiedDate":"2023-03-31"},{"lineNumber":152,"author":{"gitId":"EvitanRelta"},"content":"     * in the person list.","lastModifiedDate":"2023-03-31"},{"lineNumber":153,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":154,"author":{"gitId":"EvitanRelta"},"content":"    public ArrayList\u003cString\u003e getExistingEducationValues() {","lastModifiedDate":"2023-03-31"},{"lineNumber":155,"author":{"gitId":"EvitanRelta"},"content":"        return internalList.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":156,"author":{"gitId":"EvitanRelta"},"content":"                .map(Person::getOptionalEducation)","lastModifiedDate":"2023-03-31"},{"lineNumber":157,"author":{"gitId":"EvitanRelta"},"content":"                .filter(Optional::isPresent)","lastModifiedDate":"2023-03-31"},{"lineNumber":158,"author":{"gitId":"EvitanRelta"},"content":"                .map(Optional::get)","lastModifiedDate":"2023-03-31"},{"lineNumber":159,"author":{"gitId":"EvitanRelta"},"content":"                .map(education -\u003e education.value)","lastModifiedDate":"2023-03-31"},{"lineNumber":160,"author":{"gitId":"EvitanRelta"},"content":"                .distinct()","lastModifiedDate":"2023-03-31"},{"lineNumber":161,"author":{"gitId":"EvitanRelta"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-03-31"},{"lineNumber":162,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":163,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EvitanRelta":57,"-":137}},{"path":"src/main/java/seedu/address/model/tag/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"//@@author wendy0107","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":" * Represents a Module in the address book.","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidModuleName(String)}","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"public class Module {","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Module names should be alphanumeric\";","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    public final String moduleName;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"     * Constructs a {@code Module}.","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"     * @param moduleName A valid module name.","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"    public Module(String moduleName) {","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"        requireNonNull(moduleName);","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"        checkArgument(isValidModuleName(moduleName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"     * Returns true if a given string is a valid module name.","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"    public static boolean isValidModuleName(String test) {","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"                || (other instanceof Module // instanceof handles nulls","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"                \u0026\u0026 moduleName.equals(((Module) other).moduleName)); // state check","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"        return moduleName.hashCode();","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"    public String toString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"        return \u0027[\u0027 + moduleName + \u0027]\u0027;","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"//@@author","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"wendy0107":55,"EvitanRelta":1}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-04-01"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2023-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.tag.Module;","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2023-04-01"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2023-04-01"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"        return new Person[]{","lastModifiedDate":"2023-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Education(\"P6\"),","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"                    new Remark(\"Hasn\u0027t submitted tutorial worksheet for Week 10\"),","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"                    new Telegram(\"@alexyeoh30\"), getModuleSet(\"CS2103T\"), getTagSet(\"CS2101\")),","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Education(\"P1\"),","lastModifiedDate":"2023-04-01"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"                    new Remark(\"Submitted an MC for tutorial on Week 8\"),","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"                    new Telegram(\"@berniceee30\"), getModuleSet(\"CS2030\"), getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-04-01"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Education(\"Sec 1\"),","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"                    new Remark(\"Remarks can take in multiple lines of input \\nsee!\"),","lastModifiedDate":"2023-04-01"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"                    new Telegram(\"@charlotte_07\"), getModuleSet(\"CS2040S\", \"CS2109\"), getTagSet(\"neighbours\")),","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-04-01"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Education(\"Sec 4\"), EMPTY_REMARK,","lastModifiedDate":"2023-04-01"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"                    new Telegram(\"@david_liiii\"), getModuleSet(\"CS2107\"), getTagSet(\"family\")),","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-04-01"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Education(\"P5\"), EMPTY_REMARK,","lastModifiedDate":"2023-04-01"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"                    new Telegram(\"@irfanlove\"), getModuleSet(\"CS2105\", \"CS2040S\"), getTagSet(\"classmates\")),","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-04-01"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Education(\"P3\"), EMPTY_REMARK,","lastModifiedDate":"2023-04-01"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"                    new Telegram(\"@royyy123\"), getModuleSet(\"CS4243\"), getTagSet(\"colleagues\"))","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2023-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2023-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2023-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2023-04-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2023-04-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2023-04-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2023-04-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-04-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2023-04-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-04-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"     * Returns a module set containing the list of strings given.","lastModifiedDate":"2023-04-01"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"    public static Set\u003cModule\u003e getModuleSet(String... strings) {","lastModifiedDate":"2023-04-01"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-04-01"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"                .map(Module::new)","lastModifiedDate":"2023-04-01"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-04-01"},{"lineNumber":77,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-04-01"}],"authorContributionMap":{"Sheemo":5,"wendy0107":27,"-":47}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.tag.Module;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"//@@author wendy0107","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":" * Jackson-friendly version of {@link Module}.","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"public class JsonAdaptedModule {","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    private final String moduleName;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"     * Constructs a {@code JsonAdaptedModule} with the given {@code moduleName}.","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"    public JsonAdaptedModule(String moduleName) {","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"     * Converts a given {@code Module} into this class for Jackson use.","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"    public JsonAdaptedModule(Module source) {","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"        moduleName \u003d source.moduleName;","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"    @JsonValue","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"    public String getModuleName() {","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"        return moduleName;","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"     * Converts this Jackson-friendly adapted module object into the model\u0027s {@code Module} object.","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted module.","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"    public Module toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"        if (!Module.isValidModuleName(moduleName)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"            throw new IllegalValueException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"        return new Module(moduleName);","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"//@@author","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"wendy0107":50,"EvitanRelta":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"import com.fasterxml.jackson.annotation.JsonInclude.Include;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.tag.Module;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"@JsonInclude(Include.NON_NULL)","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"EvitanRelta"},"content":"    private final String education;","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"Bentimate"},"content":"    private final String remark;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"    private final String telegram;","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"    private final List\u003cJsonAdaptedModule\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"EvitanRelta"},"content":"                             @JsonProperty(\"education\") String education, @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"                             @JsonProperty(\"telegram\") String telegram,","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"EvitanRelta"},"content":"                             @JsonProperty(\"modules\") List\u003cJsonAdaptedModule\u003e modules,","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"EvitanRelta"},"content":"        this.education \u003d education;","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"Bentimate"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"EvitanRelta"},"content":"        if (modules !\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"EvitanRelta"},"content":"            this.modules.addAll(modules);","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"EvitanRelta"},"content":"        phone \u003d source.getOptionalPhone().map(Phone::toString).orElse(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"EvitanRelta"},"content":"        email \u003d source.getOptionalEmail().map(Email::toString).orElse(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"EvitanRelta"},"content":"        address \u003d source.getOptionalAddress().map(Address::toString).orElse(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"EvitanRelta"},"content":"        education \u003d source.getOptionalEducation().map(Education::toString).orElse(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"EvitanRelta"},"content":"        remark \u003d source.getOptionalRemark().map(Remark::toString).orElse(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"Sheemo"},"content":"        telegram \u003d source.getOptionalTelegram().map(Telegram::toString).orElse(null);","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"EvitanRelta"},"content":"        modules.addAll(source.getModules().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"EvitanRelta"},"content":"                .map(JsonAdaptedModule::new)","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"wendy0107"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"EvitanRelta"},"content":"        final List\u003cModule\u003e personModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"EvitanRelta"},"content":"        for (JsonAdaptedModule module : modules) {","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"EvitanRelta"},"content":"            personModules.add(module.toModelType());","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"EvitanRelta"},"content":"        final Phone modelPhone \u003d phone \u003d\u003d null","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"EvitanRelta"},"content":"            ? null","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"EvitanRelta"},"content":"            : Optional.of(phone)","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"EvitanRelta"},"content":"                    .filter(Phone::isValidPhone)","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"EvitanRelta"},"content":"                    .map(Phone::new)","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"EvitanRelta"},"content":"                    .orElseThrow(() -\u003e new IllegalValueException(Phone.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"EvitanRelta"},"content":"        final Email modelEmail \u003d email \u003d\u003d null","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"EvitanRelta"},"content":"            ? null","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"EvitanRelta"},"content":"            : Optional.of(email)","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"EvitanRelta"},"content":"                    .filter(Email::isValidEmail)","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"EvitanRelta"},"content":"                    .map(Email::new)","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"EvitanRelta"},"content":"                    .orElseThrow(() -\u003e new IllegalValueException(Email.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"EvitanRelta"},"content":"        final Address modelAddress \u003d address \u003d\u003d null","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"EvitanRelta"},"content":"            ? null","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"EvitanRelta"},"content":"            : Optional.of(address)","lastModifiedDate":"2023-03-22"},{"lineNumber":131,"author":{"gitId":"EvitanRelta"},"content":"                    .filter(Address::isValidAddress)","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"EvitanRelta"},"content":"                    .map(Address::new)","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"EvitanRelta"},"content":"                    .orElseThrow(() -\u003e new IllegalValueException(Address.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-03-22"},{"lineNumber":134,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":135,"author":{"gitId":"EvitanRelta"},"content":"        final Education modelEducation \u003d education \u003d\u003d null","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"EvitanRelta"},"content":"            ? null","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"EvitanRelta"},"content":"            : Optional.of(education)","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"EvitanRelta"},"content":"                    .filter(Education::isValidEducation)","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"EvitanRelta"},"content":"                    .map(Education::new)","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"EvitanRelta"},"content":"                    .orElseThrow(() -\u003e new IllegalValueException(Education.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"EvitanRelta"},"content":"        final Remark modelRemark \u003d remark \u003d\u003d null","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"EvitanRelta"},"content":"            ? null","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"EvitanRelta"},"content":"            : new Remark(remark);","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"Sheemo"},"content":"        final Telegram modelTelegram \u003d telegram \u003d\u003d null","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"Sheemo"},"content":"                ? null","lastModifiedDate":"2023-03-31"},{"lineNumber":148,"author":{"gitId":"Sheemo"},"content":"                : Optional.of(telegram)","lastModifiedDate":"2023-03-31"},{"lineNumber":149,"author":{"gitId":"Sheemo"},"content":"                .filter(Telegram::isValidHandle)","lastModifiedDate":"2023-03-31"},{"lineNumber":150,"author":{"gitId":"Sheemo"},"content":"                .map(Telegram::new)","lastModifiedDate":"2023-03-31"},{"lineNumber":151,"author":{"gitId":"Sheemo"},"content":"                .orElseThrow(() -\u003e new IllegalValueException(Telegram.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-03-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"EvitanRelta"},"content":"        final Set\u003cModule\u003e modelModules \u003d new HashSet\u003c\u003e(personModules);","lastModifiedDate":"2023-03-31"},{"lineNumber":156,"author":{"gitId":"EvitanRelta"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelEducation, modelRemark,","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"Sheemo"},"content":"                modelTelegram, modelModules, modelTags);","lastModifiedDate":"2023-03-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Sheemo":11,"wendy0107":7,"Bentimate":3,"EvitanRelta":55,"-":84}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"    private final CommandSuggestor commandSuggestor;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"    private final CommandAutocomplete commandAutocomplete;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"    private Font textFieldFont;","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"EvitanRelta"},"content":"    private TextField commandSuggestionTextField;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"EvitanRelta"},"content":"    public CommandBox(CommandExecutor commandExecutor,","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"EvitanRelta"},"content":"            CommandSuggestor commandSuggestor,","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"EvitanRelta"},"content":"            CommandAutocomplete commandAutocomplete) {","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"        this.commandSuggestor \u003d commandSuggestor;","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"EvitanRelta"},"content":"        this.commandAutocomplete \u003d commandAutocomplete;","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":47,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        //@@author EvitanRelta-reused","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Reused from https://github.com/AY2223S1-CS2103T-T12-2/tp","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // with no modifications.","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandTextField.textProperty()","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .addListener((observable, oldValue, newValue) -\u003e updateCommandSuggestion(newValue));","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        commandTextField.addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e handleKeyPressed(event));","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        commandSuggestionTextField.setEditable(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandSuggestionTextField.setFocusTraversable(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandSuggestionTextField.setMouseTransparent(true);","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":67,"author":{"gitId":"EvitanRelta"},"content":"        if (commandText.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"EvitanRelta"},"content":"     * Represents a function that can suggest a possible autocomplete value","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"EvitanRelta"},"content":"     * based on the user input.","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"EvitanRelta"},"content":"    @FunctionalInterface","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"EvitanRelta"},"content":"    public interface CommandSuggestor {","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"EvitanRelta"},"content":"        /**","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"EvitanRelta"},"content":"         * Suggest a possible autocomplete value based on the user input.","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"EvitanRelta"},"content":"         *","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"EvitanRelta"},"content":"         * @see seedu.address.logic.Logic#suggestCommand(String)","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"EvitanRelta"},"content":"         */","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"EvitanRelta"},"content":"        String suggest(String userInput) throws ParseException;","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"EvitanRelta"},"content":"     * Represents a function that can autocomplete a user input based on the","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"EvitanRelta"},"content":"     * current command suggestion.","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"EvitanRelta"},"content":"    @FunctionalInterface","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"EvitanRelta"},"content":"    public interface CommandAutocomplete {","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"EvitanRelta"},"content":"        /**","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"EvitanRelta"},"content":"         * Autocomplete a user input based on the current command suggestion.","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"EvitanRelta"},"content":"         *","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"EvitanRelta"},"content":"         * @see seedu.address.logic.Logic#autocompleteCommand(String, String)","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"EvitanRelta"},"content":"         */","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"EvitanRelta"},"content":"        String autocomplete(String userInput, String commandSuggestion);","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    //@@author EvitanRelta-reused","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/AY2223S1-CS2103T-T12-2/tp","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    // with minor modification and bug fixes.","lastModifiedDate":"2023-04-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Auto-completes user input when the user presses the Tab key.","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void handleKeyPressed(KeyEvent e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (e.getCode() !\u003d KeyCode.TAB) {","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String userInput \u003d commandTextField.getText();","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String commandSuggestion \u003d commandSuggestionTextField.getText();","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String autocompletedCommand \u003d commandAutocomplete.autocomplete(userInput, commandSuggestion);","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!autocompletedCommand.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            commandTextField.setText(autocompletedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            commandTextField.end();","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        updateCommandSuggestion(commandTextField.getText());","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        e.consume();","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Updates the command suggestion text field.","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private void updateCommandSuggestion(String commandText) {","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (commandText.isEmpty() || isOverflow()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            commandSuggestionTextField.setText(\"\");","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            commandSuggestionTextField.setText(commandSuggestor.suggest(commandText));","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            commandSuggestionTextField.positionCaret(commandTextField.getText().length());","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            commandSuggestionTextField.setText(commandText);","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Checks if the command text field is overflowing.","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @return true if the command text field is overflowing.","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public boolean isOverflow() {","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (textFieldFont \u003d\u003d null) {","lastModifiedDate":"2023-04-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            // \u0027textFieldFont\u0027 is only set here (instead of in the constructor),","lastModifiedDate":"2023-04-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            // to avoid getting the font before the CSS has been loaded.","lastModifiedDate":"2023-04-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            textFieldFont \u003d commandTextField.getFont();","lastModifiedDate":"2023-04-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Text t \u003d new Text(commandTextField.getText() + \"12345\"); // `12345` is used to pad the text","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // \u0027commandTextField.getFont()\u0027 is not used here as sometimes the font","lastModifiedDate":"2023-04-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // hasn\u0027t loaded, which returns the default system font, and causes bugs.","lastModifiedDate":"2023-04-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        t.setFont(textFieldFont);","lastModifiedDate":"2023-04-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        double width \u003d t.getLayoutBounds().getWidth();","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return width \u003e commandTextField.getWidth();","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"EvitanRelta":46,"-":152}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-w12-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Sheemo":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2023-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2023-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2023-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2023-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2023-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"    private ResultPersonListPanel resultPersonlistPanel;","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2023-04-01"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"    private RemarkWindow remarkWindow;","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2023-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"    @FXML","lastModifiedDate":"2023-04-01"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"    private StackPane remarkBoxPlaceholder;","lastModifiedDate":"2023-04-01"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2023-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2023-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2023-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"    @FXML","lastModifiedDate":"2023-04-01"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"    private StackPane resultPersonListPlaceholder;","lastModifiedDate":"2023-04-01"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-04-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2023-04-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2023-04-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2023-04-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2023-04-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2023-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2023-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-04-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2023-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2023-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2023-04-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2023-04-01"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"        remarkWindow \u003d new RemarkWindow();","lastModifiedDate":"2023-04-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2023-04-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2023-04-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2023-04-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2023-04-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2023-04-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2023-04-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2023-04-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2023-04-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2023-04-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2023-04-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2023-04-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2023-04-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2023-04-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2023-04-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2023-04-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2023-04-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2023-04-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2023-04-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2023-04-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2023-04-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2023-04-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2023-04-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-04-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2023-04-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2023-04-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2023-04-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2023-04-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2023-04-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2023-04-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2023-04-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2023-04-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-04-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":126,"author":{"gitId":"wendy0107"},"content":"        resultPersonlistPanel \u003d new ResultPersonListPanel(logic.getShowPerson());","lastModifiedDate":"2023-04-01"},{"lineNumber":127,"author":{"gitId":"wendy0107"},"content":"        resultPersonListPlaceholder.getChildren().add(resultPersonlistPanel.getRoot());","lastModifiedDate":"2023-04-01"},{"lineNumber":128,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2023-04-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2023-04-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2023-04-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2023-04-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":135,"author":{"gitId":"wendy0107"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand, logic::suggestCommand,","lastModifiedDate":"2023-04-01"},{"lineNumber":136,"author":{"gitId":"wendy0107"},"content":"                logic::autocompleteCommand);","lastModifiedDate":"2023-04-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2023-04-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2023-04-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2023-04-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2023-04-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2023-04-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2023-04-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2023-04-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2023-04-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2023-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2023-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2023-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2023-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2023-04-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2023-04-01"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2023-04-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2023-04-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2023-04-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-04-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2023-04-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2023-04-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2023-04-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2023-04-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2023-04-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2023-04-01"},{"lineNumber":178,"author":{"gitId":"wendy0107"},"content":"        remarkWindow.hide();","lastModifiedDate":"2023-04-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2023-04-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2023-04-01"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":185,"author":{"gitId":"wendy0107"},"content":"    public ResultPersonListPanel getResultPersonListPanel() {","lastModifiedDate":"2023-04-01"},{"lineNumber":186,"author":{"gitId":"wendy0107"},"content":"        return resultPersonlistPanel;","lastModifiedDate":"2023-04-01"},{"lineNumber":187,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":188,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-04-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-04-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2023-04-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-04-01"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-04-01"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2023-04-01"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2023-04-01"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2023-04-01"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2023-04-01"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2023-04-01"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2023-04-01"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2023-04-01"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":208,"author":{"gitId":"wendy0107"},"content":"            if (commandResult.isRemark()) {","lastModifiedDate":"2023-04-01"},{"lineNumber":209,"author":{"gitId":"EvitanRelta"},"content":"                String remarkInput \u003d getRemarksFromRemarkBox(commandResult.getRemark());","lastModifiedDate":"2023-04-04"},{"lineNumber":210,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":211,"author":{"gitId":"EvitanRelta"},"content":"                commandResult \u003d remarkInput.isBlank()","lastModifiedDate":"2023-04-04"},{"lineNumber":212,"author":{"gitId":"EvitanRelta"},"content":"                        ? logic.execute(commandText + \" \\0\")","lastModifiedDate":"2023-04-04"},{"lineNumber":213,"author":{"gitId":"EvitanRelta"},"content":"                        : logic.execute(commandText + \" \" + remarkInput);","lastModifiedDate":"2023-04-04"},{"lineNumber":214,"author":{"gitId":"EvitanRelta"},"content":"                logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2023-04-04"},{"lineNumber":215,"author":{"gitId":"EvitanRelta"},"content":"                resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2023-04-04"},{"lineNumber":216,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":217,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2023-04-01"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2023-04-01"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2023-04-01"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2023-04-01"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":225,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":226,"author":{"gitId":"wendy0107"},"content":"    private String getRemarksFromRemarkBox(String existingRemarks) {","lastModifiedDate":"2023-04-01"},{"lineNumber":227,"author":{"gitId":"wendy0107"},"content":"        return remarkWindow.showAndGetText(existingRemarks);","lastModifiedDate":"2023-04-01"},{"lineNumber":228,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-04-01"}],"authorContributionMap":{"wendy0107":27,"EvitanRelta":7,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.tag.Module;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"    private final HashMap\u003cLabel, ImageView\u003e iconList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":56,"author":{"gitId":"Bentimate"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"EvitanRelta"},"content":"    private FlowPane modules;","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"Bentimate"},"content":"    private Label remark;","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"    private Label telegram;","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"EvitanRelta"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and index to display.","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"Sheemo"},"content":"        phone.setText(person.getOptionalPhone().map(Phone::toString).orElse(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"Sheemo"},"content":"        address.setText(person.getOptionalAddress().map(Address::toString).orElse(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"Sheemo"},"content":"        email.setText(person.getOptionalEmail().map(Email::toString).orElse(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"        remark.setText(person.getOptionalRemark().map(Remark::truncateRemark).orElse(null));","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"        telegram.setText(person.getOptionalTelegram().map(Telegram::toString).orElse(null));","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"EvitanRelta"},"content":"        person.getOptionalEducation()","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"EvitanRelta"},"content":"                .map(education -\u003e new Label(\"Education: \" + education.value))","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"                .ifPresent(label -\u003e tags.getChildren().add(setStyleEducationLabel(label)));","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"EvitanRelta"},"content":"        person.getModules().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"EvitanRelta"},"content":"                .sorted(Comparator.comparing(module -\u003e module.moduleName))","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"EvitanRelta"},"content":"                .forEach(module -\u003e tags.getChildren().add(createModuleLabel(module)));","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":85,"author":{"gitId":"wendy0107"},"content":"        List\u003cLabel\u003e labels \u003d Arrays.asList(phone, address, email, telegram, remark);","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"wendy0107"},"content":"        resizeLabels(labels);","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"wendy0107"},"content":"        resizeFlowPane(tags);","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"wendy0107"},"content":"     * Sets the style for the Label containing Education.","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"wendy0107"},"content":"     * @param label Label containing Education.","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"wendy0107"},"content":"     * @return Label after setting style.","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"wendy0107"},"content":"    public Label setStyleEducationLabel(Label label) {","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"wendy0107"},"content":"        label.setStyle(\"-fx-background-color : #107896;\");","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"wendy0107"},"content":"        return label;","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"wendy0107"},"content":"     * Sets the style and creates a Label for Module.","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"wendy0107"},"content":"     * @param module Module to create a label for.","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"wendy0107"},"content":"     * @return Module as a Label.","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"wendy0107"},"content":"    public Label createModuleLabel(Module module) {","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"wendy0107"},"content":"        Label moduleLabel \u003d new Label(module.moduleName);","lastModifiedDate":"2023-04-04"},{"lineNumber":107,"author":{"gitId":"EvitanRelta"},"content":"        moduleLabel.setStyle(\"-fx-background-color : #829356;\");","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"EvitanRelta"},"content":"        return moduleLabel;","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":112,"author":{"gitId":"wendy0107"},"content":"     * Checks if Labels are empty and sets them as invisible.","lastModifiedDate":"2023-04-04"},{"lineNumber":113,"author":{"gitId":"wendy0107"},"content":"     * @param labels List of labels to check.","lastModifiedDate":"2023-04-04"},{"lineNumber":114,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":115,"author":{"gitId":"wendy0107"},"content":"    public void resizeLabels(List\u003cLabel\u003e labels) {","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"wendy0107"},"content":"        for (int i \u003d 0; i \u003c labels.size(); i++) {","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"wendy0107"},"content":"            Label label \u003d labels.get(i);","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"wendy0107"},"content":"            String text \u003d label.getText();","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"wendy0107"},"content":"            if (text \u003d\u003d null || text.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"wendy0107"},"content":"                label.setVisible(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"wendy0107"},"content":"                label.setManaged(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":127,"author":{"gitId":"wendy0107"},"content":"     * Checks if flowpane is empty and sets the flowpane to be invisble if so, otherwise adds an icon to the flowpane.","lastModifiedDate":"2023-04-04"},{"lineNumber":128,"author":{"gitId":"wendy0107"},"content":"     * @param flowpane Flowpane to check for.","lastModifiedDate":"2023-04-04"},{"lineNumber":129,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":130,"author":{"gitId":"wendy0107"},"content":"    public void resizeFlowPane(FlowPane flowpane) {","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"wendy0107"},"content":"        if (flowpane.getChildren().isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"wendy0107"},"content":"            flowpane.setVisible(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"wendy0107"},"content":"            flowpane.setManaged(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"wendy0107"},"content":"            Image tagIcon \u003d new Image(getClass().getResourceAsStream(\"/images/books.png\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"wendy0107"},"content":"            ImageView tagIconView \u003d new ImageView(tagIcon);","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"wendy0107"},"content":"            tagIconView.setFitWidth(16);","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"wendy0107"},"content":"            tagIconView.setFitHeight(16);","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"wendy0107"},"content":"            flowpane.getChildren().add(0, tagIconView);","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Sheemo":6,"wendy0107":68,"Bentimate":2,"EvitanRelta":11,"-":73}},{"path":"src/main/java/seedu/address/ui/RemarkWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.input.KeyCodeCombination;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":" * The UI component that is responsible for receiving remarks inputs.","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"public class RemarkWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"    private static final String FXML \u003d \"RemarkWindow.fxml\";","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    private final KeyCodeCombination ctrlS \u003d new KeyCodeCombination(KeyCode.S, KeyCombination.CONTROL_DOWN);","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"    private TextArea textArea;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"     * Creates a new RemarkWindow.","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"     * @param root Stage to use as the root of the RemarkWindow.","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"    public RemarkWindow(Stage root) {","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"        super(FXML, root);","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"     * Creates a new RemarkWindow.","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"    public RemarkWindow() {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"        this(new Stage());","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"     * Shows the help window.","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Sheemo"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Sheemo"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"    public String showAndGetText(String existingRemark) {","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"        final String[] content \u003d new String[1];","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Sheemo"},"content":"        logger.fine(\"Editing remarks\");","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"        textArea.setText(existingRemark);","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Sheemo"},"content":"        textArea.positionCaret(existingRemark.length());","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Sheemo"},"content":"        EventHandler\u003cKeyEvent\u003e ctrlSHandler \u003d event -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"            if (ctrlS.match(event)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"                event.consume();","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"                getRoot().close();","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"        };","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"        textArea.setOnKeyPressed(ctrlSHandler);","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"        getRoot().showAndWait();","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"        return textArea.getText();","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Sheemo"},"content":"     * Returns true if the remark window is currently being shown.","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Sheemo"},"content":"    public boolean isShowing() {","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"Sheemo"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"Sheemo"},"content":"     * Hides the remark window.","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"Sheemo"},"content":"    public void hide() {","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"Sheemo"},"content":"        getRoot().hide();","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"Sheemo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"Sheemo"},"content":"     * Focuses on the remark window.","lastModifiedDate":"2023-04-05"},{"lineNumber":93,"author":{"gitId":"Sheemo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"Sheemo"},"content":"    public void focus() {","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Sheemo"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Sheemo":79,"wendy0107":18}},{"path":"src/main/java/seedu/address/ui/ResultPersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.tag.Module;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"Bentimate"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Bentimate"},"content":" * Card containing a person","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Bentimate"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"public class ResultPersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"    private static final String FXML \u003d \"ResultPersonCard.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"    public final Person person;","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ResultPersonCard.class);","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"    private Label name;","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"    private Label phone;","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"    private Label address;","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"    private Label email;","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"EvitanRelta"},"content":"    private FlowPane modules;","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"    private HBox tagset;","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"    private Label remark;","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"    private Label telegram;","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"     * Creates a {@code ResultPersonCard} with the given {@code Person} to display.","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"    public ResultPersonCard(Person person) {","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"        super(FXML);","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"        phone.setText(person.getOptionalPhone().map(Phone::toString).orElse(null));","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"        address.setText(person.getOptionalAddress().map(Address::toString).orElse(null));","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"        email.setText(person.getOptionalEmail().map(Email::toString).orElse(null));","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"        remark.setText(person.getOptionalRemark().map(Remark::toString).orElse(null));","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"        telegram.setText(person.getOptionalTelegram().map(Telegram::toString).orElse(null));","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"        person.getOptionalEducation()","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"                .map(education -\u003e new Label(\"Education: \" + education.value))","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"                .ifPresent(label -\u003e tags.getChildren().add(setStyleEducationLabel(label)));","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"EvitanRelta"},"content":"        person.getModules().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"EvitanRelta"},"content":"                .sorted(Comparator.comparing(module -\u003e module.moduleName))","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"EvitanRelta"},"content":"                .forEach(module -\u003e tags.getChildren().add(createModuleLabel(module)));","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"        person.getTags().stream()","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"wendy0107"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"wendy0107"},"content":"        List\u003cLabel\u003e labels \u003d Arrays.asList(phone, address, email, telegram, remark);","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"wendy0107"},"content":"        resizeLabels(labels);","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"wendy0107"},"content":"        resizeFlowPane(tags);","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"wendy0107"},"content":"     * Sets the style for the Label containing Education.","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"wendy0107"},"content":"     * @param label Label containing Education.","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"wendy0107"},"content":"     * @return Label after setting style.","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"wendy0107"},"content":"    public Label setStyleEducationLabel(Label label) {","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"wendy0107"},"content":"        label.setStyle(\"-fx-background-color : #107896;\");","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"wendy0107"},"content":"        return label;","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"wendy0107"},"content":"     * Sets the style and creates a Label for Module.","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"wendy0107"},"content":"     * @param module Module to create a label for.","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"wendy0107"},"content":"     * @return Module as a Label.","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"wendy0107"},"content":"    public Label createModuleLabel(Module module) {","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"wendy0107"},"content":"        Label moduleLabel \u003d new Label(module.moduleName);","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"EvitanRelta"},"content":"        moduleLabel.setStyle(\"-fx-background-color : #829356;\");","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"EvitanRelta"},"content":"        return moduleLabel;","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"wendy0107"},"content":"     * Checks if Labels are empty and sets them as invisible.","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"wendy0107"},"content":"     * @param labels List of labels to check.","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"wendy0107"},"content":"    public void resizeLabels(List\u003cLabel\u003e labels) {","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"wendy0107"},"content":"        for (int i \u003d 0; i \u003c labels.size(); i++) {","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"wendy0107"},"content":"            Label label \u003d labels.get(i);","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"wendy0107"},"content":"            String text \u003d label.getText();","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"wendy0107"},"content":"            if (text \u003d\u003d null || text.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"wendy0107"},"content":"                label.setVisible(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"wendy0107"},"content":"                label.setManaged(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":118,"author":{"gitId":"wendy0107"},"content":"     * Checks if flowpane is empty and sets the flowpane to be invisble if so, otherwise adds an icon to the flowpane.","lastModifiedDate":"2023-04-04"},{"lineNumber":119,"author":{"gitId":"wendy0107"},"content":"     * @param flowpane Flowpane to check for.","lastModifiedDate":"2023-04-04"},{"lineNumber":120,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":121,"author":{"gitId":"wendy0107"},"content":"    public void resizeFlowPane(FlowPane flowpane) {","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"wendy0107"},"content":"        if (flowpane.getChildren().isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"wendy0107"},"content":"            flowpane.setVisible(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"wendy0107"},"content":"            flowpane.setManaged(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"wendy0107"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"wendy0107"},"content":"            Image tagIcon \u003d new Image(getClass().getResourceAsStream(\"/images/books.png\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"wendy0107"},"content":"            ImageView tagIconView \u003d new ImageView(tagIcon);","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"wendy0107"},"content":"            tagIconView.setFitWidth(16);","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"wendy0107"},"content":"            tagIconView.setFitHeight(16);","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"wendy0107"},"content":"            flowpane.getChildren().add(0, tagIconView);","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"wendy0107"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":136,"author":{"gitId":"wendy0107"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-26"},{"lineNumber":137,"author":{"gitId":"wendy0107"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-26"},{"lineNumber":138,"author":{"gitId":"wendy0107"},"content":"            return true;","lastModifiedDate":"2023-03-26"},{"lineNumber":139,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":140,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":141,"author":{"gitId":"wendy0107"},"content":"        if (!(other instanceof ResultPersonCard)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":142,"author":{"gitId":"wendy0107"},"content":"            return false;","lastModifiedDate":"2023-03-26"},{"lineNumber":143,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":144,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":145,"author":{"gitId":"wendy0107"},"content":"        ResultPersonCard card \u003d (ResultPersonCard) other;","lastModifiedDate":"2023-03-26"},{"lineNumber":146,"author":{"gitId":"wendy0107"},"content":"        return person.equals(card.person);","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":148,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wendy0107":137,"Bentimate":3,"EvitanRelta":8}},{"path":"src/main/java/seedu/address/ui/ResultPersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"public class ResultPersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    private static final String FXML \u003d \"ResultPersonListPanel.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    private ListView\u003cPerson\u003e resultPersonListView;","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"    public ResultPersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"        super(FXML);","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"        resultPersonListView.setItems(personList);","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"        resultPersonListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"                setText(null);","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"            } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"                setGraphic(new ResultPersonCard(person).getRoot());","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wendy0107":49}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/teacher.png\";","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wendy0107":1,"-":87}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"  \u003cTextField fx:id\u003d\"commandSuggestionTextField\"/\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" onKeyPressed\u003d\"#handleKeyPressed\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"EvitanRelta":3,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"EvitanRelta"},"content":"#commandTextField, #commandSuggestionTextField {","lastModifiedDate":"2023-03-28"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"EvitanRelta"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":329,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":330,"author":{"gitId":"EvitanRelta"},"content":"#commandTextField {","lastModifiedDate":"2023-03-28"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"EvitanRelta"},"content":"#commandSuggestionTextField {","lastModifiedDate":"2023-03-28"},{"lineNumber":335,"author":{"gitId":"EvitanRelta"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2023-03-28"},{"lineNumber":336,"author":{"gitId":"EvitanRelta"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":337,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":338,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"EvitanRelta":8,"-":351}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"EvitanRelta":1,"-":43}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"         title\u003d\"TeachMeSenpai\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"    \u003cImage url\u003d\"@/images/teacher.png\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"        \u003cSplitPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"          \u003cVBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"                   minHeight\u003d\"200\" prefHeight\u003d\"200\" maxHeight\u003d\"200\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"            \u003cStackPane fx:id\u003d\"resultPersonListPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"wendy0107":8,"EvitanRelta":1,"-":55}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"    \u003cVBox alignment\u003d\"TOP_LEFT\" minHeight\u003d\"50\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"        \u003cLabel fx:id\u003d\"telegram\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"            \u003cgraphic\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"                \u003cImageView fitHeight\u003d\"17\" fitWidth\u003d\"17\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"                    \u003cImage url\u003d\"@/images/telegram.png\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"            \u003c/graphic\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"        \u003cgraphic\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"        \u003cImageView fitHeight\u003d\"17\" fitWidth\u003d\"17\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"          \u003cImage url\u003d\"@/images/smartphone.png\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"        \u003c/graphic\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"          \u003cgraphic\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"              \u003cImageView fitHeight\u003d\"17\" fitWidth\u003d\"17\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"                  \u003cImage url\u003d\"@/images/house.png\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"              \u003c/ImageView\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"          \u003c/graphic\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"          \u003cgraphic\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"              \u003cImageView fitHeight\u003d\"17\" fitWidth\u003d\"17\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"                  \u003cImage url\u003d\"@/images/email2.png\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"              \u003c/ImageView\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"          \u003c/graphic\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" wrapText\u003d\"true\" \u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"          \u003cgraphic\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"              \u003cImageView fitHeight\u003d\"17\" fitWidth\u003d\"17\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"                  \u003cImage url\u003d\"@/images/remark.png\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"              \u003c/ImageView\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"wendy0107"},"content":"          \u003c/graphic\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"wendy0107"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"wendy0107"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"wendy0107"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wendy0107":45,"EvitanRelta":1,"-":28}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"EvitanRelta":1,"-":7}},{"path":"src/main/resources/view/RemarkWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"#helpMessageContainer {","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"#textArea {","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"wendy0107":14}},{"path":"src/main/resources/view/RemarkWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"\u003cfx:root resizable\u003d\"true\" title\u003d\"Editing remarks\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"  \u003cicons\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    \u003cImage url\u003d\"@/images/remarkWindowIcon.png\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"  \u003cscene\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    \u003cScene\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        \u003cURL value\u003d\"@RemarkWindow.css\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\" maxHeight\u003d\"500\" maxWidth\u003d\"500\" \u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"          \u003cTextArea fx:id\u003d\"textArea\" wrapText\u003d\"true\" HBox.hgrow\u003d\"SOMETIMES\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Sheemo":29,"wendy0107":4,"EvitanRelta":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"wendy0107":1,"EvitanRelta":2,"-":6}},{"path":"src/main/resources/view/ResultPersonCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"            \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"        \u003cVBox alignment\u003d\"TOP_LEFT\" minHeight\u003d\"80\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"            \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"            \u003cLabel fx:id\u003d\"telegram\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"                \u003cgraphic\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"                    \u003cImageView fitHeight\u003d\"17\" fitWidth\u003d\"17\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"wendy0107"},"content":"                        \u003cImage url\u003d\"@/images/telegram.png\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"wendy0107"},"content":"                    \u003c/ImageView\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"wendy0107"},"content":"                \u003c/graphic\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"wendy0107"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"wendy0107"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"wendy0107"},"content":"                \u003cgraphic\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"                    \u003cImageView fitHeight\u003d\"16\" fitWidth\u003d\"16\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"                        \u003cImage url\u003d\"@/images/smartphone.png\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"wendy0107"},"content":"                    \u003c/ImageView\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"wendy0107"},"content":"                \u003c/graphic\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"wendy0107"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"wendy0107"},"content":"                \u003cgraphic\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"wendy0107"},"content":"                    \u003cImageView fitHeight\u003d\"16\" fitWidth\u003d\"16\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"                        \u003cImage url\u003d\"@/images/house.png\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"wendy0107"},"content":"                    \u003c/ImageView\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"wendy0107"},"content":"                \u003c/graphic\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"wendy0107"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"wendy0107"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"wendy0107"},"content":"                \u003cgraphic\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"                    \u003cImageView fitHeight\u003d\"16\" fitWidth\u003d\"16\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"                        \u003cImage url\u003d\"@/images/email2.png\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"wendy0107"},"content":"                    \u003c/ImageView\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"wendy0107"},"content":"                \u003c/graphic\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"wendy0107"},"content":"            \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"wendy0107"},"content":"                \u003cgraphic\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"wendy0107"},"content":"                    \u003cImageView fitHeight\u003d\"16\" fitWidth\u003d\"16\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"                        \u003cImage url\u003d\"@/images/remark.png\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"wendy0107"},"content":"                    \u003c/ImageView\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"wendy0107"},"content":"                \u003c/graphic\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"wendy0107"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"wendy0107"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wendy0107":65,"EvitanRelta":1}},{"path":"src/main/resources/view/ResultPersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"    \u003cListView fx:id\u003d\"resultPersonListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"wendy0107":7,"EvitanRelta":1}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"EvitanRelta":1,"-":11}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"Bentimate"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsFullIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"Bentimate"},"content":"            -\u003e StringUtil.containsFullIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"Bentimate"},"content":"            -\u003e StringUtil.containsFullIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"Bentimate"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsFullIgnoreCase(null, \"abc\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"Bentimate"},"content":"        assertFalse(StringUtil.containsFullIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"Bentimate"},"content":"        assertFalse(StringUtil.containsFullIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"Bentimate"},"content":"        assertFalse(StringUtil.containsFullIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"Bentimate"},"content":"        assertFalse(StringUtil.containsFullIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"Bentimate"},"content":"        assertTrue(StringUtil.containsFullIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"Bentimate"},"content":"        assertTrue(StringUtil.containsFullIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"Bentimate"},"content":"        assertTrue(StringUtil.containsFullIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"Bentimate"},"content":"        assertTrue(StringUtil.containsFullIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"Bentimate"},"content":"        assertTrue(StringUtil.containsFullIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"Bentimate"},"content":"        assertTrue(StringUtil.containsFullIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Bentimate":14,"-":129}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EDUCATION_DESC_AMY;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"EvitanRelta"},"content":"                + ADDRESS_DESC_AMY + EDUCATION_DESC_AMY + TELEGRAM_DESC_AMY;","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"EvitanRelta"},"content":"        expectedModel.commitAddressBook(AddCommand.COMMAND_WORD);","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"EvitanRelta":4,"-":161}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"        expectedModel.commitAddressBook(AddCommand.COMMAND_WORD);","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"EvitanRelta":1,"-":45}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"EvitanRelta"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"EvitanRelta"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"Sheemo"},"content":"        @Override","lastModifiedDate":"2023-04-05"},{"lineNumber":133,"author":{"gitId":"Sheemo"},"content":"        public boolean canReplacePerson(Person toBeReplaced, Person replacement) {","lastModifiedDate":"2023-04-05"},{"lineNumber":134,"author":{"gitId":"Sheemo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-05"},{"lineNumber":135,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":136,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":157,"author":{"gitId":"Sheemo"},"content":"        @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":158,"author":{"gitId":"Sheemo"},"content":"        public ArrayList\u003cString\u003e getExistingEducationValues() {","lastModifiedDate":"2023-04-02"},{"lineNumber":159,"author":{"gitId":"Sheemo"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-04-02"},{"lineNumber":160,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":161,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":162,"author":{"gitId":"Sheemo"},"content":"        @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":163,"author":{"gitId":"Sheemo"},"content":"        public ArrayList\u003cString\u003e getExistingModuleValues() {","lastModifiedDate":"2023-04-02"},{"lineNumber":164,"author":{"gitId":"Sheemo"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-04-02"},{"lineNumber":165,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":166,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":167,"author":{"gitId":"Sheemo"},"content":"        @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":168,"author":{"gitId":"Sheemo"},"content":"        public ArrayList\u003cString\u003e getExistingTagValues() {","lastModifiedDate":"2023-04-02"},{"lineNumber":169,"author":{"gitId":"Sheemo"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-04-02"},{"lineNumber":170,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":171,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":172,"author":{"gitId":"Sheemo"},"content":"        @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":173,"author":{"gitId":"Sheemo"},"content":"        public boolean checkUndoable() {","lastModifiedDate":"2023-04-02"},{"lineNumber":174,"author":{"gitId":"Sheemo"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-04-02"},{"lineNumber":175,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":176,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":177,"author":{"gitId":"Sheemo"},"content":"        @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":178,"author":{"gitId":"Sheemo"},"content":"        public boolean checkRedoable() {","lastModifiedDate":"2023-04-02"},{"lineNumber":179,"author":{"gitId":"Sheemo"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-04-02"},{"lineNumber":180,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":181,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":182,"author":{"gitId":"Sheemo"},"content":"        @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":183,"author":{"gitId":"EvitanRelta"},"content":"        public String undoAddressBook() {","lastModifiedDate":"2023-04-07"},{"lineNumber":184,"author":{"gitId":"Sheemo"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-04-02"},{"lineNumber":185,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":186,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":187,"author":{"gitId":"Sheemo"},"content":"        @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":188,"author":{"gitId":"EvitanRelta"},"content":"        public String redoAddressBook() {","lastModifiedDate":"2023-04-07"},{"lineNumber":189,"author":{"gitId":"Sheemo"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-04-02"},{"lineNumber":190,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":191,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":192,"author":{"gitId":"Sheemo"},"content":"        @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":193,"author":{"gitId":"EvitanRelta"},"content":"        public void commitAddressBook(String lastExecutedCommand) {","lastModifiedDate":"2023-04-06"},{"lineNumber":194,"author":{"gitId":"Sheemo"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-04-02"},{"lineNumber":195,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":196,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":197,"author":{"gitId":"Sheemo"},"content":"        @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":198,"author":{"gitId":"Sheemo"},"content":"        public void updateShowPerson(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-04-02"},{"lineNumber":199,"author":{"gitId":"Sheemo"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-04-02"},{"lineNumber":200,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":201,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":202,"author":{"gitId":"Sheemo"},"content":"        @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":203,"author":{"gitId":"Sheemo"},"content":"        public ObservableList\u003cPerson\u003e getShowPerson() {","lastModifiedDate":"2023-04-02"},{"lineNumber":204,"author":{"gitId":"Sheemo"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-04-02"},{"lineNumber":205,"author":{"gitId":"Sheemo"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":206,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":207,"author":{"gitId":"EvitanRelta"},"content":"        @Override","lastModifiedDate":"2023-04-04"},{"lineNumber":208,"author":{"gitId":"EvitanRelta"},"content":"        public void setDefaultShowPerson() {","lastModifiedDate":"2023-04-04"},{"lineNumber":209,"author":{"gitId":"EvitanRelta"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-04-04"},{"lineNumber":210,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":254,"author":{"gitId":"EvitanRelta"},"content":"        @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":255,"author":{"gitId":"EvitanRelta"},"content":"        public void commitAddressBook(String lastExecutedCommand) {","lastModifiedDate":"2023-04-06"},{"lineNumber":256,"author":{"gitId":"EvitanRelta"},"content":"            return;","lastModifiedDate":"2023-04-06"},{"lineNumber":257,"author":{"gitId":"EvitanRelta"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Sheemo":52,"EvitanRelta":15,"-":193}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"EvitanRelta"},"content":"        expectedModel.commitAddressBook(ClearCommand.COMMAND_WORD);","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"        expectedModel.commitAddressBook(ClearCommand.COMMAND_WORD);","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"EvitanRelta":2,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, null)));","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, null)));","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, null)));","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, null).hashCode());","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, null).hashCode());","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Sheemo":5,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"    public static final String VALID_EDUCATION_AMY \u003d \"JC 1\";","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"    public static final String VALID_EDUCATION_BOB \u003d \"JC 2\";","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"Bentimate"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Bentimate"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"EvitanRelta"},"content":"    public static final String VALID_MODULE_CS2103T \u003d \"CS2103T\";","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"EvitanRelta"},"content":"    public static final String VALID_MODULE_CS2030 \u003d \"CS2030\";","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"EvitanRelta"},"content":"    public static final String VALID_TELEGRAM_AMY \u003d \"@amy123\";","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"EvitanRelta"},"content":"    public static final String VALID_TELEGRAM_BOB \u003d \"@bob456\";","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"EvitanRelta"},"content":"    public static final String EDUCATION_DESC_AMY \u003d \" \" + PREFIX_EDUCATION + VALID_EDUCATION_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"EvitanRelta"},"content":"    public static final String EDUCATION_DESC_BOB \u003d \" \" + PREFIX_EDUCATION + VALID_EDUCATION_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"EvitanRelta"},"content":"    public static final String MODULE_DESC_AMY \u003d \" \" + PREFIX_MODULE + VALID_MODULE_CS2103T;","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"EvitanRelta"},"content":"    public static final String MODULE_DESC_BOB \u003d \" \" + PREFIX_MODULE + VALID_MODULE_CS2030 + \" \"","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"EvitanRelta"},"content":"            + PREFIX_MODULE + VALID_MODULE_CS2103T;","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"EvitanRelta"},"content":"    public static final String TELEGRAM_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_AMY;","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"EvitanRelta"},"content":"    public static final String TELEGRAM_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_BOB;","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"EvitanRelta"},"content":"    public static final String EMPTY_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS;","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"EvitanRelta"},"content":"    public static final String EMPTY_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL;","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"EvitanRelta"},"content":"    public static final String EMPTY_PHONE_DESC \u003d \" \" + PREFIX_PHONE;","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"EvitanRelta"},"content":"    public static final String INVALID_EDUCATION_DESC \u003d \" \" + PREFIX_EMAIL + \"#P6\"; // \u0027#\u0027 not allowed in edu","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"EvitanRelta"},"content":"    public static final String INVALID_MODULE_DESC \u003d \" \" + PREFIX_MODULE + \"math()\"; // () not allowed in module","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"EvitanRelta"},"content":"    public static final String INVALID_TELEGRAM_DESC \u003d \" \" + PREFIX_TELEGRAM + \"hello\"; // @ must be included in tele","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"Sheemo"},"content":"    public static final String VALID_REMARK \u003d \"Hello\";","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"EvitanRelta"},"content":"                .withEducation(VALID_EDUCATION_AMY).withModules(VALID_MODULE_CS2030).withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"EvitanRelta"},"content":"                .withEducation(VALID_EDUCATION_BOB).withModules(VALID_MODULE_CS2103T).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2023-04-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-04-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Sheemo":2,"Bentimate":2,"EvitanRelta":25,"-":125}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"import java.util.List;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"        expectedModel.commitAddressBook(DeleteCommand.COMMAND_WORD);","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of(outOfBoundIndex));","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"EvitanRelta"},"content":"        expectedModel.commitAddressBook(DeleteCommand.COMMAND_WORD);","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"Sheemo"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of(outOfBoundIndex));","lastModifiedDate":"2023-04-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"Sheemo"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(List.of(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-04-02"},{"lineNumber":81,"author":{"gitId":"Sheemo"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(List.of(INDEX_SECOND_PERSON));","lastModifiedDate":"2023-04-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"Sheemo"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(List.of(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-04-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Sheemo":7,"EvitanRelta":4,"-":88}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"        Person personToBeEdited \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"        String remarkStr \u003d personToBeEdited.getOptionalRemark().map(Remark::toString).orElse(null);","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"EvitanRelta"},"content":"        // Remark stays the same, as it cannot be edited via \u0027edit\u0027 command.","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"EvitanRelta"},"content":"        Person editedPerson \u003d new PersonBuilder().withRemark(remarkStr).build();","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":52,"author":{"gitId":"EvitanRelta"},"content":"        expectedModel.commitAddressBook(EditCommand.COMMAND_WORD);","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":74,"author":{"gitId":"EvitanRelta"},"content":"        expectedModel.commitAddressBook(EditCommand.COMMAND_WORD);","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"EvitanRelta"},"content":"        expectedModel.commitAddressBook(EditCommand.COMMAND_WORD);","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":105,"author":{"gitId":"EvitanRelta"},"content":"        expectedModel.commitAddressBook(EditCommand.COMMAND_WORD);","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"EvitanRelta":10,"-":172}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, null);","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Sheemo":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EvitanRelta"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"import java.util.List;","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"EvitanRelta"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"EvitanRelta"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.predicates.ContainsKeywordsPredicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"/**","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"EvitanRelta"},"content":" * Contains integration tests (interaction with the Model) for {@code FilterCommand}.","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":" */","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"public class FilterCommandTest {","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"EvitanRelta"},"content":"    private Model model;","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"EvitanRelta"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"EvitanRelta"},"content":"    public void setUp() {","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"EvitanRelta"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"EvitanRelta"},"content":"    public void equals() {","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"EvitanRelta"},"content":"        String first \u003d \"first\";","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"EvitanRelta"},"content":"        String second \u003d \"second\";","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"EvitanRelta"},"content":"        ArgumentMultimap firstMultimap \u003d ArgumentTokenizer.tokenize(first);","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"EvitanRelta"},"content":"        ArgumentMultimap secondMultimap \u003d ArgumentTokenizer.tokenize(second);","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"EvitanRelta"},"content":"        ContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"EvitanRelta"},"content":"                new ContainsKeywordsPredicate(firstMultimap);","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"EvitanRelta"},"content":"        ContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"EvitanRelta"},"content":"                new ContainsKeywordsPredicate(secondMultimap);","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"EvitanRelta"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"EvitanRelta"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"EvitanRelta"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"EvitanRelta"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"EvitanRelta"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"EvitanRelta"},"content":"        FilterCommand filterFirstCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"EvitanRelta"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"EvitanRelta"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"EvitanRelta"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"EvitanRelta"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"EvitanRelta"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"EvitanRelta"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"EvitanRelta"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"EvitanRelta"},"content":"    // TODO","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"EvitanRelta"},"content":"    // Change behavior to disallow field-less filter.","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"EvitanRelta"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"EvitanRelta"},"content":"    public void execute_noArgs_noPersonFound() {","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"EvitanRelta"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"EvitanRelta"},"content":"        ContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"EvitanRelta"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"EvitanRelta"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"EvitanRelta"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"EvitanRelta"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"EvitanRelta"},"content":"        assertEquals(List.of(), model.getFilteredPersonList());","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"EvitanRelta"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"EvitanRelta"},"content":"    private ContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"EvitanRelta"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"EvitanRelta"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_EDUCATION, PREFIX_REMARK, PREFIX_MODULE, PREFIX_TAG);","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"EvitanRelta"},"content":"        return new ContainsKeywordsPredicate(argMultimap);","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"EvitanRelta"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"EvitanRelta"},"content":"    public void execute_singleNameArg_multiplePersonsFound() {","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"EvitanRelta"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"EvitanRelta"},"content":"        ContainsKeywordsPredicate predicate \u003d preparePredicate(\" n/meier\");","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"EvitanRelta"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"EvitanRelta"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"EvitanRelta"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"EvitanRelta"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"EvitanRelta"},"content":"        assertEquals(List.of(TypicalPersons.BENSON, TypicalPersons.DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"EvitanRelta"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"EvitanRelta"},"content":"    public void execute_multipleNameArgs_multiplePersonsFound() {","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"EvitanRelta"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-04-07"},{"lineNumber":114,"author":{"gitId":"EvitanRelta"},"content":"        ContainsKeywordsPredicate predicate \u003d preparePredicate(\" n/meier n/car\");","lastModifiedDate":"2023-04-07"},{"lineNumber":115,"author":{"gitId":"EvitanRelta"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2023-04-07"},{"lineNumber":116,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"EvitanRelta"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"EvitanRelta"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"EvitanRelta"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"EvitanRelta"},"content":"        assertEquals(List.of(TypicalPersons.BENSON, TypicalPersons.CARL, TypicalPersons.DANIEL),","lastModifiedDate":"2023-04-07"},{"lineNumber":122,"author":{"gitId":"EvitanRelta"},"content":"                model.getFilteredPersonList());","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":124,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"EvitanRelta"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"EvitanRelta":125}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"import java.util.List;","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"EvitanRelta"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"alextang809"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.parser.predicates.FullMatchKeywordsPredicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"alextang809"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"alextang809"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"EvitanRelta"},"content":"    private Model model;","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"EvitanRelta"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"EvitanRelta"},"content":"    public void setUp() {","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"Bentimate"},"content":"        String first \u003d \"first\";","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Bentimate"},"content":"        String second \u003d \"second\";","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Bentimate"},"content":"        ArgumentMultimap firstMultimap \u003d ArgumentTokenizer.tokenize(first);","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"EvitanRelta"},"content":"        ArgumentMultimap secondMultimap \u003d ArgumentTokenizer.tokenize(second);","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"Bentimate"},"content":"        FullMatchKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"Bentimate"},"content":"                new FullMatchKeywordsPredicate(firstMultimap);","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Bentimate"},"content":"        FullMatchKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Bentimate"},"content":"                new FullMatchKeywordsPredicate(secondMultimap);","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"EvitanRelta"},"content":"    // TODO","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"EvitanRelta"},"content":"    // Change behavior to disallow field-less find.","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"EvitanRelta"},"content":"    public void execute_noArgs_allPersonFound() {","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"EvitanRelta"},"content":"        int totalNumOfPersons \u003d model.getAddressBook().getPersonList().size();","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"EvitanRelta"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, totalNumOfPersons);","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"Bentimate"},"content":"        FullMatchKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"EvitanRelta"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"alextang809"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"EvitanRelta"},"content":"        assertEquals(model.getAddressBook().getPersonList(), model.getFilteredPersonList());","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"alextang809"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"alextang809"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"alextang809"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"Bentimate"},"content":"    private FullMatchKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"Bentimate"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"EvitanRelta"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_EDUCATION, PREFIX_REMARK, PREFIX_MODULE, PREFIX_TAG);","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"Bentimate"},"content":"        return new FullMatchKeywordsPredicate(argMultimap);","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":100,"author":{"gitId":"EvitanRelta"},"content":"    public void execute_singleNameArg_multiplePersonsFound() {","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"EvitanRelta"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"EvitanRelta"},"content":"        FullMatchKeywordsPredicate predicate \u003d preparePredicate(\" n/meier\");","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"EvitanRelta"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"EvitanRelta"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"EvitanRelta"},"content":"        assertEquals(List.of(TypicalPersons.BENSON, TypicalPersons.DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"EvitanRelta"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"EvitanRelta"},"content":"    public void execute_multipleNameArgs_onePersonFound() {","lastModifiedDate":"2023-04-07"},{"lineNumber":114,"author":{"gitId":"EvitanRelta"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-04-07"},{"lineNumber":115,"author":{"gitId":"EvitanRelta"},"content":"        FullMatchKeywordsPredicate predicate \u003d preparePredicate(\" n/meier n/ben\");","lastModifiedDate":"2023-04-07"},{"lineNumber":116,"author":{"gitId":"EvitanRelta"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"EvitanRelta"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"EvitanRelta"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"alextang809"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"EvitanRelta"},"content":"        assertEquals(List.of(TypicalPersons.BENSON), model.getFilteredPersonList());","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Bentimate":15,"EvitanRelta":45,"alextang809":8,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, null);","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Sheemo":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bentimate"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"Bentimate"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Bentimate"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Bentimate"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Bentimate"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Bentimate"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Bentimate"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Bentimate"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Bentimate"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Bentimate"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"    private Model model;","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"EvitanRelta"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"EvitanRelta"},"content":"    public void setUp() {","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"EvitanRelta"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Bentimate"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Bentimate"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Bentimate"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Bentimate"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"EvitanRelta"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, editedPerson.getOptionalRemark().get());","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Bentimate"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), model.getUserPrefs());","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"Bentimate"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"EvitanRelta"},"content":"        expectedModel.commitAddressBook(RemarkCommand.COMMAND_WORD);","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Bentimate"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"EvitanRelta"},"content":"     * Emulates deletion of remark from closing the remark window with no","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"EvitanRelta"},"content":"     * remarks entered, which works by running the {@code remark INDEX \\0} command,","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"EvitanRelta"},"content":"     * where {@code INDEX} is the person index, and {@code \\0} is a null character.","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"Bentimate"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"EvitanRelta"},"content":"    public void execute_deleteUsingNullChar_success() {","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"Bentimate"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"EvitanRelta"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(null).build();","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"EvitanRelta"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(\"\\0\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Bentimate"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Bentimate"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Bentimate"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"EvitanRelta"},"content":"        expectedModel.commitAddressBook(RemarkCommand.COMMAND_WORD);","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"Bentimate"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"Bentimate"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"Bentimate"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"Bentimate"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"Bentimate"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"Bentimate"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"Bentimate"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"EvitanRelta"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, editedPerson.getOptionalRemark().get());","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"Bentimate"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"Bentimate"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"Bentimate"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"EvitanRelta"},"content":"        expectedModel.commitAddressBook(RemarkCommand.COMMAND_WORD);","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"Bentimate"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"Bentimate"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"Bentimate"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"Bentimate"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"Bentimate"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"Bentimate"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"Bentimate"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"Bentimate"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"Bentimate"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"Bentimate"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"Bentimate"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"Bentimate"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"Bentimate"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"Bentimate"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"Bentimate"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"Bentimate"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"Bentimate"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"Bentimate"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"Bentimate"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"Bentimate"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"Bentimate"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"Bentimate"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"Bentimate"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"Sheemo"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2023-04-05"},{"lineNumber":129,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"Bentimate"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"Sheemo"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2023-04-05"},{"lineNumber":132,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"Bentimate"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"Sheemo"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2023-04-05"},{"lineNumber":135,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"Bentimate"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"Sheemo"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2023-04-05"},{"lineNumber":138,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"Bentimate"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"Sheemo"},"content":"        assertNotEquals(standardCommand, new RemarkCommand(INDEX_SECOND_PERSON, new Remark(VALID_REMARK_AMY)));","lastModifiedDate":"2023-04-05"},{"lineNumber":141,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"Bentimate"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"Sheemo"},"content":"        assertNotEquals(standardCommand, new RemarkCommand(INDEX_FIRST_PERSON, new Remark(VALID_REMARK_BOB)));","lastModifiedDate":"2023-04-05"},{"lineNumber":144,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"Bentimate"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Sheemo":10,"Bentimate":114,"EvitanRelta":21}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EDUCATION_DESC_AMY;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EDUCATION_DESC_BOB;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"EvitanRelta"},"content":"                + ADDRESS_DESC_BOB + EDUCATION_DESC_BOB + TELEGRAM_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"EvitanRelta"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"EvitanRelta"},"content":"                + ADDRESS_DESC_BOB + EDUCATION_DESC_BOB + TELEGRAM_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"EvitanRelta"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"EvitanRelta"},"content":"                + ADDRESS_DESC_BOB + EDUCATION_DESC_BOB + TELEGRAM_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"EvitanRelta"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"EvitanRelta"},"content":"                + ADDRESS_DESC_BOB + EDUCATION_DESC_BOB + TELEGRAM_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"EvitanRelta"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"EvitanRelta"},"content":"                + ADDRESS_DESC_BOB + EDUCATION_DESC_BOB + TELEGRAM_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"EvitanRelta"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":76,"author":{"gitId":"EvitanRelta"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"EvitanRelta"},"content":"                + ADDRESS_DESC_BOB + EDUCATION_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"wendy0107"},"content":"    public void parse_optionalFieldTagMissing_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":85,"author":{"gitId":"EvitanRelta"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"EvitanRelta"},"content":"                + EDUCATION_DESC_AMY + TELEGRAM_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"wendy0107"},"content":"    public void parse_optionalFieldAddressMissing_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"EvitanRelta"},"content":"        // no address","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"EvitanRelta"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withAddress(null).build();","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"EvitanRelta"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"EvitanRelta"},"content":"                + EDUCATION_DESC_AMY + TELEGRAM_DESC_AMY + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"wendy0107"},"content":"    public void parse_optionalFieldEmailMissing_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"EvitanRelta"},"content":"        // no email","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"EvitanRelta"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withEmail(null).build();","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"EvitanRelta"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"EvitanRelta"},"content":"                + EDUCATION_DESC_AMY + TELEGRAM_DESC_AMY + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"wendy0107"},"content":"    public void parse_optionalFieldPhoneMissing_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"EvitanRelta"},"content":"        // no phone","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"EvitanRelta"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withPhone(null).build();","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"EvitanRelta"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"EvitanRelta"},"content":"                + EDUCATION_DESC_AMY + TELEGRAM_DESC_AMY + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"EvitanRelta"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":114,"author":{"gitId":"EvitanRelta"},"content":"    public void parse_optionalFieldEducationMissing_success() {","lastModifiedDate":"2023-04-07"},{"lineNumber":115,"author":{"gitId":"EvitanRelta"},"content":"        // no education","lastModifiedDate":"2023-04-07"},{"lineNumber":116,"author":{"gitId":"EvitanRelta"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withEducation(null).build();","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"EvitanRelta"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"EvitanRelta"},"content":"                + TELEGRAM_DESC_AMY + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"EvitanRelta"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":122,"author":{"gitId":"EvitanRelta"},"content":"    public void parse_optionalFieldTelegramMissing_success() {","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"EvitanRelta"},"content":"        // no telegram","lastModifiedDate":"2023-04-07"},{"lineNumber":124,"author":{"gitId":"EvitanRelta"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTelegram(null).build();","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"EvitanRelta"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"EvitanRelta"},"content":"                + EDUCATION_DESC_AMY + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-04-07"},{"lineNumber":127,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-04-07"},{"lineNumber":135,"author":{"gitId":"EvitanRelta"},"content":"                + EDUCATION_DESC_BOB + TELEGRAM_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2023-04-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2023-04-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"wendy0107"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":170,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":171,"author":{"gitId":"EvitanRelta"},"content":"    public void parse_mixedMissingOptionals_success() {","lastModifiedDate":"2023-04-07"},{"lineNumber":172,"author":{"gitId":"EvitanRelta"},"content":"        Person expectedPerson;","lastModifiedDate":"2023-04-07"},{"lineNumber":173,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":174,"author":{"gitId":"Sheemo"},"content":"        // null address and null email","lastModifiedDate":"2023-03-15"},{"lineNumber":175,"author":{"gitId":"Sheemo"},"content":"        expectedPerson \u003d new PersonBuilder(AMY).withAddress(null).withEmail(null).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":176,"author":{"gitId":"Sheemo"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-03-15"},{"lineNumber":177,"author":{"gitId":"EvitanRelta"},"content":"                + EDUCATION_DESC_AMY + TELEGRAM_DESC_AMY + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-04-07"},{"lineNumber":178,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":179,"author":{"gitId":"Sheemo"},"content":"        // null address and null phone","lastModifiedDate":"2023-03-15"},{"lineNumber":180,"author":{"gitId":"Sheemo"},"content":"        expectedPerson \u003d new PersonBuilder(AMY).withAddress(null).withPhone(null).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":181,"author":{"gitId":"Sheemo"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-15"},{"lineNumber":182,"author":{"gitId":"EvitanRelta"},"content":"                + EDUCATION_DESC_AMY + TELEGRAM_DESC_AMY + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-04-07"},{"lineNumber":183,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"Sheemo"},"content":"        // null email and null phone","lastModifiedDate":"2023-03-15"},{"lineNumber":185,"author":{"gitId":"Sheemo"},"content":"        expectedPerson \u003d new PersonBuilder(AMY).withEmail(null).withPhone(null).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":186,"author":{"gitId":"Sheemo"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"EvitanRelta"},"content":"                + EDUCATION_DESC_AMY + TELEGRAM_DESC_AMY + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-04-07"},{"lineNumber":188,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":189,"author":{"gitId":"Sheemo"},"content":"        // all optional fields are null","lastModifiedDate":"2023-03-15"},{"lineNumber":190,"author":{"gitId":"EvitanRelta"},"content":"        expectedPerson \u003d new PersonBuilder(AMY).withAddress(null).withEmail(null).withPhone(null).withEducation(null)","lastModifiedDate":"2023-04-07"},{"lineNumber":191,"author":{"gitId":"EvitanRelta"},"content":"                .withTelegram(null).withTags().withModules().build();","lastModifiedDate":"2023-04-07"},{"lineNumber":192,"author":{"gitId":"EvitanRelta"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2023-04-07"},{"lineNumber":193,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Sheemo":17,"wendy0107":11,"EvitanRelta":56,"-":110}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.logic.parser.predicates.ContainsKeywordsPredicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.parser.predicates.FullMatchKeywordsPredicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"Bentimate"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"Sheemo"},"content":"        assertEquals(new DeleteCommand(List.of(INDEX_FIRST_PERSON)), command);","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"Bentimate"},"content":"        String keywords \u003d \" n/foo n/bar n/baz\";","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"Bentimate"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords);","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Bentimate"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(keywords, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"EvitanRelta"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_EDUCATION, PREFIX_REMARK, PREFIX_MODULE, PREFIX_TAG);","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"Bentimate"},"content":"        assertEquals(new FindCommand(new FullMatchKeywordsPredicate(argMultimap)), command);","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"EvitanRelta"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"EvitanRelta"},"content":"    public void parseCommand_fi() throws Exception {","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"EvitanRelta"},"content":"        String keywords \u003d \" n/foo n/bar n/baz\";","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"EvitanRelta"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"EvitanRelta"},"content":"                FilterCommand.COMMAND_WORD + \" \" + keywords);","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"EvitanRelta"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(keywords, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"EvitanRelta"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_EDUCATION, PREFIX_REMARK, PREFIX_MODULE, PREFIX_TAG);","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"EvitanRelta"},"content":"        assertEquals(new FilterCommand(new ContainsKeywordsPredicate(argMultimap)), command);","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"Bentimate"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"Bentimate"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"Bentimate"},"content":"        final String remark \u003d \"Some remark.\";","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"Bentimate"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"EvitanRelta"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + remark);","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"Bentimate"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, new Remark(remark)), command);","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Sheemo":1,"Bentimate":15,"EvitanRelta":19,"-":96}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DUPLICATE_PERSONS_INDEX;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"import java.util.List;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"    private static final String INVALID_DELETE_FORMAT_MESSAGE \u003d","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"EvitanRelta"},"content":"    public void parse_noArgs_throwsParseException() {","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"\", INVALID_DELETE_FORMAT_MESSAGE);","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"   \", INVALID_DELETE_FORMAT_MESSAGE);","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(List.of(INDEX_FIRST_PERSON)));","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"        assertParseSuccess(parser, \"2\", new DeleteCommand(List.of(INDEX_SECOND_PERSON)));","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"        assertParseSuccess(parser, \"  1  \", new DeleteCommand(List.of(INDEX_FIRST_PERSON)));","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"        assertParseSuccess(parser, \"  2  \", new DeleteCommand(List.of(INDEX_SECOND_PERSON)));","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"a\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"        assertParseFailure(parser, \"0\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"        assertParseFailure(parser, \"-1\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"    public void parse_multipleValidArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"        assertParseSuccess(parser, \"1 2\", new DeleteCommand(List.of(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON)));","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"EvitanRelta"},"content":"        assertParseSuccess(parser, \"2 1\", new DeleteCommand(List.of(INDEX_SECOND_PERSON, INDEX_FIRST_PERSON)));","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"EvitanRelta"},"content":"        assertParseSuccess(parser, \"  1   2  \", new DeleteCommand(List.of(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON)));","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"EvitanRelta"},"content":"        assertParseSuccess(parser, \"  2   1  \", new DeleteCommand(List.of(INDEX_SECOND_PERSON, INDEX_FIRST_PERSON)));","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"Sheemo"},"content":"    public void parse_multipleInvalidArgs_throwsParseException() {","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"a 1\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"0 1\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"-1 1\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"1 a\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"1 0\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"1 -1\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"   a  1   \", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"Sheemo"},"content":"        assertParseFailure(parser, \"   0  1   \", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"   -1  1   \", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"  1   a  \", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"  1  0  \", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"  1  -1  \", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"EvitanRelta"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"EvitanRelta"},"content":"    public void parse_duplicateIndexes_throwsParseException() {","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"1 1\", MESSAGE_DUPLICATE_PERSONS_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"2 2 2\", MESSAGE_DUPLICATE_PERSONS_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"1 2 2\", MESSAGE_DUPLICATE_PERSONS_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"  1   1 \", MESSAGE_DUPLICATE_PERSONS_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"  2   2   2  \", MESSAGE_DUPLICATE_PERSONS_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"  1   2   2  \", MESSAGE_DUPLICATE_PERSONS_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":85,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Sheemo":15,"EvitanRelta":39,"-":32}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EDUCATION_AMY;","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_CS2030;","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"EvitanRelta"},"content":"    private static final String TAG_PREFIX \u003d \" t/\";","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"EvitanRelta"},"content":"    private static final String NAME_PREFIX \u003d \" n/\";","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"EvitanRelta"},"content":"    private static final String ADDRESS_PREFIX \u003d \" a/\";","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"EvitanRelta"},"content":"    private static final String EMAIL_PREFIX \u003d \" e/\";","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"EvitanRelta"},"content":"    private static final String PHONE_PREFIX \u003d \" p/\";","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"EvitanRelta"},"content":"    private static final String TELEGRAM_PREFIX \u003d \" tele/\";","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"EvitanRelta"},"content":"    private static final String MODULE_PREFIX \u003d \" m/\";","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"EvitanRelta"},"content":"    private static final String EDUCATION_PREFIX \u003d \" edu/\";","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"NOT_INDEX\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"1\" + TAG_PREFIX + VALID_TAG_FRIEND + TAG_PREFIX + VALID_TAG_HUSBAND","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"EvitanRelta"},"content":"                + TAG_PREFIX, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"1\" + TAG_PREFIX + VALID_TAG_FRIEND + TAG_PREFIX","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"EvitanRelta"},"content":"                + TAG_PREFIX + VALID_TAG_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"EvitanRelta"},"content":"        assertParseFailure(parser, \"1\" + TAG_PREFIX + TAG_PREFIX + VALID_TAG_FRIEND + TAG_PREFIX","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"EvitanRelta"},"content":"                + VALID_TAG_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":116,"author":{"gitId":"EvitanRelta"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_PREFIX + VALID_PHONE_BOB + TAG_PREFIX + VALID_TAG_HUSBAND","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"EvitanRelta"},"content":"                + EMAIL_PREFIX + VALID_EMAIL_AMY + ADDRESS_PREFIX + VALID_ADDRESS_AMY + NAME_PREFIX + VALID_NAME_AMY","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"EvitanRelta"},"content":"                + TAG_PREFIX + VALID_TAG_FRIEND + EDUCATION_PREFIX + VALID_EDUCATION_AMY","lastModifiedDate":"2023-04-08"},{"lineNumber":119,"author":{"gitId":"EvitanRelta"},"content":"                + TELEGRAM_PREFIX + VALID_TELEGRAM_AMY + MODULE_PREFIX + VALID_MODULE_CS2030;","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"EvitanRelta"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"EvitanRelta"},"content":"                .withEducation(VALID_EDUCATION_AMY).withModules(VALID_MODULE_CS2030).build();","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":133,"author":{"gitId":"EvitanRelta"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_PREFIX + VALID_PHONE_BOB + EMAIL_PREFIX + VALID_EMAIL_AMY;","lastModifiedDate":"2023-04-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"EvitanRelta"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_PREFIX + VALID_NAME_AMY;","lastModifiedDate":"2023-04-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"EvitanRelta"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_PREFIX + VALID_PHONE_AMY;","lastModifiedDate":"2023-04-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"EvitanRelta"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_PREFIX + VALID_EMAIL_AMY;","lastModifiedDate":"2023-04-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"EvitanRelta"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_PREFIX + VALID_ADDRESS_AMY;","lastModifiedDate":"2023-04-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"EvitanRelta"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_PREFIX + VALID_TAG_FRIEND;","lastModifiedDate":"2023-04-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"EvitanRelta"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_PREFIX + VALID_PHONE_AMY + ADDRESS_PREFIX","lastModifiedDate":"2023-04-08"},{"lineNumber":180,"author":{"gitId":"EvitanRelta"},"content":"                + VALID_ADDRESS_AMY + EMAIL_PREFIX + VALID_EMAIL_AMY + TAG_PREFIX + VALID_TAG_FRIEND + PHONE_PREFIX","lastModifiedDate":"2023-04-08"},{"lineNumber":181,"author":{"gitId":"EvitanRelta"},"content":"                + VALID_PHONE_AMY + ADDRESS_PREFIX + VALID_ADDRESS_AMY + EMAIL_PREFIX + VALID_EMAIL_AMY + TAG_PREFIX","lastModifiedDate":"2023-04-08"},{"lineNumber":182,"author":{"gitId":"EvitanRelta"},"content":"                + VALID_TAG_FRIEND + PHONE_PREFIX + VALID_PHONE_BOB + ADDRESS_PREFIX + VALID_ADDRESS_BOB + EMAIL_PREFIX","lastModifiedDate":"2023-04-08"},{"lineNumber":183,"author":{"gitId":"EvitanRelta"},"content":"                + VALID_EMAIL_BOB + TAG_PREFIX + VALID_TAG_HUSBAND;","lastModifiedDate":"2023-04-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"EvitanRelta"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_PREFIX + \"911a\" + PHONE_PREFIX + VALID_PHONE_BOB;","lastModifiedDate":"2023-04-08"},{"lineNumber":198,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"EvitanRelta"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_PREFIX + VALID_EMAIL_BOB + PHONE_PREFIX + \"911a\" + ADDRESS_PREFIX","lastModifiedDate":"2023-04-08"},{"lineNumber":205,"author":{"gitId":"EvitanRelta"},"content":"                + VALID_ADDRESS_BOB + PHONE_PREFIX + VALID_PHONE_BOB;","lastModifiedDate":"2023-04-08"},{"lineNumber":206,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":216,"author":{"gitId":"EvitanRelta"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_PREFIX;","lastModifiedDate":"2023-04-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":224,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":225,"author":{"gitId":"wendy0107"},"content":"    public void parse_resetAddress_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":226,"author":{"gitId":"wendy0107"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-15"},{"lineNumber":227,"author":{"gitId":"EvitanRelta"},"content":"        String userInput \u003d targetIndex.getOneBased() + ADDRESS_PREFIX;","lastModifiedDate":"2023-04-08"},{"lineNumber":228,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":229,"author":{"gitId":"EvitanRelta"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withAddress(null).build();","lastModifiedDate":"2023-03-22"},{"lineNumber":230,"author":{"gitId":"wendy0107"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":232,"author":{"gitId":"wendy0107"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-15"},{"lineNumber":233,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":234,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":235,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":236,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":237,"author":{"gitId":"wendy0107"},"content":"    public void parse_resetEmail_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":238,"author":{"gitId":"wendy0107"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-15"},{"lineNumber":239,"author":{"gitId":"EvitanRelta"},"content":"        String userInput \u003d targetIndex.getOneBased() + EMAIL_PREFIX;","lastModifiedDate":"2023-04-08"},{"lineNumber":240,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":241,"author":{"gitId":"EvitanRelta"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withEmail(null).build();","lastModifiedDate":"2023-03-22"},{"lineNumber":242,"author":{"gitId":"wendy0107"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":243,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":244,"author":{"gitId":"wendy0107"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-15"},{"lineNumber":245,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":246,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":247,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":248,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":249,"author":{"gitId":"wendy0107"},"content":"    public void parse_resetPhone_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":250,"author":{"gitId":"wendy0107"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-15"},{"lineNumber":251,"author":{"gitId":"EvitanRelta"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_PREFIX;","lastModifiedDate":"2023-04-08"},{"lineNumber":252,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":253,"author":{"gitId":"EvitanRelta"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(null).build();","lastModifiedDate":"2023-03-22"},{"lineNumber":254,"author":{"gitId":"wendy0107"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":255,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":256,"author":{"gitId":"wendy0107"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-15"},{"lineNumber":257,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":258,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"wendy0107":30,"EvitanRelta":50,"-":179}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"Bentimate"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.parser.predicates.FullMatchKeywordsPredicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"    public void parse_emptyArg_returnsFindCommand() {","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"        ArgumentMultimap emptyArgMultimap \u003d ArgumentTokenizer.tokenize(\"\");","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(new FullMatchKeywordsPredicate(emptyArgMultimap));","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"        assertParseSuccess(parser, \"     \", expectedFindCommand);","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"EvitanRelta"},"content":"        String args \u003d \" n/Alice n/Bob\"; // needs leading space.","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"                PREFIX_ADDRESS, PREFIX_EDUCATION, PREFIX_REMARK, PREFIX_MODULE, PREFIX_TAG, PREFIX_TELEGRAM);","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"Bentimate"},"content":"                new FindCommand(new FullMatchKeywordsPredicate(argMultimap));","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"EvitanRelta"},"content":"        assertParseSuccess(parser, args, expectedFindCommand);","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"        assertParseSuccess(parser, args.replaceAll(\" \", \" \\n \\t \"), expectedFindCommand);","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Bentimate":3,"EvitanRelta":17,"-":23}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, () -\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"                ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"EvitanRelta"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, () -\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"EvitanRelta"},"content":"                ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"EvitanRelta":5,"-":186}},{"path":"src/test/java/seedu/address/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bentimate"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"/**","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":" * outside of the RemarkCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":" * same path through the RemarkCommand, and therefore we test only one of them.","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":" */","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"Bentimate"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"Bentimate"},"content":"    private RemarkCommandParser parser \u003d new RemarkCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Bentimate"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"    public void parse_validIndex_returnsRemarkCommand() {","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"        assertParseSuccess(parser, \"1\", new RemarkCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"        assertParseSuccess(parser, \"2\", new RemarkCommand(INDEX_SECOND_PERSON, null));","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Bentimate"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Sheemo"},"content":"    public void parse_validIndexAndRemark_returnsRemarkCommand() {","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"Sheemo"},"content":"        assertParseSuccess(parser, \"1 \" + VALID_REMARK,","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"                new RemarkCommand(INDEX_FIRST_PERSON, new Remark(\"Hello\")));","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"        assertParseSuccess(parser, \"1 \\0\", new RemarkCommand(INDEX_FIRST_PERSON, new Remark(\"\\0\")));","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"    public void parse_validRemarkLeadingWhitespace_stripsWhitespace() {","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"        assertParseSuccess(parser, \"1 \\n\\n\\n\\n\\n\\t\\t\\t\\t\\t     \\t\\t\\t\\n\" + VALID_REMARK,","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"                new RemarkCommand(INDEX_FIRST_PERSON, new Remark(VALID_REMARK)));","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"Bentimate"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"    public void parse_validRemarkTrailingWhitespace_stripsWhitespace() {","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"        //assertParseSuccess(parser, \"1 \" + VALID_REMARK + \"\\n\\n\\n\\n\\n\\t\\t\\t   \\t\\t  \\n\",","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"        //        new RemarkCommand(INDEX_FIRST_PERSON, new Remark(VALID_REMARK)));","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"Sheemo"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"Sheemo"},"content":"        assertParseFailure(parser, \"0\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"Sheemo"},"content":"        assertParseFailure(parser, \"a\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"Sheemo"},"content":"        assertParseFailure(parser, \"-1\", MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"Bentimate"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Bentimate"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Sheemo":44,"Bentimate":13}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.parser.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Bentimate":1,"-":131}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"        assertTrue(Address.isValidAddress(\"trailing space \"));","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"EvitanRelta"},"content":"        // invalid addresses","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"EvitanRelta"},"content":"        assertFalse(Address.isValidAddress(\"   \")); // spaces only","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"        assertFalse(Address.isValidAddress(\" leading space\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"EvitanRelta":5,"-":26}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Bentimate"},"content":"import seedu.address.logic.parser.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Bentimate":1,"-":75}},{"path":"src/test/java/seedu/address/model/person/TelegramTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Sheemo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"Sheemo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"Sheemo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"Sheemo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"Sheemo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"Sheemo"},"content":"public class TelegramTest {","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"Sheemo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"Sheemo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Telegram(null));","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"Sheemo"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"Sheemo"},"content":"    public void isValidAddress() {","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"        // null address","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"Sheemo"},"content":"        assertThrows(NullPointerException.class, () -\u003e Telegram.isValidHandle(null));","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"Sheemo"},"content":"        // valid handles - short handles","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"        assertTrue(Telegram.isValidHandle(\"@bully\")); // lowercase characters only","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"Sheemo"},"content":"        assertTrue(Telegram.isValidHandle(\"@bu11y\")); // lowercase with numbers","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"Sheemo"},"content":"        assertTrue(Telegram.isValidHandle(\"@bu_ly\")); // lowercase with underscore","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"Sheemo"},"content":"        assertTrue(Telegram.isValidHandle(\"@bu_1y\")); // lowercase with numbers and underscore","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"Sheemo"},"content":"        assertTrue(Telegram.isValidHandle(\"@BULLY\")); // uppercase characters only","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"Sheemo"},"content":"        assertTrue(Telegram.isValidHandle(\"@Bu11Y\")); // uppercase and lowercase with numbers","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"Sheemo"},"content":"        assertTrue(Telegram.isValidHandle(\"@bU_Ly\")); // uppercase and lowercase with underscore","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"        assertTrue(Telegram.isValidHandle(\"@Bu_1Y\")); // uppercase and lowercase with numbers and underscore","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"Sheemo"},"content":"        // valid handles - long handles","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"        assertTrue(Telegram.isValidHandle(\"@aaaaaaaaaa_bbbbbbbbbb_cccccccccc\")); // lowercase with underscore","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"        // lowercase with underscore and numbers","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"        assertTrue(Telegram.isValidHandle(\"@a444444444_bbbbbbbbbb_cccccccccc\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"Sheemo"},"content":"        assertTrue(Telegram.isValidHandle(\"@a4444444442H3bh4b23b5HB23b5J2b3h\")); // uppercase and lowercase with numbers","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"        // invalid handles","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"        assertFalse(Telegram.isValidHandle(\"@_bull\")); // begins with underscore","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"Sheemo"},"content":"        assertFalse(Telegram.isValidHandle(\"@bull_\")); // ends with underscore","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"Sheemo"},"content":"        assertFalse(Telegram.isValidHandle(\"@bu__y\")); // has consecutive __","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"Sheemo"},"content":"        assertFalse(Telegram.isValidHandle(\"@8ully\")); // begins with number","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"Sheemo"},"content":"        assertFalse(Telegram.isValidHandle(\"@bull\")); // too short \u003c 5 characters","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"Sheemo"},"content":"        assertFalse(Telegram.isValidHandle(\"@bullybullybullybullybullybullybul\")); // too long \u003e 32 characters","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"        assertFalse(Telegram.isValidHandle(\"@bu{}y\")); // has invalid characters","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"Sheemo"},"content":"        assertFalse(Telegram.isValidHandle(\" @bully\")); // does not start with @","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"Sheemo"},"content":"        assertFalse(Telegram.isValidHandle(\"bully\")); // does not start with @","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"Sheemo"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"Sheemo"},"content":"}","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"Sheemo":46,"EvitanRelta":2}},{"path":"src/test/java/seedu/address/model/tag/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wendy0107"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"wendy0107"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"wendy0107"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"wendy0107"},"content":"public class ModuleTest {","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"wendy0107"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"wendy0107"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Module(null));","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"wendy0107"},"content":"    public void constructor_invalidModuleName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"wendy0107"},"content":"        String invalidModuleName \u003d \"()\";","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"wendy0107"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Module(invalidModuleName));","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"wendy0107"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"wendy0107"},"content":"    public void isValidModuleName() {","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"wendy0107"},"content":"        // null tag name","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"wendy0107"},"content":"        assertThrows(NullPointerException.class, () -\u003e Module.isValidModuleName(null));","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"wendy0107"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"wendy0107":26}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"        String invalidTagName \u003d \"tag with spaces\";","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"EvitanRelta":1,"-":25}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"EvitanRelta"},"content":"    private static final String INVALID_ADDRESS \u003d \"   \";","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"    private static final String INVALID_EDUCATION \u003d \"#Year 1\";","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"    private static final String INVALID_MODULE \u003d \"#CS2030S\";","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"Sheemo"},"content":"    private static final String INVALID_TELEGRAM \u003d \"@____\";","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Sheemo"},"content":"    private static final String VALID_PHONE \u003d BENSON.getOptionalPhone().map(Phone::toString).orElse(\"\");","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getOptionalEmail().map(Email::toString).orElse(\"\");","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"Sheemo"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getOptionalAddress().map(Address::toString).orElse(\"\");","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"EvitanRelta"},"content":"    private static final String VALID_EDUCATION \u003d BENSON.getOptionalEducation().map(Education::toString).orElse(\"\");","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"    private static final String VALID_REMARK \u003d BENSON.getOptionalRemark().map(Remark::toString).orElse(\"\");","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"    private static final List\u003cJsonAdaptedModule\u003e VALID_MODULES \u003d BENSON.getModules().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"            .map(JsonAdaptedModule::new)","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"wendy0107"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"Sheemo"},"content":"    private static final String VALID_TELEGRAM \u003d BENSON.getOptionalTelegram().map(Telegram::toString).orElse(\"\");","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"EvitanRelta"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"Sheemo"},"content":"                VALID_EDUCATION, VALID_REMARK, VALID_TELEGRAM, VALID_MODULES, VALID_TAGS);","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"EvitanRelta"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"                VALID_EDUCATION, VALID_REMARK, VALID_TELEGRAM, VALID_MODULES, VALID_TAGS);","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"EvitanRelta"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"Sheemo"},"content":"                VALID_EDUCATION, VALID_REMARK, VALID_TELEGRAM, VALID_MODULES, VALID_TAGS);","lastModifiedDate":"2023-04-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"EvitanRelta"},"content":"    public void toModelType_nullPhone_returnsPerson() throws Exception {","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"EvitanRelta"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"Sheemo"},"content":"                VALID_EDUCATION, VALID_REMARK, VALID_TELEGRAM, VALID_MODULES, VALID_TAGS);","lastModifiedDate":"2023-04-02"},{"lineNumber":83,"author":{"gitId":"EvitanRelta"},"content":"        Person expectedPerson \u003d new PersonBuilder(BENSON).withPhone(null).build();","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"EvitanRelta"},"content":"        assertEquals(expectedPerson, person.toModelType());","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"EvitanRelta"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"Sheemo"},"content":"                VALID_EDUCATION, VALID_REMARK, VALID_TELEGRAM, VALID_MODULES, VALID_TAGS);","lastModifiedDate":"2023-04-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"EvitanRelta"},"content":"    public void toModelType_nullEmail_returnsPerson() throws Exception {","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"EvitanRelta"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"EvitanRelta"},"content":"                VALID_EDUCATION, VALID_REMARK, VALID_TELEGRAM, VALID_MODULES, VALID_TAGS);","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"EvitanRelta"},"content":"        Person expectedPerson \u003d new PersonBuilder(BENSON).withEmail(null).build();","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"EvitanRelta"},"content":"        assertEquals(expectedPerson, person.toModelType());","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"EvitanRelta"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"EvitanRelta"},"content":"                VALID_EDUCATION, VALID_REMARK, VALID_TELEGRAM, VALID_MODULES, VALID_TAGS);","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"EvitanRelta"},"content":"    public void toModelType_nullAddress_returnsPerson() throws Exception {","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"EvitanRelta"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-04-07"},{"lineNumber":114,"author":{"gitId":"EvitanRelta"},"content":"                VALID_EDUCATION, VALID_REMARK, VALID_TELEGRAM, VALID_MODULES, VALID_TAGS);","lastModifiedDate":"2023-04-07"},{"lineNumber":115,"author":{"gitId":"EvitanRelta"},"content":"        Person expectedPerson \u003d new PersonBuilder(BENSON).withAddress(null).build();","lastModifiedDate":"2023-04-07"},{"lineNumber":116,"author":{"gitId":"EvitanRelta"},"content":"        assertEquals(expectedPerson, person.toModelType());","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"EvitanRelta"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"EvitanRelta"},"content":"    public void toModelType_invalidEducation_throwsIllegalValueException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"EvitanRelta"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-04-07"},{"lineNumber":122,"author":{"gitId":"EvitanRelta"},"content":"                INVALID_EDUCATION, VALID_REMARK, VALID_TELEGRAM, VALID_MODULES, VALID_TAGS);","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"EvitanRelta"},"content":"        String expectedMessage \u003d Education.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-04-07"},{"lineNumber":124,"author":{"gitId":"EvitanRelta"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":127,"author":{"gitId":"EvitanRelta"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":128,"author":{"gitId":"EvitanRelta"},"content":"    public void toModelType_nullEducation_returnsPerson() throws Exception {","lastModifiedDate":"2023-04-07"},{"lineNumber":129,"author":{"gitId":"EvitanRelta"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"EvitanRelta"},"content":"                null, VALID_REMARK, VALID_TELEGRAM, VALID_MODULES, VALID_TAGS);","lastModifiedDate":"2023-04-07"},{"lineNumber":131,"author":{"gitId":"EvitanRelta"},"content":"        Person expectedPerson \u003d new PersonBuilder(BENSON).withEducation(null).build();","lastModifiedDate":"2023-04-07"},{"lineNumber":132,"author":{"gitId":"EvitanRelta"},"content":"        assertEquals(expectedPerson, person.toModelType());","lastModifiedDate":"2023-04-07"},{"lineNumber":133,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":134,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":135,"author":{"gitId":"EvitanRelta"},"content":"    // No test for invalid remark, because remark is never invalid.","lastModifiedDate":"2023-04-07"},{"lineNumber":136,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":137,"author":{"gitId":"EvitanRelta"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":138,"author":{"gitId":"EvitanRelta"},"content":"    public void toModelType_nullRemark_returnsPerson() throws Exception {","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"EvitanRelta"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-04-07"},{"lineNumber":140,"author":{"gitId":"EvitanRelta"},"content":"                VALID_EDUCATION, null, VALID_TELEGRAM, VALID_MODULES, VALID_TAGS);","lastModifiedDate":"2023-04-07"},{"lineNumber":141,"author":{"gitId":"EvitanRelta"},"content":"        Person expectedPerson \u003d new PersonBuilder(BENSON).withRemark(null).build();","lastModifiedDate":"2023-04-07"},{"lineNumber":142,"author":{"gitId":"EvitanRelta"},"content":"        assertEquals(expectedPerson, person.toModelType());","lastModifiedDate":"2023-04-07"},{"lineNumber":143,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":144,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":145,"author":{"gitId":"EvitanRelta"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"EvitanRelta"},"content":"    public void toModelType_invalidTelegram_throwsIllegalValueException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":147,"author":{"gitId":"EvitanRelta"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"EvitanRelta"},"content":"                VALID_EDUCATION, VALID_REMARK, INVALID_TELEGRAM, VALID_MODULES, VALID_TAGS);","lastModifiedDate":"2023-04-07"},{"lineNumber":149,"author":{"gitId":"EvitanRelta"},"content":"        String expectedMessage \u003d Telegram.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":153,"author":{"gitId":"EvitanRelta"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":154,"author":{"gitId":"EvitanRelta"},"content":"    public void toModelType_nullTelegram_returnsPerson() throws Exception {","lastModifiedDate":"2023-04-07"},{"lineNumber":155,"author":{"gitId":"EvitanRelta"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-04-07"},{"lineNumber":156,"author":{"gitId":"EvitanRelta"},"content":"                VALID_EDUCATION, VALID_REMARK, null, VALID_MODULES, VALID_TAGS);","lastModifiedDate":"2023-04-07"},{"lineNumber":157,"author":{"gitId":"EvitanRelta"},"content":"        Person expectedPerson \u003d new PersonBuilder(BENSON).withTelegram(null).build();","lastModifiedDate":"2023-04-07"},{"lineNumber":158,"author":{"gitId":"EvitanRelta"},"content":"        assertEquals(expectedPerson, person.toModelType());","lastModifiedDate":"2023-04-07"},{"lineNumber":159,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":160,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":161,"author":{"gitId":"EvitanRelta"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":162,"author":{"gitId":"EvitanRelta"},"content":"    public void toModelType_invalidModules_throwsIllegalValueException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":163,"author":{"gitId":"EvitanRelta"},"content":"        List\u003cJsonAdaptedModule\u003e invalidModules \u003d new ArrayList\u003c\u003e(VALID_MODULES);","lastModifiedDate":"2023-04-07"},{"lineNumber":164,"author":{"gitId":"EvitanRelta"},"content":"        invalidModules.add(new JsonAdaptedModule(INVALID_MODULE));","lastModifiedDate":"2023-04-07"},{"lineNumber":165,"author":{"gitId":"EvitanRelta"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-04-07"},{"lineNumber":166,"author":{"gitId":"EvitanRelta"},"content":"                VALID_EDUCATION, VALID_REMARK, VALID_TELEGRAM, invalidModules, VALID_TAGS);","lastModifiedDate":"2023-04-07"},{"lineNumber":167,"author":{"gitId":"EvitanRelta"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-04-07"},{"lineNumber":168,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"EvitanRelta"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"Sheemo"},"content":"                VALID_EDUCATION, VALID_REMARK, VALID_TELEGRAM, VALID_MODULES, invalidTags);","lastModifiedDate":"2023-04-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Sheemo":11,"wendy0107":1,"EvitanRelta":82,"-":85}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"EvitanRelta"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"my-custom-data-path.json\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"EvitanRelta":1,"-":122}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.tag.Module;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"EvitanRelta"},"content":"        descriptor.setPhone(person.getOptionalPhone());","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"        descriptor.setEmail(person.getOptionalEmail());","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"        descriptor.setAddress(person.getOptionalAddress());","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"        descriptor.setEducation(person.getOptionalEducation());","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"EvitanRelta"},"content":"        descriptor.setTelegram(person.getOptionalTelegram());","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"EvitanRelta"},"content":"        descriptor.setModules(person.getModules());","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"EvitanRelta"},"content":"        Phone phoneObj \u003d phone \u003d\u003d null ? null : new Phone(phone);","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"EvitanRelta"},"content":"        descriptor.setPhone(phoneObj);","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"EvitanRelta"},"content":"        Email emailObj \u003d email \u003d\u003d null ? null : new Email(email);","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"EvitanRelta"},"content":"        descriptor.setEmail(emailObj);","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"EvitanRelta"},"content":"        Address addressObj \u003d address \u003d\u003d null ? null : new Address(address);","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"EvitanRelta"},"content":"        descriptor.setAddress(addressObj);","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"EvitanRelta"},"content":"     * Sets the {@code Education} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"EvitanRelta"},"content":"    public EditPersonDescriptorBuilder withEducation(String education) {","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"EvitanRelta"},"content":"        Education educationObj \u003d education \u003d\u003d null ? null : new Education(education);","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"EvitanRelta"},"content":"        descriptor.setEducation(educationObj);","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"EvitanRelta"},"content":"        return this;","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"EvitanRelta"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"EvitanRelta"},"content":"     * Sets the {@code Telegram} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"EvitanRelta"},"content":"    public EditPersonDescriptorBuilder withTelegram(String telegram) {","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"EvitanRelta"},"content":"        Telegram telegramObj \u003d telegram \u003d\u003d null ? null : new Telegram(telegram);","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"EvitanRelta"},"content":"        descriptor.setTelegram(telegramObj);","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":111,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"EvitanRelta"},"content":"     * Parses the {@code modules} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"wendy0107"},"content":"     * that we are building.","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"EvitanRelta"},"content":"    public EditPersonDescriptorBuilder withModules(String... modules) {","lastModifiedDate":"2023-03-31"},{"lineNumber":116,"author":{"gitId":"EvitanRelta"},"content":"        Set\u003cModule\u003e moduleSet \u003d Stream.of(modules).map(Module::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-31"},{"lineNumber":117,"author":{"gitId":"EvitanRelta"},"content":"        descriptor.setModules(moduleSet);","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"wendy0107"},"content":"        return this;","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"wendy0107":6,"EvitanRelta":34,"-":84}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"wendy0107"},"content":"import seedu.address.model.tag.Module;","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2023-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"wendy0107"},"content":"    public static final String DEFAULT_EDUCATION \u003d \"P6\";","lastModifiedDate":"2023-04-01"},{"lineNumber":28,"author":{"gitId":"wendy0107"},"content":"    public static final String DEFAULT_REMARK \u003d \"She likes aardvarks.\";","lastModifiedDate":"2023-04-01"},{"lineNumber":29,"author":{"gitId":"Sheemo"},"content":"    public static final String DEFAULT_TELEGRAM \u003d \"@Amybeebee123\";","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2023-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2023-04-01"},{"lineNumber":35,"author":{"gitId":"wendy0107"},"content":"    private Education education;","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"wendy0107"},"content":"    private Remark remark;","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"Sheemo"},"content":"    private Telegram telegram;","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"wendy0107"},"content":"    private Set\u003cModule\u003e modules;","lastModifiedDate":"2023-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2023-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2023-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-04-01"},{"lineNumber":49,"author":{"gitId":"wendy0107"},"content":"        education \u003d new Education(DEFAULT_EDUCATION);","lastModifiedDate":"2023-04-01"},{"lineNumber":50,"author":{"gitId":"wendy0107"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-04-01"},{"lineNumber":51,"author":{"gitId":"Sheemo"},"content":"        telegram \u003d new Telegram(DEFAULT_TELEGRAM);","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-01"},{"lineNumber":53,"author":{"gitId":"wendy0107"},"content":"        modules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2023-04-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2023-04-01"},{"lineNumber":61,"author":{"gitId":"wendy0107"},"content":"        phone \u003d personToCopy.getOptionalPhone().orElse(null);","lastModifiedDate":"2023-04-01"},{"lineNumber":62,"author":{"gitId":"wendy0107"},"content":"        email \u003d personToCopy.getOptionalEmail().orElse(null);","lastModifiedDate":"2023-04-01"},{"lineNumber":63,"author":{"gitId":"wendy0107"},"content":"        address \u003d personToCopy.getOptionalAddress().orElse(null);","lastModifiedDate":"2023-04-01"},{"lineNumber":64,"author":{"gitId":"wendy0107"},"content":"        education \u003d personToCopy.getOptionalEducation().orElse(null);","lastModifiedDate":"2023-04-01"},{"lineNumber":65,"author":{"gitId":"wendy0107"},"content":"        remark \u003d personToCopy.getOptionalRemark().orElse(null);","lastModifiedDate":"2023-04-01"},{"lineNumber":66,"author":{"gitId":"Sheemo"},"content":"        telegram \u003d personToCopy.getOptionalTelegram().orElse(null);","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2023-04-01"},{"lineNumber":68,"author":{"gitId":"wendy0107"},"content":"        modules \u003d new HashSet\u003c\u003e(personToCopy.getModules());","lastModifiedDate":"2023-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2023-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2023-04-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-04-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-04-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-04-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2023-04-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-04-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-04-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":87,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":88,"author":{"gitId":"wendy0107"},"content":"     * Parses the {@code modules} into a {@code Set\u003cModule\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-04-01"},{"lineNumber":89,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":90,"author":{"gitId":"wendy0107"},"content":"    public PersonBuilder withModules(String ... modules) {","lastModifiedDate":"2023-04-01"},{"lineNumber":91,"author":{"gitId":"wendy0107"},"content":"        this.modules \u003d SampleDataUtil.getModuleSet(modules);","lastModifiedDate":"2023-04-01"},{"lineNumber":92,"author":{"gitId":"wendy0107"},"content":"        return this;","lastModifiedDate":"2023-04-01"},{"lineNumber":93,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":94,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2023-04-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2023-04-01"},{"lineNumber":99,"author":{"gitId":"wendy0107"},"content":"        this.address \u003d address \u003d\u003d null ? null : new Address(address);","lastModifiedDate":"2023-04-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-04-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2023-04-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2023-04-01"},{"lineNumber":107,"author":{"gitId":"wendy0107"},"content":"        this.phone \u003d phone \u003d\u003d null ? null : new Phone(phone);","lastModifiedDate":"2023-04-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-04-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2023-04-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2023-04-01"},{"lineNumber":115,"author":{"gitId":"wendy0107"},"content":"        this.email \u003d email \u003d\u003d null ? null : new Email(email);","lastModifiedDate":"2023-04-01"},{"lineNumber":116,"author":{"gitId":"wendy0107"},"content":"        return this;","lastModifiedDate":"2023-04-01"},{"lineNumber":117,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":118,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":119,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":120,"author":{"gitId":"wendy0107"},"content":"     * Sets the {@code Education} of the {@code Person} that we are building.","lastModifiedDate":"2023-04-01"},{"lineNumber":121,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":122,"author":{"gitId":"wendy0107"},"content":"    public PersonBuilder withEducation(String education) {","lastModifiedDate":"2023-04-01"},{"lineNumber":123,"author":{"gitId":"wendy0107"},"content":"        this.education \u003d education \u003d\u003d null ? null : new Education(education);","lastModifiedDate":"2023-04-01"},{"lineNumber":124,"author":{"gitId":"wendy0107"},"content":"        return this;","lastModifiedDate":"2023-04-01"},{"lineNumber":125,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":126,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":127,"author":{"gitId":"wendy0107"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":128,"author":{"gitId":"wendy0107"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2023-04-01"},{"lineNumber":129,"author":{"gitId":"wendy0107"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":130,"author":{"gitId":"wendy0107"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2023-04-01"},{"lineNumber":131,"author":{"gitId":"wendy0107"},"content":"        this.remark \u003d remark \u003d\u003d null ? null : new Remark(remark);","lastModifiedDate":"2023-04-01"},{"lineNumber":132,"author":{"gitId":"wendy0107"},"content":"        return this;","lastModifiedDate":"2023-04-01"},{"lineNumber":133,"author":{"gitId":"wendy0107"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":134,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":135,"author":{"gitId":"EvitanRelta"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":136,"author":{"gitId":"EvitanRelta"},"content":"     * Sets the {@code Telegram} of the {@code Person} that we are building.","lastModifiedDate":"2023-04-04"},{"lineNumber":137,"author":{"gitId":"EvitanRelta"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":138,"author":{"gitId":"EvitanRelta"},"content":"    public PersonBuilder withTelegram(String telegram) {","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"EvitanRelta"},"content":"        this.telegram \u003d telegram \u003d\u003d null ? null : new Telegram(telegram);","lastModifiedDate":"2023-04-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-04-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2023-04-08"},{"lineNumber":144,"author":{"gitId":"EvitanRelta"},"content":"        return new Person(name, phone, email, address, education, remark, telegram, modules, tags);","lastModifiedDate":"2023-04-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":147,"author":{"gitId":"EvitanRelta"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-04-01"}],"authorContributionMap":{"Sheemo":4,"wendy0107":45,"EvitanRelta":10,"-":89}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDUCATION;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"EvitanRelta"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"Sheemo"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Education;","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"Sheemo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"Sheemo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"EvitanRelta"},"content":"import seedu.address.model.tag.Module;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"EvitanRelta"},"content":"        person.getOptionalPhone().map(Phone::toString).ifPresent(phone -\u003e sb.append(PREFIX_PHONE + phone + \" \"));","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"EvitanRelta"},"content":"        person.getOptionalEmail().map(Email::toString).ifPresent(email -\u003e sb.append(PREFIX_EMAIL + email + \" \"));","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"EvitanRelta"},"content":"        person.getOptionalAddress().map(Address::toString)","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"EvitanRelta"},"content":"                .ifPresent(address -\u003e sb.append(PREFIX_ADDRESS + address + \" \"));","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"EvitanRelta"},"content":"        person.getOptionalEducation().map(Education::toString)","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"EvitanRelta"},"content":"                .ifPresent(education -\u003e sb.append(PREFIX_EDUCATION + education + \" \"));","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"EvitanRelta"},"content":"        person.getOptionalRemark().map(Remark::toString).ifPresent(remark -\u003e sb.append(PREFIX_REMARK + remark + \" \"));","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"EvitanRelta"},"content":"        person.getOptionalTelegram().map(Telegram::toString)","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"EvitanRelta"},"content":"                .ifPresent(telegram -\u003e sb.append(PREFIX_TELEGRAM + telegram + \" \"));","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"EvitanRelta"},"content":"        person.getModules().stream().forEach(","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"EvitanRelta"},"content":"                s -\u003e sb.append(PREFIX_MODULE + s.moduleName + \" \")","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"wendy0107"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"EvitanRelta"},"content":"        descriptor.getPhone().orElseGet(Optional::empty)","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"EvitanRelta"},"content":"                .ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"EvitanRelta"},"content":"        descriptor.getEmail().orElseGet(Optional::empty)","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"EvitanRelta"},"content":"                .ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"EvitanRelta"},"content":"        descriptor.getAddress().orElseGet(Optional::empty)","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"EvitanRelta"},"content":"                .ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"EvitanRelta"},"content":"        descriptor.getEducation().orElseGet(Optional::empty)","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"EvitanRelta"},"content":"                .ifPresent(education -\u003e sb.append(PREFIX_EDUCATION).append(education.value).append(\" \"));","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"Bentimate"},"content":"        descriptor.getRemark().orElseGet(Optional::empty)","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"Bentimate"},"content":"                .ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark.value).append(\"  \"));","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"EvitanRelta"},"content":"        descriptor.getTelegram().orElseGet(Optional::empty)","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"EvitanRelta"},"content":"                .ifPresent(telegram -\u003e sb.append(PREFIX_TELEGRAM).append(telegram.value).append(\"  \"));","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"EvitanRelta"},"content":"        if (descriptor.getModules().isPresent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"EvitanRelta"},"content":"            Set\u003cModule\u003e modules \u003d descriptor.getModules().get();","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"EvitanRelta"},"content":"            if (modules.isEmpty()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"EvitanRelta"},"content":"                sb.append(PREFIX_MODULE + \" \");","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"wendy0107"},"content":"            } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"EvitanRelta"},"content":"                modules.forEach(s -\u003e sb.append(PREFIX_MODULE).append(s.moduleName).append(\" \"));","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"wendy0107"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"wendy0107"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"wendy0107"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":94,"author":{"gitId":"EvitanRelta"},"content":"                sb.append(PREFIX_TAG + \" \");","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Sheemo":3,"wendy0107":5,"Bentimate":2,"EvitanRelta":36,"-":55}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EDUCATION_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EDUCATION_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"EvitanRelta"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"EvitanRelta"},"content":"    public static final Person ALICE \u003d new PersonBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"EvitanRelta"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"EvitanRelta"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"EvitanRelta"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"EvitanRelta"},"content":"            .withEducation(\"P1\")","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"EvitanRelta"},"content":"            .withRemark(\"She hates bob.\")","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"EvitanRelta"},"content":"            .withTelegram(\"@alice123\")","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"EvitanRelta"},"content":"            .withModules(\"CS2101\")","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"EvitanRelta"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"EvitanRelta"},"content":"            .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"EvitanRelta"},"content":"    public static final Person BENSON \u003d new PersonBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"EvitanRelta"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"EvitanRelta"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"EvitanRelta"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"EvitanRelta"},"content":"            .withEducation(\"P2\")","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"EvitanRelta"},"content":"            .withRemark(\"He can\u0027t take beer!\")","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"EvitanRelta"},"content":"            .withModules(\"CS2103T\", \"CS2030\")","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"Sheemo"},"content":"            .withTelegram(\"@bensonboy\")","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"EvitanRelta"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"EvitanRelta"},"content":"            .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"EvitanRelta"},"content":"    public static final Person CARL \u003d new PersonBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"EvitanRelta"},"content":"            .withName(\"Carl Kurz\")","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"EvitanRelta"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"EvitanRelta"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"EvitanRelta"},"content":"            .withAddress(\"wall street\")","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"EvitanRelta"},"content":"            .withEducation(\"P3\")","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"EvitanRelta"},"content":"            .withRemark(\"Needs help with algebra.\")","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"EvitanRelta"},"content":"            .withTelegram(null)","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"EvitanRelta"},"content":"            .withModules()","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"EvitanRelta"},"content":"            .withTags()","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"EvitanRelta"},"content":"            .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"EvitanRelta"},"content":"    public static final Person DANIEL \u003d new PersonBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"EvitanRelta"},"content":"            .withName(\"Daniel Meier\")","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"EvitanRelta"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"EvitanRelta"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"EvitanRelta"},"content":"            .withAddress(\"10th street\")","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"EvitanRelta"},"content":"            .withEducation(\"P4\")","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"EvitanRelta"},"content":"            .withRemark(\"Needs help with compo.\")","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"EvitanRelta"},"content":"            .withTelegram(\"@danielm\")","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"EvitanRelta"},"content":"            .withModules()","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"EvitanRelta"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"EvitanRelta"},"content":"            .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"EvitanRelta"},"content":"    public static final Person ELLE \u003d new PersonBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"EvitanRelta"},"content":"            .withName(\"Elle Meyer\")","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"EvitanRelta"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"EvitanRelta"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"EvitanRelta"},"content":"            .withAddress(\"michegan ave\")","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"EvitanRelta"},"content":"            .withEducation(\"P5\")","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"EvitanRelta"},"content":"            .withRemark(\"Needs more time on limits\")","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"EvitanRelta"},"content":"            .withTelegram(\"@ellomayor\")","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"EvitanRelta"},"content":"            .withModules()","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"EvitanRelta"},"content":"            .withTags()","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"EvitanRelta"},"content":"            .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"EvitanRelta"},"content":"    public static final Person FIONA \u003d new PersonBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"EvitanRelta"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"EvitanRelta"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"EvitanRelta"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"EvitanRelta"},"content":"            .withAddress(\"little tokyo\")","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"EvitanRelta"},"content":"            .withEducation(\"P6\")","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"EvitanRelta"},"content":"            .withRemark(\"Is good at algebra\")","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"EvitanRelta"},"content":"            .withTelegram(\"@theorge\")","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"EvitanRelta"},"content":"            .withModules()","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"EvitanRelta"},"content":"            .withTags()","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"EvitanRelta"},"content":"            .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"EvitanRelta"},"content":"    public static final Person GEORGE \u003d new PersonBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"EvitanRelta"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"EvitanRelta"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"EvitanRelta"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"EvitanRelta"},"content":"            .withAddress(\"4th street\")","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"EvitanRelta"},"content":"            .withEducation(\"Sec 2\")","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"EvitanRelta"},"content":"            .withRemark(\"Is bad at argumentative essays\")","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"EvitanRelta"},"content":"            .withTelegram(\"@georgia\")","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"EvitanRelta"},"content":"            .withModules()","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"EvitanRelta"},"content":"            .withTags()","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"EvitanRelta"},"content":"            .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":109,"author":{"gitId":"EvitanRelta"},"content":"    public static final Person HOON \u003d new PersonBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"EvitanRelta"},"content":"            .withName(\"Hoon Meier\")","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"EvitanRelta"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"EvitanRelta"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"EvitanRelta"},"content":"            .withAddress(\"little india\")","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"EvitanRelta"},"content":"            .withEducation(\"Sec 3\")","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"EvitanRelta"},"content":"            .withRemark(\"Needs help with trigo\")","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"EvitanRelta"},"content":"            .withModules()","lastModifiedDate":"2023-03-31"},{"lineNumber":117,"author":{"gitId":"EvitanRelta"},"content":"            .withTags()","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"EvitanRelta"},"content":"            .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"EvitanRelta"},"content":"    public static final Person IDA \u003d new PersonBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"EvitanRelta"},"content":"            .withName(\"Ida Mueller\")","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"EvitanRelta"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"EvitanRelta"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"EvitanRelta"},"content":"            .withAddress(\"chicago ave\")","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"EvitanRelta"},"content":"            .withEducation(\"Sec 4\")","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"EvitanRelta"},"content":"            .withRemark(\"Needs help with angles\")","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"EvitanRelta"},"content":"            .withModules()","lastModifiedDate":"2023-03-31"},{"lineNumber":127,"author":{"gitId":"EvitanRelta"},"content":"            .withTags()","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"EvitanRelta"},"content":"            .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":131,"author":{"gitId":"EvitanRelta"},"content":"    public static final Person AMY \u003d new PersonBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"EvitanRelta"},"content":"            .withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"EvitanRelta"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-22"},{"lineNumber":134,"author":{"gitId":"EvitanRelta"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-22"},{"lineNumber":135,"author":{"gitId":"EvitanRelta"},"content":"            .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"EvitanRelta"},"content":"            .withEducation(VALID_EDUCATION_AMY)","lastModifiedDate":"2023-04-07"},{"lineNumber":137,"author":{"gitId":"EvitanRelta"},"content":"            .withRemark(null)","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"EvitanRelta"},"content":"            .withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"EvitanRelta"},"content":"            .withModules()","lastModifiedDate":"2023-03-31"},{"lineNumber":140,"author":{"gitId":"EvitanRelta"},"content":"            .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"EvitanRelta"},"content":"            .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"EvitanRelta"},"content":"    public static final Person BOB \u003d new PersonBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"EvitanRelta"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"EvitanRelta"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"EvitanRelta"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"EvitanRelta"},"content":"            .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"EvitanRelta"},"content":"            .withEducation(VALID_EDUCATION_BOB)","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"EvitanRelta"},"content":"            .withRemark(null)","lastModifiedDate":"2023-03-22"},{"lineNumber":149,"author":{"gitId":"EvitanRelta"},"content":"            .withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"EvitanRelta"},"content":"            .withModules()","lastModifiedDate":"2023-03-31"},{"lineNumber":151,"author":{"gitId":"EvitanRelta"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Sheemo":1,"EvitanRelta":119,"-":52}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import seedu.address.ui.TestFxmlObject?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"EvitanRelta"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"EvitanRelta":1,"-":3}}]
